#!/usr/bin/env ruby

require_relative 'lib/command_args'
require_relative 'lib/deployer'

args = CommandArgs.new

# Keep track of first deployed revision (git hash), so we can deploy the same revision to all target groups
revision = nil

args.deployments.each_with_index do |deployment, idx|
  deployment[:revision] = revision if idx.positive? && revision.present?
  deployer = Deployer.new(**deployment)
  revision ||= deployer.revision # Set revision for next deployments

  puts "Deploying #{deployer.version} to #{deployer.target_group_name} (#{idx + 1}/#{args.deployments.count})..."
  deployer.run!

  # poll between deployments to prevent scaling out too much while we have
  # double the web containers.
  # i.e. don't proceed until it has stabilized
  EcsTools.new.poll_state_until_stable!(CommandArgs.cluster, max_unfinished: 4)
end
EcsTools.new.poll_state_until_stable!(CommandArgs.cluster)

puts 'Updating one ECS instance agent if needed.'
EcsTools.new.update_ecs_agents!(CommandArgs.cluster)
