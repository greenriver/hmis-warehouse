{
  "ignored_warnings": [
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "0d56b723a341f97ce38e8bd32d706526cad0a202177cc4c9ab6e22a23f7a3676",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/users/omniauth_callbacks_controller.rb",
      "line": 22,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(after_sign_in_path_for(User.from_omniauth(request.env[\"omniauth.auth\"])))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Users::OmniauthCallbacksController",
        "method": "okta"
      },
      "user_input": "User.from_omniauth(request.env[\"omniauth.auth\"])",
      "confidence": "Weak",
      "note": "after_sign_in_path_for does sometimes return an offsite redirect but not an uncontrolled one"
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "0d56b723a341f97ce38e8bd32d706526cad0a202177cc4c9ab6e22a23f7a3676",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/users/omniauth_callbacks_controller.rb",
      "line": 29,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(after_sign_in_path_for(User.from_omniauth(request.env[\"omniauth.auth\"])))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Users::OmniauthCallbacksController",
        "method": "okta"
      },
      "user_input": "User.from_omniauth(request.env[\"omniauth.auth\"])",
      "confidence": "Weak",
      "note": "after_sign_in_path_for does sometimes return an offsite redirect but not an uncontrolled one"
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "0fc8bda3aa0534d15b8341980b3cd903e10cf9bf203e38eb3abbc26ff6b5c0c2",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 55,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"echo #{lftp_bookmark} > #{lftp_bookmark_location}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "set_lftp_bookmark"
      },
      "user_input": "lftp_bookmark",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "149f43ca0c9d46c20323967d168bcf5e5dc81816dd870fc6ce1cd8f047d79639",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/bi/view_maintainer.rb",
      "line": 398,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "GrdaWarehouseBase.connection.execute(\"DROP VIEW IF EXISTS #{name}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Bi::ViewMaintainer",
        "method": "safe_drop_view"
      },
      "user_input": "name",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "150ecb715f71e17ac9457b3b0a5a938f6c8023af3e2199132fce57d1e6c60309",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/rds_sql_server/lsa_summary.rb",
      "line": 475,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "SqlServerBase.connection.exec_query(\"dbo.sp_lsaPersonDemographics #{pop[:pop_id]}, #{(hh_type or \"NULL\")}, '#{param}'\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "LsaSqlServer::LSAReportSummary",
        "method": "fetch_demographics"
      },
      "user_input": "pop[:pop_id]",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 24,
      "fingerprint": "167d304a2a6e35f5514e9151322701f7330f801e1b29f03e072fadc7e6e35dae",
      "check_name": "UnsafeReflection",
      "message": "Unsafe reflection method `constantize` called with model attribute",
      "file": "app/jobs/warehouse_reports/dashboard_report_job.rb",
      "line": 16,
      "link": "https://brakemanscanner.org/docs/warning_types/remote_code_execution/",
      "code": "GrdaWarehouse::WarehouseReports::Dashboard::Base.sub_populations_by_type[report_type.to_sym][sub_population.to_sym].constantize",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "WarehouseReports::DashboardReportJob",
        "method": "perform"
      },
      "user_input": "GrdaWarehouse::WarehouseReports::Dashboard::Base.sub_populations_by_type[report_type.to_sym]",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "17b51608f07889a142d8f548bbe24583b3bab7d8146caeedc9ad2c7e9ad1d2bf",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/bi/view_maintainer.rb",
      "line": 418,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "GrdaWarehouseBase.connection.execute(\"CREATE OR REPLACE VIEW #{name} AS #{sql_definition}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Bi::ViewMaintainer",
        "method": "safe_create_view"
      },
      "user_input": "name",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "183d6735294c38b8c0b0611b9ad3b005663982697937cb37c89c72f00df84e1f",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/importers/hmis_six_one_one/sftp.rb",
      "line": 82,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"atool --repack -q #{\"#{Rails.root.to_s}/#{@local_path}/#{file}\"} #{\"#{Rails.root.to_s}/#{@local_path}/#{file}\".gsub(\".7z\", \".zip\")}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Importers::HMISSixOneOne::Sftp",
        "method": "force_standard_zip"
      },
      "user_input": "@local_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "18a6f39c30bf1ec1d965f076562af5578472b944d2e7324025e393523c8f03e2",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 66,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"echo 'set mirror:exclude-regex ^[.b]+' >> #{lftp_config_location}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "set_lftp_confg"
      },
      "user_input": "lftp_config_location",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "1df4a1869c415ff591772486343b6515afd1635cc8320e99dff0ec4d575c5583",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/service_history_service.rb",
      "line": 136,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"select count(*) from information_schema.triggers where trigger_name = '#{trigger_name}'\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::ServiceHistoryService",
        "method": "GrdaWarehouse::ServiceHistoryService.trigger_exists?"
      },
      "user_input": "trigger_name",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "272bd9135442f395012a87ac47a02fe2dcaa8bf8f7db7b78b079036a4279e439",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "config/deploy/docker/lib/ecs_tools.rb",
      "line": 25,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"ssh #{\"ecs0.openpath.host\"} 'docker commit #{`ssh #{\"ecs0.openpath.host\"} \"docker ps -a -n 10\"`.split(/\\n/).grep(/#{IMAGE}/).first.split(/\\s/).first} shell'\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "EcsTools",
        "method": "shell"
      },
      "user_input": "`ssh #{\"ecs0.openpath.host\"} \"docker ps -a -n 10\"`.split(/\\n/).grep(/#{IMAGE}/).first.split(/\\s/).first",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "2d5a0735c8eef436174e943c26f2f3107fdbe465dd46e480ad60ed6b43b29b5b",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 70,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"rm -rf #{lftp_bookmark_path}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "remove_lftp_bookmark"
      },
      "user_input": "lftp_bookmark_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "2d9e2650f0d201448eb48c3fe30e82042060f478c362cd5c9addce551f8707f2",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 42,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"mkdir -p #{tmp_destination}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "ensure_tmp_destination"
      },
      "user_input": "tmp_destination",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "34fd658393a9fb9bf9452d6dafc2a7dea87444ddd212196aef05e44065feeeb8",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 47,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"rm -rf #{tmp_destination}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "remove_tmp_destination"
      },
      "user_input": "tmp_destination",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "36b35863c16487c4b159e6256376dc53950282919cf2d0e6ecdc46f3752e0924",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/account_two_factors/show.haml",
      "line": 8,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "current_user.generate_otp_backup_codes!.join(\"<br />\")",
      "render_path": [
        {
          "type": "controller",
          "class": "AccountTwoFactorsController",
          "method": "show",
          "line": 21,
          "file": "app/controllers/account_two_factors_controller.rb",
          "rendered": {
            "name": "account_two_factors/show",
            "file": "app/views/account_two_factors/show.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "account_two_factors/show"
      },
      "user_input": "current_user.generate_otp_backup_codes!.join(\"<br />\")",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "3e94c32e2e326e0b24e275e1018e19c8d8e04b138e81da4366a9ab06617bdb85",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/client.rb",
      "line": 389,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"EXISTS (#{inner_scope.to_sql.gsub(\"\\\"Client\\\".\", \"\\\"inner_clients\\\".\").gsub(\"\\\"Client\\\"\", \"\\\"Client\\\" as \\\"inner_clients\\\"\")} and \\\"Client\\\".\\\"id\\\" = \\\"inner_clients\\\".\\\"id\\\")\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::Hud::Client",
        "method": "GrdaWarehouse::Hud::Client.exists_with_inner_clients"
      },
      "user_input": "inner_scope.to_sql.gsub(\"\\\"Client\\\".\", \"\\\"inner_clients\\\".\").gsub(\"\\\"Client\\\"\", \"\\\"Client\\\" as \\\"inner_clients\\\"\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "3ea612cf8f87c4df2fb19b416feb0917b443306a55319ddf1d6978b79dedeaea",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 87,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"lftp -c \\\"open #{slug}; lcd #{tmp_destination}; mirror --verbose --exclude tmp\\\"\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "fetch"
      },
      "user_input": "slug",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "475555bc06d04eb8ac4900ec1761cf15066a8e28ab69ddb55cf9569d9413c2a4",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/rds_sql_server/lsa/fy2019/lsa_queries.rb",
      "line": 22,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "SqlServerBase.connection.execute(\"#{File.read(step)}\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "LsaSqlServer::LSAQueries",
        "method": "run_query"
      },
      "user_input": "File.read(step)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "560654d4119023b98ace9aa621f8578d4bbf9842e89acc251bda37a3ca2476ab",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/reporting/project_data_quality_reports/version_four/display.rb",
      "line": 1182,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "send(options[:denominator]).where(\"#{key}_#{measure}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::ProjectDataQualityReports::VersionFour::Display",
        "method": "project_group_completeness"
      },
      "user_input": "key",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "5b822772717cae02ef27ccb1a1db82c0dd6f1380b3dd8f4d712d9a65190f0202",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/importers/hmis_twenty_twenty/sftp.rb",
      "line": 82,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"atool --repack -q #{\"#{Rails.root.to_s}/#{@local_path}/#{file}\"} #{\"#{Rails.root.to_s}/#{@local_path}/#{file}\".gsub(\".7z\", \".zip\")}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Importers::HmisTwentyTwenty::Sftp",
        "method": "force_standard_zip"
      },
      "user_input": "@local_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "615f7900b129c22f4d71c443ead85e0694fc30435dfdc15e52ec03a94d2a3057",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "config/deploy/docker/lib/ecs_tools.rb",
      "line": 38,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "exec(\"awslogs get #{group} ALL --watch\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "EcsTools",
        "method": "logs"
      },
      "user_input": "group",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "6463026c70cc0039bae21ca8e37fbd46172778b151ae4813a5a1e469a700b357",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/rds_sql_server/rds.rb",
      "line": 245,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "SqlServerBootstrapModel.connection.execute(\"if not exists(select * from sys.databases where name = '#{database}')\\n  select 0;\\nelse\\n  select 1;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Rds",
        "method": "db_exists?"
      },
      "user_input": "database",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "6939d235d9f32e7a2694b926a5cf73222ec7b924323cb268a68c11d2a20ea082",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "config/deploy/docker/lib/deployer.rb",
      "line": 313,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "`docker image ls -f 'reference=#{repo_name}' | grep #{_ruby_version}--pre-cache`",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Deployer",
        "method": "_pre_cache_image_exists?"
      },
      "user_input": "repo_name",
      "confidence": "Medium",
      "note": "This is all internal code."
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "6cfd47b3522f879e176ed00c1639c8431e26cf5798564e7ba8e89633bdda9f61",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "config/deploy/docker/lib/deployer.rb",
      "line": 149,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "`git rev-parse #{`git rev-parse --abbrev-ref HEAD`.chomp}`",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Deployer",
        "method": "_check_that_you_pushed_to_remote!"
      },
      "user_input": "`git rev-parse --abbrev-ref HEAD`.chomp",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "70b70b984f26e96e4c136d1371587575175b3f7e6e7cb0c597f1a73c7cd9f781",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/warehouse_reports/chronic_housed/index.haml",
      "line": 42,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "site_chronic_source.where(:date => ::Filters::DateRange.new((params.permit(:range => ([:start, :end]))[:range] or { :start => 3.month.ago.to_date, :end => 1.months.ago.to_date })).range).group_by(&:client_id)[exits.first.client_id].map(&:date).uniq.join(\"<br />\")",
      "render_path": [
        {
          "type": "controller",
          "class": "WarehouseReports::ChronicHousedController",
          "method": "index",
          "line": 17,
          "file": "app/controllers/warehouse_reports/chronic_housed_controller.rb",
          "rendered": {
            "name": "warehouse_reports/chronic_housed/index",
            "file": "app/views/warehouse_reports/chronic_housed/index.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "warehouse_reports/chronic_housed/index"
      },
      "user_input": "params.permit(:range => ([:start, :end]))[:range]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "715caf7c369b0362888de763f9a7319144834a7915602582eb32ea620b3dcca9",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/rds_sql_server/lsa/fy2019/lsa_queries.rb",
      "line": 76,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "SqlServerBase.connection.execute((\"        -- 4.1 Get Project Records for Export\\n        delete from lsa_Project\\n\\n        insert into lsa_Project\\n          (ProjectID, OrganizationID, ProjectName\\n          , OperatingStartDate, OperatingEndDate\\n          , ContinuumProject, ProjectType, HousingType\\n          , TrackingMethod, HMISParticipatingProject\\n          , TargetPopulation\\n          , DateCreated, DateUpdated, ExportID)\\n        select distinct\\n          hp.ProjectID, hp.OrganizationID, left(hp.ProjectName, 50)\\n          , format(hp.OperatingStartDate, 'yyyy-MM-dd')\\n          , case when hp.OperatingEndDate is not null then format(hp.OperatingEndDate, 'yyyy-MM-dd') else null end\\n          , hp.ContinuumProject, hp.ProjectType, hp.HousingType\\n          , hp.TrackingMethod, hp.HMISParticipatingProject\\n          , hp.TargetPopulation\\n          , format(hp.DateCreated, 'yyyy-MM-dd hh:mm:ss')\\n          , format(hp.DateUpdated, 'yyyy-MM-dd hh:mm:ss')\\n          , rpt.ReportID\\n        from hmis_Project hp\\n        inner join lsa_Report rpt on hp.OperatingStartDate <= rpt.ReportEnd\\n        inner join hmis_ProjectCoC coc on coc.CoCCode = rpt.ReportCoC\\n        where hp.DateDeleted is null\\n          and hp.ContinuumProject = 1\\n          and hp.ProjectType in (1,2,3,8,9,10,13)\\n          and hp.OperatingStartDate <= rpt.ReportEnd\\n          and (hp.OperatingEndDate is null\\n            or\\t(hp.OperatingEndDate >= rpt.ReportStart\\n              and hp.OperatingEndDate > hp.OperatingStartDate)\\n            )\\n\" + \"and hp.ProjectID in(#{project_ids.join(\",\")})\"))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "LsaSqlServer::LSAQueries",
        "method": "insert_projects"
      },
      "user_input": "project_ids.join(\",\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "7309180c3aafe13ae6fdc0948ec954da8c7c62359d1d0bbf94f91251bbcd7be9",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/admin/roles/index.haml",
      "line": 45,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "Role.category_for(:permission => permission).to_s",
      "render_path": [
        {
          "type": "controller",
          "class": "Admin::RolesController",
          "method": "index",
          "line": 17,
          "file": "app/controllers/admin/roles_controller.rb",
          "rendered": {
            "name": "admin/roles/index",
            "file": "app/views/admin/roles/index.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "admin/roles/index"
      },
      "user_input": null,
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "781aac46e7b1378f886f2b9f429b4b36766b82a3ce2c8453f8be825781ea49b5",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/glacier/runner.rb",
      "line": 37,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"psql -d postgres --username=#{db_user} --no-password --host=#{(provided_db_host or db_host)} -c 'create database #{database_name}'\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Glacier::Runner",
        "method": "restore_database!"
      },
      "user_input": "db_user",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "7c66a105e2dc82603b638726429867081fd7bdfc09b716d4699dcf62401a11e6",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/reporting/project_data_quality_reports/version_four/display.rb",
      "line": 1214,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "send(options[:denominator]).where(:project_id => hud_project.id, \"#{key}_#{measure}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::ProjectDataQualityReports::VersionFour::Display",
        "method": "project_completeness"
      },
      "user_input": "key",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "7e17f63fe0ee996de8b8f7dde5a7277c192d0bb19ea27c0ecc07f80ffdb4154c",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/report_generators/lsa/fy2019/all.rb",
      "line": 379,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "SqlServerBase.connection.execute(\"drop database #{@rds.database}\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ReportGenerators::Lsa::Fy2019::All",
        "method": "remove_temporary_rds"
      },
      "user_input": "@rds.database",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "81569b028ce6ab31f73fb93a21bf6620a32d747e1c75beaf145a0589b6579058",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/report_generators/lsa/fy2019/all.rb",
      "line": 660,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "SqlServerBase.connection.execute((\"\" + \" ALTER TABLE #{table_name} DROP COLUMN id; \"))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ReportGenerators::Lsa::Fy2019::All",
        "method": "remove_missing_identity_columns"
      },
      "user_input": "table_name",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "822ab18e43cc8a9807a17e1d1ecac0217f8446e30ea8531ce8e75f8402dc1ea0",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/shape/shared_behaviors.rb",
      "line": 48,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"geom = ST_MakeValid(ST_Simplify(geom, #{simplification_distance_in_degrees}))\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::Shape::SharedBehaviors::ClassMethods",
        "method": "simplify!"
      },
      "user_input": "simplification_distance_in_degrees",
      "confidence": "Medium",
      "note": "injection is always a number and not from the database or user input"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "82aadb4eb72cf1375fedd19ae96c5db6f000edd4c357495ea1c068ff3031103e",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/arel_helper.rb",
      "line": 44,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"EXISTS (#{ar_query.select(column_name).to_sql.gsub(\"#{quoted_table_name}.\", \"\\\"#{alias_name}\\\".\").gsub(quoted_table_name, \"#{quoted_table_name} as \\\"#{alias_name}\\\"\")} and #{quoted_table_name}.\\\"#{column_name}\\\" = \\\"#{alias_name}\\\".\\\"#{column_name}\\\") \")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ArelHelper",
        "method": "ArelHelper.exists_sql"
      },
      "user_input": "ar_query.select(column_name).to_sql.gsub(\"#{quoted_table_name}.\", \"\\\"#{alias_name}\\\".\").gsub(quoted_table_name, \"#{quoted_table_name} as \\\"#{alias_name}\\\"\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "850068cbcbd30e554efc5cc597f03ad14dfbd68240142d37a64e9f7a6c53a1a7",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 63,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"mkdir -p #{lftp_bookmark_path}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "set_lftp_confg"
      },
      "user_input": "lftp_bookmark_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "85283b166eb4bcf02cc87be10e06c2d8433300155419b05dc24758732632d3ce",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/organization.rb",
      "line": 57,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"#{has_access_to_organization_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_organization_through_data_source(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Organization",
        "method": null
      },
      "user_input": "has_access_to_organization_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "88ba6947358eb613f838a50fc8a1b137f655dda08126594643d90dca1df7daa9",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/organization.rb",
      "line": 45,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"#{has_access_to_organization_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_organization_through_data_source(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_organization_through_projects(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Organization",
        "method": null
      },
      "user_input": "has_access_to_organization_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "90ff2d536c66b271d5f9e428f8f430887e06ca4bf3031ede5a3846d9f7c12294",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/report_generators/lsa/fy2019/all.rb",
      "line": 651,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "SqlServerBase.connection.execute((\"\" + \" ALTER TABLE #{table_name} ADD id BIGINT identity (1,1) NOT NULL; \"))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ReportGenerators::Lsa::Fy2019::All",
        "method": "add_missing_identity_columns"
      },
      "user_input": "table_name",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "9692613627d688f403a35e4849b3124d0777a54374a6433aeeddc593711e2e19",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/scanner_ids_controller.rb",
      "line": 43,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ScannerIdsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "9692613627d688f403a35e4849b3124d0777a54374a6433aeeddc593711e2e19",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/scanner_ids_controller.rb",
      "line": 48,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ScannerIdsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "9692613627d688f403a35e4849b3124d0777a54374a6433aeeddc593711e2e19",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/scanner_ids_controller.rb",
      "line": 63,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ScannerIdsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "9692613627d688f403a35e4849b3124d0777a54374a6433aeeddc593711e2e19",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/scanner_ids_controller.rb",
      "line": 69,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ScannerIdsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "9692613627d688f403a35e4849b3124d0777a54374a6433aeeddc593711e2e19",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/scanner_ids_controller.rb",
      "line": 73,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ScannerIdsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "a005f0450a283e9aa0cfbb7447941c9b23a6b49277b9e02d914765b5ccf577cc",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/project.rb",
      "line": 327,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"#{has_access_to_project_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_project_through_organization(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_project_through_data_source(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_project_through_coc_codes(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Project",
        "method": null
      },
      "user_input": "has_access_to_project_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 24,
      "fingerprint": "a018a2a65716f162e78639cf9ecc84440e48c1b4001c80db96d96f5ca82c11ab",
      "check_name": "UnsafeReflection",
      "message": "Unsafe reflection method `constantize` called with model attribute",
      "file": "app/controllers/cohorts/clients_controller.rb",
      "line": 417,
      "link": "https://brakemanscanner.org/docs/warning_types/remote_code_execution/",
      "code": "GrdaWarehouse::Cohort.available_columns.map(&:class).map(&:name).select do\n (m == params.require(:field))\n end.first.constantize",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Cohorts::ClientsController",
        "method": "field"
      },
      "user_input": "GrdaWarehouse::Cohort.available_columns.map(&:class)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "a08d95befc1580f092ce13081130707a8ba4077b7241edd87ff59371477ed76c",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "app/controllers/concerns/client_controller.rb",
      "line": 43,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ClientController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "a5ae0e19f1c215e30af6286dee8a557c5215860d59a3a4c4ca3a914e2aadb58e",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 54,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"mkdir -p #{lftp_bookmark_path}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "set_lftp_bookmark"
      },
      "user_input": "lftp_bookmark_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "a9040593943192bed3788b5c04a11f50ce20482af33b84ec76b05e8eec6838c8",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/bi/view_maintainer.rb",
      "line": 412,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "GrdaWarehouseBase.connection.execute(\"DO $$\\nBEGIN\\n  CREATE ROLE #{role} WITH NOLOGIN;\\n  EXCEPTION WHEN DUPLICATE_OBJECT THEN\\n  RAISE NOTICE 'not creating role #{role} -- it already exists';\\nEND\\n$$;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Bi::ViewMaintainer",
        "method": "safe_create_role"
      },
      "user_input": "role",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "ad042c2ba6d2afb23c6787f70e5955d726e07932c58a8508bb0834a99e207050",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 64,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"echo 'set ssl:verify-certificate no' > #{lftp_config_location}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "set_lftp_confg"
      },
      "user_input": "lftp_config_location",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "ad643b5cc0525dc24944b965b530e1b65e3c3d7524efb0526565ec3f3f0df4a3",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/messages/show.haml",
      "line": 7,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "simple_format(current_user.messages.find(params.require(:id)).body_html).gsub(URI.regexp([\"http\", \"https\"]), \"<a href=\\\"\\\\0\\\">\\\\0</a>\")",
      "render_path": [
        {
          "type": "controller",
          "class": "MessagesController",
          "method": "show",
          "line": 34,
          "file": "app/controllers/messages_controller.rb",
          "rendered": {
            "name": "messages/show",
            "file": "app/views/messages/show.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "messages/show"
      },
      "user_input": "current_user.messages.find(params.require(:id))",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "afb39717e433c0f281415f74557735acd21b0970bcf69d294dd987a63f2ee6eb",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "config/deploy/docker/lib/deployer.rb",
      "line": 148,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "`git ls-remote origin | grep #{`git rev-parse --abbrev-ref HEAD`.chomp}`",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Deployer",
        "method": "_check_that_you_pushed_to_remote!"
      },
      "user_input": "`git rev-parse --abbrev-ref HEAD`.chomp",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "b2e9f8410ba6ed5963253a0daa5e634213118de8263268da7799b1a3440965fb",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "config/deploy/docker/lib/deployer.rb",
      "line": 143,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "`git rev-parse HEAD > #{_assets_path}/REVISION`",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Deployer",
        "method": "_set_revision!"
      },
      "user_input": "_assets_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "bae76e9c6d1f20b593d1307d83fa734b37ce1048ed63f29c7b2607617bf9e009",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/imports_controller.rb",
      "line": 18,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "import_scope.select(:id, :data_source_id, :completed_at, :created_at, :updated_at, :upload_id).order(\"#{sort_column} #{sort_direction}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ImportsController",
        "method": "index"
      },
      "user_input": "sort_column",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "bc859ee98d096f8661ae7acda9fc8c122004a13934a088f7c73ddbdbe8363a67",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/user_training_controller.rb",
      "line": 34,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(Talentlms::Facade.new.course_url(current_user, Talentlms::Config.first.courseid, (clients_url or root_url), logout_talentlms_url))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "UserTrainingController",
        "method": "index"
      },
      "user_input": "Talentlms::Facade.new.course_url(current_user, Talentlms::Config.first.courseid, (clients_url or root_url), logout_talentlms_url)",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "c001b77515db71c33c42f71ebb9f55b97fc3fa1dc0f7c8bc3c6255abcf416607",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/grda_warehouse/lftp_s3_sync.rb",
      "line": 65,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"echo 'set ftp:ssl-protect-data true' >> #{lftp_config_location}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::LftpS3Sync",
        "method": "set_lftp_confg"
      },
      "user_input": "lftp_config_location",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "c5bd3adf51202218b95877c9d15e95e4053876e998ccaca44a7054ea9efa9803",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/reporting/monthly_reports/base.rb",
      "line": 409,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"CREATE TABLE #{Reporting::MonthlyReports::Base.remainder_table} (CHECK ( #{\" type NOT IN ('#{Reporting::MonthlyReports::Base.sub_tables.keys.join(\"', '\")}') \"} ) ) INHERITS (#{Reporting::MonthlyReports::Base.parent_table});\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::MonthlyReports::Base",
        "method": "Reporting::MonthlyReports::Base.ensure_tables"
      },
      "user_input": "Reporting::MonthlyReports::Base.remainder_table",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "c6d2416929705fe07d75e0cba96b643e0d9361ef1329ece172ff0fcd797deb31",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/admin/users/_login_chart.haml",
      "line": 15,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "ActivityLog.for_chart",
      "render_path": [
        {
          "type": "template",
          "name": "admin/users/index",
          "line": 4,
          "file": "app/views/admin/users/index.haml",
          "rendered": {
            "name": "admin/users/_login_chart",
            "file": "app/views/admin/users/_login_chart.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "admin/users/_login_chart"
      },
      "user_input": null,
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "cf9fa747c96c496625affc43ebc9ecdb01c696ca61f911e2de7da2f6188b251d",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/admin/translation_keys_controller.rb",
      "line": 62,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(TranslationKey.find(params[:id].to_i))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::TranslationKeysController",
        "method": "update"
      },
      "user_input": "params[:id].to_i",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "d0aeca6a54dc98ea4111145a33891543c430827b884255ef5de11c6c3f977b97",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/reporting/monthly_reports/base.rb",
      "line": 465,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"select count(*) from information_schema.triggers where trigger_name = '#{trigger_name}'\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::MonthlyReports::Base",
        "method": "Reporting::MonthlyReports::Base.trigger_exists?"
      },
      "user_input": "trigger_name",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "d0db0f94e468ce21f16882f84459d11a69c3f0273668cd7da46a06bb0f14dff9",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/data_source.rb",
      "line": 68,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"#{has_access_to_data_source_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_data_source_through_organizations(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_data_source_through_projects(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::DataSource",
        "method": "viewable_by"
      },
      "user_input": "has_access_to_data_source_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 70,
      "fingerprint": "d1df65ed70bfef4890bb44d788400c8da08fb84c088d9b9219c66745d0998cc6",
      "check_name": "MassAssignment",
      "message": "Specify exact keys allowed for mass assignment instead of using `permit!` which allows any keys",
      "file": "app/controllers/application_controller.rb",
      "line": 60,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.permit!",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ApplicationController",
        "method": "link_params"
      },
      "user_input": null,
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 24,
      "fingerprint": "d59454b5044a42f5f1e5d423a7ba4c4e4dfbf4c3f400a7d1074b04e93b65afcc",
      "check_name": "UnsafeReflection",
      "message": "Unsafe reflection method `constantize` called with model attribute",
      "file": "app/models/filters/filter_base.rb",
      "line": 638,
      "link": "https://brakemanscanner.org/docs/warning_types/remote_code_execution/",
      "code": "Reporting::MonthlyReports::Base.available_types[sub_population].constantize",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Filters::FilterBase",
        "method": "chosen_sub_population"
      },
      "user_input": "Reporting::MonthlyReports::Base.available_types[sub_population]",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "d9bb80d17d9ee8ce21f0fe7e5f5e15446eaa406057bd5f8f08540740ec295f07",
      "check_name": "FileAccess",
      "message": "Parameter value used in file name",
      "file": "app/controllers/data_quality_reports_controller.rb",
      "line": 79,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "File.read(\"app/views/data_quality_reports/#{report_scope.where(:project_id => params[:project_id].to_i).find(params[:id].to_i).model_name.element}/project/README.md\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "DataQualityReportsController",
        "method": "describe_computations"
      },
      "user_input": "params[:id]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "da084951626e16e5a17884e0640d294e67eeba0a3b094f69cb78877fc8d4518e",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/rds_sql_server/rds.rb",
      "line": 259,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "SqlServerBootstrapModel.connection.execute(\"if not exists(select * from sys.databases where name = '#{database}')\\n  create database #{database}\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Rds",
        "method": "create_database!"
      },
      "user_input": "database",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "e52db9a64ac0bf61e35334f89b7703a1a1df7c9fd84a506e575cbd79816712e4",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/bi/view_maintainer.rb",
      "line": 421,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "GrdaWarehouseBase.connection.execute(\"GRANT SELECT ON #{name} TO #{\"bi\"}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Bi::ViewMaintainer",
        "method": "safe_create_view"
      },
      "user_input": "name",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "ec2a88a0a4dbf17f841d1ed086b8c4e0132b485f2ceea48c39e2fa1715aa2c9a",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/reporting/project_data_quality_reports/version_four/display.rb",
      "line": 346,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "send(options[:denominator]).group(:project_id).where(\"#{key}_#{:complete}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::ProjectDataQualityReports::VersionFour::Display",
        "method": "client_data"
      },
      "user_input": "key",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "ec3e12873a47baa3681d97c10127ea6269f92e67c8eb04a70947cf79685943da",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/reporting/project_data_quality_reports/version_four/support.rb",
      "line": 169,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "send(completeness_metrics[options[:column].to_sym][:denominator]).where(\"#{options[:column].to_sym}_#{options[:metric].to_sym}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::ProjectDataQualityReports::VersionFour::Support",
        "method": "project_completeness_support"
      },
      "user_input": "options[:column].to_sym",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "f63dfcbd913306fda069c922d30497437e5ca09abe7fe150d49dcfa3c33afdff",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/services_controller.rb",
      "line": 43,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ServicesController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "f63dfcbd913306fda069c922d30497437e5ca09abe7fe150d49dcfa3c33afdff",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/services_controller.rb",
      "line": 48,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ServicesController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "f63dfcbd913306fda069c922d30497437e5ca09abe7fe150d49dcfa3c33afdff",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/services_controller.rb",
      "line": 63,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ServicesController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "f63dfcbd913306fda069c922d30497437e5ca09abe7fe150d49dcfa3c33afdff",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/services_controller.rb",
      "line": 69,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ServicesController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "f63dfcbd913306fda069c922d30497437e5ca09abe7fe150d49dcfa3c33afdff",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "drivers/service_scanning/app/controllers/service_scanning/services_controller.rb",
      "line": 73,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).includes(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ServiceScanning::ServicesController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "fe05ee0a6f1d111361975dbd3e6e21a0f4e6b22841baf874cda4bf1cd5f21c0e",
      "check_name": "FileAccess",
      "message": "Model attribute used in file name",
      "file": "app/controllers/clients/history_controller.rb",
      "line": 69,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "File.open(Rails.root.join(\"tmp\", \"service_history_pdf_#{GrdaWarehouse::Hud::Client.destination.find(params[:client_id].to_i).id}.pdf\"), \"wb\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Clients::HistoryController",
        "method": "pdf"
      },
      "user_input": "GrdaWarehouse::Hud::Client.destination.find(params[:client_id].to_i)",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "fe7de455d82a4e3fef770c1272e861fb8f1d73042b2f82f1b417753f2d17bec7",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/reporting/monthly_reports/base.rb",
      "line": 393,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"CREATE TABLE #{details[:table_name]} ( CHECK ( #{\"type = '#{details[:type]}'\"} ) ) INHERITS (#{Reporting::MonthlyReports::Base.parent_table});\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::MonthlyReports::Base",
        "method": "Reporting::MonthlyReports::Base.ensure_tables"
      },
      "user_input": "details[:table_name]",
      "confidence": "Medium",
      "note": ""
    }
  ],
  "updated": "2021-04-06 15:17:33 -0400",
  "brakeman_version": "5.0.0"
}
