{
  "ignored_warnings": [
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "159f0b866222f2bbf475ee5b12270bae5ee89fb54578664af39830a5b4fdacc5",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/dashboards/base/_censuses.haml",
      "line": 12,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "active_report_class.new(:months => (begin\n  active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys[((active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:end_month]).map(&:to_i).to_s\n  rescue StandardError\n    [1.months.ago.year, 1.months.ago.month].to_s\n  end)) or 0)..active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:start_month]).map(&:to_i).to_s\n  rescue StandardError\n    [6.months.ago.year, 6.months.ago.month].to_s\n  end)))]\nrescue StandardError\n  []\nend), :organization_ids => (begin\n  params[:choose_report][:organization_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_ids => (begin\n  params[:choose_report][:project_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_types => (params[:choose_report][:project_types].select(&:present?).map(&:to_sym).select do\n m.in?(GrdaWarehouse::Hud::Project::HOMELESS_TYPE_TITLES.keys)\n end), :filter => ({ :vispdat => (begin\n  vispdat_limits.values.detect do\n   (v == params[:choose_report][:limit_to_vispdat].to_sym)\n   end\nrescue StandardError\n  :all_clients\nend) })).sub_population_title",
      "render_path": [
        {
          "type": "controller",
          "class": "Dashboards::BaseController",
          "method": "index",
          "line": 36,
          "file": "app/controllers/dashboards/base_controller.rb",
          "rendered": {
            "name": "dashboards/base/index",
            "file": "app/views/dashboards/base/index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/index",
          "line": 2,
          "file": "app/views/dashboards/base/index.haml",
          "rendered": {
            "name": "dashboards/base/_index",
            "file": "app/views/dashboards/base/_index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/_index",
          "line": 10,
          "file": "app/views/dashboards/base/_index.haml",
          "rendered": {
            "name": "dashboards/base/_censuses",
            "file": "app/views/dashboards/base/_censuses.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "dashboards/base/_censuses"
      },
      "user_input": "params[:choose_report][:end_month]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "183d6735294c38b8c0b0611b9ad3b005663982697937cb37c89c72f00df84e1f",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/importers/hmis_six_one_one/sftp.rb",
      "line": 82,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"atool --repack -q #{\"#{Rails.root.to_s}/#{@local_path}/#{file}\"} #{\"#{Rails.root.to_s}/#{@local_path}/#{file}\".gsub(\".7z\", \".zip\")}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Importers::HMISSixOneOne::Sftp",
        "method": "force_standard_zip"
      },
      "user_input": "@local_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "2dda17a91795b14d3487c3f39dc645d0e0c09654edae1ebbc835c715c7628b65",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/censuses/index.haml",
      "line": 13,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "(Censuses::Base.available_census_types.detect do\n (m.to_s == params[:type])\n end or Censuses::CensusBedNightProgram).new.class.name.split(\"::\").last",
      "render_path": [
        {
          "type": "controller",
          "class": "CensusesController",
          "method": "index",
          "line": 19,
          "file": "app/controllers/censuses_controller.rb",
          "rendered": {
            "name": "censuses/index",
            "file": "app/views/censuses/index.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "censuses/index"
      },
      "user_input": "Censuses::Base.available_census_types.detect",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "36b35863c16487c4b159e6256376dc53950282919cf2d0e6ecdc46f3752e0924",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/account_two_factors/show.haml",
      "line": 7,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "current_user.generate_otp_backup_codes!.join(\"<br />\")",
      "render_path": [
        {
          "type": "controller",
          "class": "AccountTwoFactorsController",
          "method": "show",
          "line": 21,
          "file": "app/controllers/account_two_factors_controller.rb",
          "rendered": {
            "name": "account_two_factors/show",
            "file": "app/views/account_two_factors/show.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "account_two_factors/show"
      },
      "user_input": "current_user.generate_otp_backup_codes!.join(\"<br />\")",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "375b9ab25f19b33afc8e959d1e53e234e875ed5ab15f745fad67e3542a98009b",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/dashboards/base/_exit.haml",
      "line": 30,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "active_report_class.new(:months => (begin\n  active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys[((active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:end_month]).map(&:to_i).to_s\n  rescue StandardError\n    [1.months.ago.year, 1.months.ago.month].to_s\n  end)) or 0)..active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:start_month]).map(&:to_i).to_s\n  rescue StandardError\n    [6.months.ago.year, 6.months.ago.month].to_s\n  end)))]\nrescue StandardError\n  []\nend), :organization_ids => (begin\n  params[:choose_report][:organization_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_ids => (begin\n  params[:choose_report][:project_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_types => (params[:choose_report][:project_types].select(&:present?).map(&:to_sym).select do\n m.in?(GrdaWarehouse::Hud::Project::HOMELESS_TYPE_TITLES.keys)\n end), :filter => ({ :vispdat => (begin\n  vispdat_limits.values.detect do\n   (v == params[:choose_report][:limit_to_vispdat].to_sym)\n   end\nrescue StandardError\n  :all_clients\nend) })).sub_population_title",
      "render_path": [
        {
          "type": "controller",
          "class": "Dashboards::BaseController",
          "method": "index",
          "line": 36,
          "file": "app/controllers/dashboards/base_controller.rb",
          "rendered": {
            "name": "dashboards/base/index",
            "file": "app/views/dashboards/base/index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/index",
          "line": 2,
          "file": "app/views/dashboards/base/index.haml",
          "rendered": {
            "name": "dashboards/base/_index",
            "file": "app/views/dashboards/base/_index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/_index",
          "line": 13,
          "file": "app/views/dashboards/base/_index.haml",
          "rendered": {
            "name": "dashboards/base/_exit",
            "file": "app/views/dashboards/base/_exit.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "dashboards/base/_exit"
      },
      "user_input": "params[:choose_report][:end_month]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Dynamic Render Path",
      "warning_code": 15,
      "fingerprint": "39fbe5b21264364680753579cfb9bbfa2a05b5af5e3646dbe3bdcd6c65579db5",
      "check_name": "Render",
      "message": "Render path contains parameter value",
      "file": "app/controllers/data_quality_reports_controller.rb",
      "line": 27,
      "link": "https://brakemanscanner.org/docs/warning_types/dynamic_render_path/",
      "code": "render(action => report_scope.where(:project_id => params[:project_id].to_i).find(params[:id].to_i).model_name.element.to_sym, {})",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "DataQualityReportsController",
        "method": "show"
      },
      "user_input": "params[:id]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "3e94c32e2e326e0b24e275e1018e19c8d8e04b138e81da4366a9ab06617bdb85",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/client.rb",
      "line": 550,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"EXISTS (#{inner_scope.to_sql.gsub(\"\\\"Client\\\".\", \"\\\"inner_clients\\\".\").gsub(\"\\\"Client\\\"\", \"\\\"Client\\\" as \\\"inner_clients\\\"\")} and \\\"Client\\\".\\\"id\\\" = \\\"inner_clients\\\".\\\"id\\\")\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::Hud::Client",
        "method": "GrdaWarehouse::Hud::Client.exists_with_inner_clients"
      },
      "user_input": "inner_scope.to_sql.gsub(\"\\\"Client\\\".\", \"\\\"inner_clients\\\".\").gsub(\"\\\"Client\\\"\", \"\\\"Client\\\" as \\\"inner_clients\\\"\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "46e89facb6f575693e76b059e8ff397a2737fcdae21ac4cba044afea33238cc5",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/imports_controller.rb",
      "line": 18,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "import_scope.select(:id, :data_source_id, :completed_at, :created_at, :updated_at).order(\"#{sort_column} #{sort_direction}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ImportsController",
        "method": "index"
      },
      "user_input": "sort_column",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "560654d4119023b98ace9aa621f8578d4bbf9842e89acc251bda37a3ca2476ab",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/reporting/project_data_quality_reports/version_four/display.rb",
      "line": 1094,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "send(options[:denominator]).where(\"#{key}_#{measure}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::ProjectDataQualityReports::VersionFour::Display",
        "method": "project_group_completeness"
      },
      "user_input": "key",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "5b822772717cae02ef27ccb1a1db82c0dd6f1380b3dd8f4d712d9a65190f0202",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/importers/hmis_twenty_twenty/sftp.rb",
      "line": 82,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"atool --repack -q #{\"#{Rails.root.to_s}/#{@local_path}/#{file}\"} #{\"#{Rails.root.to_s}/#{@local_path}/#{file}\".gsub(\".7z\", \".zip\")}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Importers::HmisTwentyTwenty::Sftp",
        "method": "force_standard_zip"
      },
      "user_input": "@local_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Dynamic Render Path",
      "warning_code": 15,
      "fingerprint": "6012356b03eb94bac6208d03adf39acd1db517d644ec8c52e503b7efef462571",
      "check_name": "Render",
      "message": "Render path contains parameter value",
      "file": "app/views/health/goals/edit.haml",
      "line": 4,
      "link": "https://brakemanscanner.org/docs/warning_types/dynamic_render_path/",
      "code": "render(action => ::Health::Goal::Hpc.find(params[:id].to_i), { :readonly => false })",
      "render_path": [
        {
          "type": "controller",
          "class": "Health::GoalsController",
          "method": "edit",
          "line": 34,
          "file": "app/controllers/concerns/health_goal.rb",
          "rendered": {
            "name": "health/goals/edit",
            "file": "app/views/health/goals/edit.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "health/goals/edit"
      },
      "user_input": "params[:id]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "63f82efe90540c61dfe93dede0472ea4f5a9b175efd255d22a366781c2e15eb6",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/dashboards/base/_entry.haml",
      "line": 50,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "active_report_class.new(:months => (begin\n  active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys[((active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:end_month]).map(&:to_i).to_s\n  rescue StandardError\n    [1.months.ago.year, 1.months.ago.month].to_s\n  end)) or 0)..active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:start_month]).map(&:to_i).to_s\n  rescue StandardError\n    [6.months.ago.year, 6.months.ago.month].to_s\n  end)))]\nrescue StandardError\n  []\nend), :organization_ids => (begin\n  params[:choose_report][:organization_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_ids => (begin\n  params[:choose_report][:project_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_types => (params[:choose_report][:project_types].select(&:present?).map(&:to_sym).select do\n m.in?(GrdaWarehouse::Hud::Project::HOMELESS_TYPE_TITLES.keys)\n end), :filter => ({ :vispdat => (begin\n  vispdat_limits.values.detect do\n   (v == params[:choose_report][:limit_to_vispdat].to_sym)\n   end\nrescue StandardError\n  :all_clients\nend) })).sub_population_title",
      "render_path": [
        {
          "type": "controller",
          "class": "Dashboards::BaseController",
          "method": "index",
          "line": 36,
          "file": "app/controllers/dashboards/base_controller.rb",
          "rendered": {
            "name": "dashboards/base/index",
            "file": "app/views/dashboards/base/index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/index",
          "line": 2,
          "file": "app/views/dashboards/base/index.haml",
          "rendered": {
            "name": "dashboards/base/_index",
            "file": "app/views/dashboards/base/_index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/_index",
          "line": 11,
          "file": "app/views/dashboards/base/_index.haml",
          "rendered": {
            "name": "dashboards/base/_entry",
            "file": "app/views/dashboards/base/_entry.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "dashboards/base/_entry"
      },
      "user_input": "params[:choose_report][:end_month]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "63f82efe90540c61dfe93dede0472ea4f5a9b175efd255d22a366781c2e15eb6",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/dashboards/base/_entry.haml",
      "line": 46,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "active_report_class.new(:months => (begin\n  active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys[((active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:end_month]).map(&:to_i).to_s\n  rescue StandardError\n    [1.months.ago.year, 1.months.ago.month].to_s\n  end)) or 0)..active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:start_month]).map(&:to_i).to_s\n  rescue StandardError\n    [6.months.ago.year, 6.months.ago.month].to_s\n  end)))]\nrescue StandardError\n  []\nend), :organization_ids => (begin\n  params[:choose_report][:organization_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_ids => (begin\n  params[:choose_report][:project_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_types => (params[:choose_report][:project_types].select(&:present?).map(&:to_sym).select do\n m.in?(GrdaWarehouse::Hud::Project::HOMELESS_TYPE_TITLES.keys)\n end), :filter => ({ :vispdat => (begin\n  vispdat_limits.values.detect do\n   (v == params[:choose_report][:limit_to_vispdat].to_sym)\n   end\nrescue StandardError\n  :all_clients\nend) })).sub_population_title",
      "render_path": [
        {
          "type": "controller",
          "class": "Dashboards::BaseController",
          "method": "index",
          "line": 36,
          "file": "app/controllers/dashboards/base_controller.rb",
          "rendered": {
            "name": "dashboards/base/index",
            "file": "app/views/dashboards/base/index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/index",
          "line": 2,
          "file": "app/views/dashboards/base/index.haml",
          "rendered": {
            "name": "dashboards/base/_index",
            "file": "app/views/dashboards/base/_index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/_index",
          "line": 11,
          "file": "app/views/dashboards/base/_index.haml",
          "rendered": {
            "name": "dashboards/base/_entry",
            "file": "app/views/dashboards/base/_entry.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "dashboards/base/_entry"
      },
      "user_input": "params[:choose_report][:end_month]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "63f82efe90540c61dfe93dede0472ea4f5a9b175efd255d22a366781c2e15eb6",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/dashboards/base/_entry.haml",
      "line": 52,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "active_report_class.new(:months => (begin\n  active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys[((active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:end_month]).map(&:to_i).to_s\n  rescue StandardError\n    [1.months.ago.year, 1.months.ago.month].to_s\n  end)) or 0)..active_report_class.distinct.order(:year => :desc, :month => :desc).pluck(:year, :month).map do\n   date = Date.new(year, month, 1)\n  [[year, month], Date.new(year, month, 1).strftime(\"%B %Y\")]\n   end.to_h.keys.index(JSON.parse(begin\n    JSON.parse(params[:choose_report][:start_month]).map(&:to_i).to_s\n  rescue StandardError\n    [6.months.ago.year, 6.months.ago.month].to_s\n  end)))]\nrescue StandardError\n  []\nend), :organization_ids => (begin\n  params[:choose_report][:organization_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_ids => (begin\n  params[:choose_report][:project_ids].map(&:presence).compact.map(&:to_i)\nrescue StandardError\n  []\nend), :project_types => (params[:choose_report][:project_types].select(&:present?).map(&:to_sym).select do\n m.in?(GrdaWarehouse::Hud::Project::HOMELESS_TYPE_TITLES.keys)\n end), :filter => ({ :vispdat => (begin\n  vispdat_limits.values.detect do\n   (v == params[:choose_report][:limit_to_vispdat].to_sym)\n   end\nrescue StandardError\n  :all_clients\nend) })).sub_population_title",
      "render_path": [
        {
          "type": "controller",
          "class": "Dashboards::BaseController",
          "method": "index",
          "line": 36,
          "file": "app/controllers/dashboards/base_controller.rb",
          "rendered": {
            "name": "dashboards/base/index",
            "file": "app/views/dashboards/base/index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/index",
          "line": 2,
          "file": "app/views/dashboards/base/index.haml",
          "rendered": {
            "name": "dashboards/base/_index",
            "file": "app/views/dashboards/base/_index.haml"
          }
        },
        {
          "type": "template",
          "name": "dashboards/base/_index",
          "line": 11,
          "file": "app/views/dashboards/base/_index.haml",
          "rendered": {
            "name": "dashboards/base/_entry",
            "file": "app/views/dashboards/base/_entry.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "dashboards/base/_entry"
      },
      "user_input": "params[:choose_report][:end_month]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "675fecd50d964fbb9e5a61476a0c6ceb99d623eaea2e9ce40b7a319f13985d39",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/health/signable_documents/signature.haml",
      "line": 23,
      "link": "https://brakemanscanner.org/docs/warning_types/cross-site_scripting/",
      "code": "params[:post_sign_path]",
      "render_path": null,
      "location": {
        "type": "template",
        "template": "health/signable_documents/signature"
      },
      "user_input": null,
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "70b70b984f26e96e4c136d1371587575175b3f7e6e7cb0c597f1a73c7cd9f781",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/warehouse_reports/chronic_housed/index.haml",
      "line": 42,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "site_chronic_source.where(:date => ::Filters::DateRange.new((params.permit(:range => ([:start, :end]))[:range] or { :start => 3.month.ago.to_date, :end => 1.months.ago.to_date })).range).group_by(&:client_id)[exits.first.client_id].map(&:date).uniq.join(\"<br />\")",
      "render_path": [
        {
          "type": "controller",
          "class": "WarehouseReports::ChronicHousedController",
          "method": "index",
          "line": 17,
          "file": "app/controllers/warehouse_reports/chronic_housed_controller.rb",
          "rendered": {
            "name": "warehouse_reports/chronic_housed/index",
            "file": "app/views/warehouse_reports/chronic_housed/index.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "warehouse_reports/chronic_housed/index"
      },
      "user_input": "params.permit(:range => ([:start, :end]))[:range]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "781aac46e7b1378f886f2b9f429b4b36766b82a3ce2c8453f8be825781ea49b5",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/glacier/runner.rb",
      "line": 36,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "system(\"psql -d postgres --username=#{db_user} --no-password --host=#{(provided_db_host or db_host)} -c 'create database #{database_name}'\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Glacier::Runner",
        "method": "restore_database!"
      },
      "user_input": "db_user",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "7c66a105e2dc82603b638726429867081fd7bdfc09b716d4699dcf62401a11e6",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/reporting/project_data_quality_reports/version_four/display.rb",
      "line": 1122,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "send(options[:denominator]).where(:project_id => hud_project.id, \"#{key}_#{measure}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::ProjectDataQualityReports::VersionFour::Display",
        "method": "project_completeness"
      },
      "user_input": "key",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "83cae61e622cb3c440b43ceb3eab4403893818782e91b039e5784cc2b7f00585",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/client.rb",
      "line": 651,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"#{quoted_table_name}.consented_coc_codes ?| array[#{coc_codes.map do\n connection.quote(s)\n end.join(\",\")}]\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Client",
        "method": null
      },
      "user_input": "coc_codes.map do\n connection.quote(s)\n end.join(\",\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "85283b166eb4bcf02cc87be10e06c2d8433300155419b05dc24758732632d3ce",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/organization.rb",
      "line": 58,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"#{has_access_to_organization_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_organization_through_data_source(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Organization",
        "method": null
      },
      "user_input": "has_access_to_organization_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "88ba6947358eb613f838a50fc8a1b137f655dda08126594643d90dca1df7daa9",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/organization.rb",
      "line": 43,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"#{has_access_to_organization_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_organization_through_data_source(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_organization_through_projects(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Organization",
        "method": null
      },
      "user_input": "has_access_to_organization_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "8c81005c4d889728d108a471d6eea9eddbe310bf0fb9381ef5c542b52b4b0c69",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "app/controllers/clients_controller.rb",
      "line": 83,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ClientsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "8c81005c4d889728d108a471d6eea9eddbe310bf0fb9381ef5c542b52b4b0c69",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "app/controllers/clients_controller.rb",
      "line": 53,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ClientsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "8c81005c4d889728d108a471d6eea9eddbe310bf0fb9381ef5c542b52b4b0c69",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "app/controllers/clients_controller.rb",
      "line": 58,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ClientsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "8c81005c4d889728d108a471d6eea9eddbe310bf0fb9381ef5c542b52b4b0c69",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "app/controllers/clients_controller.rb",
      "line": 73,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ClientsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "8c81005c4d889728d108a471d6eea9eddbe310bf0fb9381ef5c542b52b4b0c69",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "app/controllers/clients_controller.rb",
      "line": 79,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ClientsController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "94f0e64c5acc071a901163d39ebce6861e109a286a0157b979408b31ce9c6a17",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/data_source.rb",
      "line": 64,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"#{has_access_to_data_source_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_data_source_through_organizations(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_data_source_through_projects(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GrdaWarehouse::DataSource",
        "method": null
      },
      "user_input": "has_access_to_data_source_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "a005f0450a283e9aa0cfbb7447941c9b23a6b49277b9e02d914765b5ccf577cc",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/grda_warehouse/hud/project.rb",
      "line": 363,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "where(\"#{has_access_to_project_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_project_through_organization(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_project_through_data_source(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)} OR #{has_access_to_project_through_coc_codes(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Project",
        "method": null
      },
      "user_input": "has_access_to_project_through_viewable_entities(user, lambda do\n connection.quote(s)\n end, lambda do\n connection.quote_column_name(s)\n end)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 24,
      "fingerprint": "a018a2a65716f162e78639cf9ecc84440e48c1b4001c80db96d96f5ca82c11ab",
      "check_name": "UnsafeReflection",
      "message": "Unsafe reflection method `constantize` called with model attribute",
      "file": "app/controllers/cohorts/clients_controller.rb",
      "line": 376,
      "link": "https://brakemanscanner.org/docs/warning_types/remote_code_execution/",
      "code": "GrdaWarehouse::Cohort.available_columns.map(&:class).map(&:name).select do\n (m == params.require(:field))\n end.first.constantize",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Cohorts::ClientsController",
        "method": "field"
      },
      "user_input": "GrdaWarehouse::Cohort.available_columns.map(&:class)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "ad643b5cc0525dc24944b965b530e1b65e3c3d7524efb0526565ec3f3f0df4a3",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/messages/show.haml",
      "line": 7,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "simple_format(current_user.messages.find(params.require(:id)).body_html).gsub(URI.regexp([\"http\", \"https\"]), \"<a href=\\\"\\\\0\\\">\\\\0</a>\")",
      "render_path": [
        {
          "type": "controller",
          "class": "MessagesController",
          "method": "show",
          "line": 34,
          "file": "app/controllers/messages_controller.rb",
          "rendered": {
            "name": "messages/show",
            "file": "app/views/messages/show.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "messages/show"
      },
      "user_input": "current_user.messages.find(params.require(:id))",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Request Forgery",
      "warning_code": 7,
      "fingerprint": "ce992db4f95112f496552ef023508b0c90940679ef5aa41aa122b91cd2eb0a14",
      "check_name": "ForgerySetting",
      "message": "`protect_from_forgery` should be called in `HelloSignController`",
      "file": "app/controllers/hello_sign_controller.rb",
      "line": 7,
      "link": "https://brakemanscanner.org/docs/warning_types/cross-site_request_forgery/",
      "code": null,
      "render_path": null,
      "location": {
        "type": "controller",
        "controller": "HelloSignController"
      },
      "user_input": null,
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "cf9fa747c96c496625affc43ebc9ecdb01c696ca61f911e2de7da2f6188b251d",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/admin/translation_keys_controller.rb",
      "line": 51,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(TranslationKey.find(params[:id].to_i))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::TranslationKeysController",
        "method": "update"
      },
      "user_input": "params[:id].to_i",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "d9bb80d17d9ee8ce21f0fe7e5f5e15446eaa406057bd5f8f08540740ec295f07",
      "check_name": "FileAccess",
      "message": "Parameter value used in file name",
      "file": "app/controllers/data_quality_reports_controller.rb",
      "line": 79,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "File.read(\"app/views/data_quality_reports/#{report_scope.where(:project_id => params[:project_id].to_i).find(params[:id].to_i).model_name.element}/project/README.md\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "DataQualityReportsController",
        "method": "describe_computations"
      },
      "user_input": "params[:id]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "e57abad6acbd9c3dc90d058943faf42fbfdc295cdc5b6fb1cd0153c3168ba1f3",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/census/project_types/index.haml",
      "line": 11,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "(::Filters::DateRange.new(params.permit(:range => ([:start, :end]))[:range]) or ::Filters::DateRange.new(:start => 3.years.ago.to_date, :end => 1.day.ago.to_date)).start",
      "render_path": [
        {
          "type": "controller",
          "class": "Census::ProjectTypesController",
          "method": "index",
          "line": 15,
          "file": "app/controllers/census/project_types_controller.rb",
          "rendered": {
            "name": "census/project_types/index",
            "file": "app/views/census/project_types/index.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "census/project_types/index"
      },
      "user_input": "params.permit(:range => ([:start, :end]))[:range]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "e9bc472741128330205459b50abc916ff6cf8a17bc0b39ffa91dc0421dbe2efa",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "app/controllers/concerns/client_controller.rb",
      "line": 53,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "@clients.joins(:processed_service_history).where(:id => service_history_service_scope.select(:client_id).distinct.where(:date => ((params[:start_date].to_date..params[:end_date].to_date)))).public_send(params[:population].to_sym)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ClientController",
        "method": "sort_filter_index"
      },
      "user_input": "params[:population].to_sym",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "ec2a88a0a4dbf17f841d1ed086b8c4e0132b485f2ceea48c39e2fa1715aa2c9a",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/reporting/project_data_quality_reports/version_four/display.rb",
      "line": 347,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "send(options[:denominator]).group(:project_id).where(\"#{key}_#{:complete}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::ProjectDataQualityReports::VersionFour::Display",
        "method": "client_data"
      },
      "user_input": "key",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "ec3e12873a47baa3681d97c10127ea6269f92e67c8eb04a70947cf79685943da",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/reporting/project_data_quality_reports/version_four/support.rb",
      "line": 169,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "send(completeness_metrics[options[:column].to_sym][:denominator]).where(\"#{options[:column].to_sym}_#{options[:metric].to_sym}\" => true)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Reporting::ProjectDataQualityReports::VersionFour::Support",
        "method": "project_completeness_support"
      },
      "user_input": "options[:column].to_sym",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Dynamic Render Path",
      "warning_code": 15,
      "fingerprint": "fde02e1709a167801d237e080ec6ee9c281c0a4aaaef4e81a09c70c01613e32d",
      "check_name": "Render",
      "message": "Render path contains parameter value",
      "file": "app/views/clients/rollup.haml",
      "line": 2,
      "link": "https://brakemanscanner.org/docs/warning_types/dynamic_render_path/",
      "code": "render(action => (\"clients/rollup/\" + params[:partial]), {})",
      "render_path": null,
      "location": {
        "type": "template",
        "template": "clients/rollup"
      },
      "user_input": "params[:partial]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "fe05ee0a6f1d111361975dbd3e6e21a0f4e6b22841baf874cda4bf1cd5f21c0e",
      "check_name": "FileAccess",
      "message": "Model attribute used in file name",
      "file": "app/controllers/clients/history_controller.rb",
      "line": 72,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "File.open(Rails.root.join(\"tmp\", \"service_history_pdf_#{GrdaWarehouse::Hud::Client.destination.find(params[:client_id].to_i).id}.pdf\"), \"wb\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Clients::HistoryController",
        "method": "pdf"
      },
      "user_input": "GrdaWarehouse::Hud::Client.destination.find(params[:client_id].to_i)",
      "confidence": "Weak",
      "note": ""
    }
  ],
  "updated": "2019-11-20 09:39:48 -0500",
  "brakeman_version": "4.7.1"
}
