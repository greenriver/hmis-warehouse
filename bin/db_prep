#!/usr/bin/env ruby

# This is used to bootstrap local dev environments and to bootstrap
# brand new staging/production databases

require 'pathname'
require 'fileutils'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('..', __dir__)

def run_or_exit(cmd)
  return if system(cmd)

  puts 'Last command failed. Aborting.'

  exit(1)
end

Dir.chdir APP_ROOT do
  puts "\n== Preparing Database =="
  run_or_exit 'bundle exec rake db:create'
  run_or_exit 'bundle exec rake db:structure:conditional_load'
  run_or_exit 'bundle exec rake db:migrate'

  puts "\n== Preparing Warehouse =="
  run_or_exit 'bundle exec rake warehouse:db:create'

  # DB has objects that can't be tracked with schema.rb: types, materialized views, and triggers
  run_or_exit 'bundle exec rake warehouse:db:structure:conditional_load'
  run_or_exit 'bundle exec rake warehouse:db:migrate'

  puts "\n== Preparing Health Database =="
  run_or_exit 'bundle exec rake health:db:create'
  run_or_exit 'bundle exec rake health:db:structure:conditional_load'
  run_or_exit 'bundle exec rake health:db:migrate'

  puts "\n== Preparing Reporting Database =="
  run_or_exit 'bundle exec rake reporting:db:create'
  run_or_exit 'bundle exec rake reporting:db:structure:conditional_load'
  run_or_exit 'bundle exec rake reporting:db:migrate'
  # Force a rebuild of this table
  run_or_exit 'bundle exec rails runner "GrdaWarehouse::ServiceHistoryServiceMaterialized.rebuild!"'

  if ENV['RAILS_ENV'] != 'test'
    puts "\n== Seeding Database =="
    run_or_exit 'bundle exec rake db:seed'
    run_or_exit 'bundle exec rake grda_warehouse:seed_grades'
  else
    puts "\n== NOT Seeding test Database =="
  end
end
# do not modify this line:
puts '---DONE---'
