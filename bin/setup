#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../',  __FILE__)

Dir.chdir APP_ROOT do
  puts "== Installing dependencies =="
  system "gem install bundler --conservative"
  system "bundle check || bundle install --without seven_zip"

  ymls = [
    "secrets.yml",
  ]
  ymls.each do |file|
    file = File.join('config', file)
    unless File.exist?(file)
      puts "\n== Creating #{file} =="
      FileUtils.cp "#{file}.sample", file
    end
  end

  rake = File.join('bin', 'rake')

  puts "\n== Preparing Database =="
  system "#{rake} db:create"
  system "#{rake} db:migrate"

  puts "\n== Preparing Warehouse =="
  system "#{rake} warehouse:db:create"
  system "#{rake} warehouse:db:migrate"
  system "#{rake} grda_warehouse:seed_data_sources"

  puts "\n== Preparing Health Database =="
  system "#{rake} health:db:create"
  system "#{rake} health:db:migrate"

  puts "\n== Seeding Database =="
  system "#{rake} db:seed"

  puts "\n== Removing old logs and tempfiles =="
  FileUtils.rm_f Dir.glob(File.join('log', '*'))
  FileUtils.rm_rf Dir.glob(File.join('tmp', 'cache'))

  puts "\n== Creating styles/_variables.scss =="
  styles = File.join %w(app assets stylesheets theme styles)
  unless File.directory?(styles)
    FileUtils.mkdir(styles)
  end
  variables = File.join styles, "_variables.scss"
  unless File.exist?(variables)
    FileUtils.touch variables
  end

  puts "\n== Restarting application server =="
  restart = File.join %w(tmp restart.txt)
  FileUtils.touch restart
end
