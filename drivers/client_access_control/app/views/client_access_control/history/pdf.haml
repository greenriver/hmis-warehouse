.history__pdf
  - client = @client_history.client
  = inline_stylesheet_link_tag 'print'
  - title = "#{Translation.translate('HMIS Data Warehouse')} Homeless History for Residential Programs"
  - content_for :title, title
  - if ENV['PRINT_LOGO'].present?
    .history__logo
      - logo = inline_asset_base64("theme/logo/#{ENV['PRINT_LOGO']}") rescue nil
      = image_tag(logo, width: 100, height: 100) if logo.present?
  .history__title
    %h1= content_for :title
  .history__summary
    %p Snapshot for #{client.name} (#{client.id}) taken on #{Date.current}
    %ul
      %li= "Days Homeless in the past three years: #{client.days_homeless_in_last_three_years} (seen in ES, SO, SH, TH with no overlapping PH)"
      %li= "Days Literally Homeless in the past three years: #{client.literally_homeless_last_three_years} (seen in ES, SO, SH with no overlapping TH or PH)"
      %li= "Months Homeless in the past three years: #{client.months_homeless_in_last_three_years} (seen in ES, SO, SH, TH with no overlapping PH)"
      %li= "Months Literally Homeless in the past three years: #{client.months_literally_homeless_in_last_three_years} (seen in ES, SO, SH, TH with no overlapping PH)"
      %li= "Chronically homeless: #{@client_history.chronic ? 'Yes' : 'No' }"
      %li= "Does not include any possible current Rapid Re-Housing enrollment"
    .history__counts
      .history__counts-by-org
        %strong Total number of Bed Nights across all Residential Programs at each organization
        %ul
          - @client_history.organization_counts.each do |org_name, count|
            %li
              #{org_name}: #{pluralize count, 'days'}
      .history__counts-by-type
        %strong Total number of Bed Nights across all Residential Programs in each project type
        %ul
          - @client_history.project_type_counts.each do |type, count|
            %li
              #{type}: #{pluralize(count, 'days')}
      - if RailsDrivers.loaded.include?(:service_scanning) && GrdaWarehouse::Config.get(:service_register_visible)
        - if client.service_scanning_bed_nights_or_outreach?
          .history__counts-for-service_scanning
            %strong Total number of bed nights and outreach contacts recorded during the #{Translation.translate('HMIS Blackout')}.
            %ul
              %li Bed nights: #{pluralize(client.unique_service_scanning_bed_nights.count, 'days')}
              %li Outreach: #{pluralize(client.unique_service_scanning_outreach(include_extrapolated: true).count, 'days')}

  .history__dates
    - if RailsDrivers.loaded.include?(:service_scanning) && GrdaWarehouse::Config.get(:service_register_visible)
      - if client.service_scanning_bed_nights_or_outreach?
        %h3 #{Translation.translate('HMIS Blackout')} Bed Nights and Outreach
        %table.history__dates-table
          %thead
            %tr
              %th Organization
              %th Project Name
              %th Project Type
              %th Date
          %tbody
            - client.service_scanning_services.bed_nights_or_outreach_with_extrapolated.values.flatten.each do |service|
              %tr
                %td= service.project&.organization&.OrganizationName || 'Extrapolated'
                %td= service.project&.safe_project_name || 'Extrapolated'
                %td= service.project&.human_readable_project_type || 'Street Outreach'
                %td= Time.zone.local_to_utc(service.provided_at).to_date
        %h3 HMIS Records
    - if @client_history.dates.present?
      %table.history__dates-table
        %thead
          %tr
            %th Organization
            %th Project Name
            %th Project Type
            %th Date
            %th Entry?
            %th Exit?
        %tbody
          - @client_history.ordered_dates.each do |date|
            - @client_history.dates[date].each do |en|
              %tr
                %td= en[:organization_name]
                %td= en[:project_name]
                %td= HudUtility2024.project_type en[:project_type]
                %td= date
                %td= date if en[:record_type] == 'entry'
                %td= date if en[:record_type] == 'exit'
