- data = ClientAccessControl::ClientHistoryMonth.new(@year, @month, @filters)
- weeks_data = data.weeks_data(month: @month, year: @year, client: @client, user: current_user)

- unless weeks_data.present?
  = render 'month_nav', data: data
  .mt-8
    No data
- else
  .row
    .col-lg-5.col-md-12.mb-lg-6.mb-4
      .p-4.client__calendar-card.client__calendar-card__filters
        %h5.mt-0 Filters
        .mb-4
          %label Project Type
          %select.js-client-calendar-filter__project-type{name: 'project_types[]', multiple: 'multiple', data: {name: 'projectTypes'}}
            - data.available_project_types(month: @month, year: @year, client: @client, user: current_user).each do |key, value|
              %option{value: key, selected: @filters[:project_types].include?(key.to_s)}= value
        .mb-4
          %label Project
          %select.js-client-calendar-filter__project{name: 'projects[]', multiple: 'multiple', data: {name: 'projects'}}
            - data.available_projects(month: @month, year: @year, client: @client, user: current_user).each do |project|
              %option{value: project.id.to_s, selected: @filters[:projects].include?(project.id.to_s)}= project.name(current_user)
        .mb-4
          %label Contact Type
          %select.js-client-calendar-filter__contact-type{name: 'contact_types[]', multiple: 'multiple', data: {name: 'contactTypes'}}
            - data.contact_types.each do |key, value|
              %option{value: key, selected: @filters[:contact_types].include?(key)}= value[:name]
    .col-lg-4.col-md-12.mb-6
      .p-4.client__calendar-card.client__calendar-card__contact-key
        %h5.mt-0 Service History Key
        .d-flex.flex-wrap
          - keys = data.contact_types.keys.in_groups_of(2, false)

          - keys.each do |key_group|
            .d-flex.w-100.justify-content-between
              - key_group.each do |key|
                - value = data.contact_types[key]
                .mb-4.w-50
                  = render 'event_icon', key: key, name: value[:name], icon: value[:icon]
    - if window_file_access?
      .col-lg-3.col-md-12.mb-6
        .p-4.client__calendar-card.client__calendar-card__contact-key
          %h5.mt-0 Generate Homeless Verification PDF
          = render 'pdf_generation_form'

  = render 'month_nav', data: data

  .d3-calendar.client__calendar
  .d-none
    - weeks_data.each_with_index do |week, week_i|
      - week[:projects].each_with_index do |project, project_i|
        %div{id: "client__calendar-tooltip__#{week_i}_#{project_i}"}
          %table.table.client__calendar-tooltip__table
            %thead
              %th{class: "project-type-#{project[:project_type]}", colspan: 2}
                = project[:project_type_name]
                %span= project[:project_name]
            %tbody
              %tr
                %td Entry Date
                %td= project[:entry_date]&.to_date
              %tr
                %td Exit Date
                %td= project[:exit_date]&.to_date
              - data.contact_types.each do |key, values|
                - if project[key.to_sym].present?
                  = render key.to_s, key: key, values: values, project: project


- content_for :page_js do
  :javascript
    var data = #{weeks_data.to_json.html_safe};
    var eventsData = #{data.contact_types.to_json.html_safe};
    var max_date = '#{data.max_date(@client).strftime('%m/%d/%Y')}';
    var min_date = '#{data.min_date(@client).strftime('%m/%d/%Y')}';
    var current_date = '#{Date.new(@year, @month, 1).strftime('%m/%d/%Y')}';

    $(document).ready(function() {
      var calendar = new AppClientHistoryCalendar(data, eventsData, '.d3-calendar')

      var navigateCalendar = function(month, year) {
        var url = new URL(document.location.href)
        url.searchParams.set('month', month)
        url.searchParams.set('year', year)
        url.searchParams.set('project_types', filters['projectTypes'])
        url.searchParams.set('projects', filters['projects'])
        url.searchParams.set('contact_types', filters['contactTypes'])
        document.location.href = url
      }

      $('.js-client__calendar-nav').on('click', function(e) {
        e.preventDefault()
        var target = $(e.currentTarget)
        var month = target.data('month')
        var year = target.data('year')

        navigateCalendar(month, year)
      })

      var datepicker = $('#client__calendar-datepicker__input').datepicker({
        startDate: min_date,
        endDate: max_date,
        startView: 'months',
        minViewMode: 'months'
      });
      datepicker.datepicker('update', current_date);
      datepicker.on('changeDate', function(e) {
        var date = e.date
        var month = date.getMonth()+1
        var year = date.getFullYear()
        navigateCalendar(month, year)
      })

      var filters = {projectTypes: [], projects: [], contactTypes: []}
      var filterNodes = [
        $('.js-client-calendar-filter__project-type'),
        $('.js-client-calendar-filter__project'),
        $('.js-client-calendar-filter__contact-type'),
      ]
      filterNodes.forEach(function(f) {
        filters[f.data('name')] = f.val()
        f.select2()
        f.on('change', function(e) {
          var target = $(e.target);
          var filterName = target.data('name');
          filters[filterName] = target.val();
          calendar.draw(filters);
          var url = new URL(document.location.href);
          var filter_type = filterName.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
          url.searchParams.set(filter_type, filters[filterName]);
          window.history.pushState({}, 'FilterUpdate', url);
        })
      })
      //console.log('filters on load', filters)
      calendar.draw(filters)
    })
