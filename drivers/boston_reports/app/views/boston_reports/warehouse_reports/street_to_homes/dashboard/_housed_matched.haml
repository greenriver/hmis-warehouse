.d-flex
  %h2.client-status-header Clients Housed
  .client-status-switcher.btn-group.btn-group-toggle.btn-sm.ml-auto{ data: { toggle: :buttons }}
    %label.btn.btn-secondary.btn-sm.active
      %input#housed{ type: :radio, name: :client_status, checked: :checked}
      Housed
    %label.btn.btn-secondary.btn-sm
      %input#matched{ type: :radio, name: :client_status}
      Matched
.well
  .client-housed-matched-wrapper
    .client-status-housed-wrapper
      #client-status-housed-chart
      #client-status-housed-chart-legend.d-flex.m-4
    .client-status-matched-wrapper.hide
      #client-status-matched-chart
      #client-status-matched-chart-legend.d-flex.m-4
  = content_for :page_js do
    :javascript
      let housed_data = #{@report.housed_by_cohort.to_json.html_safe};
      let housed_grid = #{@report.housed_by_cohort['columns'].first.drop(1).map { |d| { value: d, label: d }}.to_json.html_safe};
      let housed_max = #{@report.housed_by_cohort['columns'].select { |m| m.first == 'Total' }.first.drop(1).max};

      let status_housed_chart = bb.generate({
        data: housed_data,
        bindto: '#client-status-housed-chart',
        size: {
          height: 300,
        },
        legend: {
          contents: {
            bindto: '#client-status-housed-chart-legend',
            template: "<div class='d-flex mr-4'><div style='padding:5px; height: 14px; width: 26px; background-color:{=COLOR}; margin: auto; border-radius: 10px;'>&nbsp;</div><div class='m-2'>{=TITLE}</div></div>"
          }
        },
        // TODO: regions: [{ start: '2022-01-01', end: '2022-01-31'}]
        line: {
          point: false,
          classes: ['wide-line'],
        },
        axis: {
          x: {
            type: "timeseries",
            tick: {
              format: "%b '%y"
            }
          },
          y: {
            tick: {
              values: [0, housed_max],
            }
          },
        },
        grid: {
          x: {
            lines: housed_grid,
          },
        }
      });

      let matched_data = #{@report.matched_by_cohort.to_json.html_safe};
      let matched_grid = #{@report.matched_by_cohort['columns'].first.drop(1).map { |d| { value: d, label: d }}.to_json.html_safe};
      let matched_max = #{@report.matched_by_cohort['columns'].select { |m| m.first == 'Total' }.first.drop(1).max};

      let status_matched_chart = bb.generate({
        data: matched_data,
        bindto: '#client-status-matched-chart',
        size: {
          height: 300,
        },
        legend: {
          contents: {
            bindto: '#client-status-matched-chart-legend',
            template: "<div class='d-flex mr-4'><div style='padding:5px; height: 14px; width: 26px; background-color:{=COLOR}; margin: auto; border-radius: 10px;'>&nbsp;</div><div class='m-2'>{=TITLE}</div></div>"
          }
        },
        // TODO: regions: [{ start: '2022-01-01', end: '2022-01-31'}]
        line: {
          point: false,
          classes: ['wide-line'],
        },
        axis: {
          x: {
            type: "timeseries",
            tick: {
              format: "%b '%y"
            }
          },
          y: {
            tick: {
              values: [0, matched_max],
            }
          },
        },
        grid: {
          x: {
            lines: matched_grid,
          },
        }
      });
      $('.client-status-switcher').on('change', function(e) {
        $('.client-status-housed-wrapper').toggleClass('hide');
        $('.client-status-matched-wrapper').toggleClass('hide');
        status_housed_chart.flush();
        status_matched_chart.flush();
      });
