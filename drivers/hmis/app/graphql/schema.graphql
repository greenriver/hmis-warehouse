enum ActiveStatus {
  """
  Active
  """
  ACTIVE

  """
  Inactive
  """
  INACTIVE
}

type ActivityLog {
  createdAt: ISO8601DateTime!
  id: ID!
  ipAddress: String
  resolvedRecords: [ActivityLogRecord!]!
  user: ApplicationUser!
}

type ActivityLogRecord {
  recordId: String!
  recordType: String!
}

type ActivityLogsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ActivityLog!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated input type of AddRecentItem
"""
input AddRecentItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  itemId: ID!
  itemType: RecentItemType!
}

enum AftercareMethod {
  """
  In person: one-on-one
  """
  IN_PERSON_1_ON_1

  """
  In person: group
  """
  IN_PERSON_GROUP

  """
  Via email/social media
  """
  VIA_EMAIL_SOCIAL

  """
  Via telephone
  """
  VIA_TEL
}

"""
R20.2
"""
enum AftercareProvided {
  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (1) Yes
  """
  YES
}

"""
HUD Age Ranges
"""
enum AgeRange {
  """
  62+
  """
  Age62Plus

  """
  65+
  """
  Age65Plus

  """
  13-17
  """
  Ages13to17

  """
  18-24
  """
  Ages18to24

  """
  25-34
  """
  Ages25to34

  """
  35-44
  """
  Ages35to44

  """
  45-54
  """
  Ages45to54

  """
  55-61
  """
  Ages55to61

  """
  55-64
  """
  Ages55to64

  """
  5-12
  """
  Ages5to12

  """
  Under 5
  """
  Under5
}

"""
V7.B
"""
enum AnnualPercentAMI {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (3) More than 30% of AMI for household size
  """
  MORE_THAN_30_OF_AMI_FOR_HOUSEHOLD_SIZE

  """
  (0) $0 (i.e., not employed, not receiving cash benefits, no other current income)
  """
  NUM_0

  """
  (2) 15-30% of AMI for household size
  """
  NUM_15_30_OF_AMI_FOR_HOUSEHOLD_SIZE

  """
  (1) 1-14% of Area Median Income (AMI) for household size
  """
  NUM_1_14_OF_AREA_MEDIAN_INCOME_AMI_FOR_HOUSEHOLD_SIZE
}

"""
User account for a user of the system
"""
type ApplicationUser {
  activityLogs(limit: Int, offset: Int): ActivityLogsPaginated!
  auditHistory(filters: UserAuditEventFilterOptions, limit: Int, offset: Int): ApplicationUserAuditEventsPaginated!
  clientAccessSummaries(filters: ClientAccessSummaryFilterOptions, limit: Int, offset: Int): ClientAccessSummariesPaginated!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  email: String!
  enrollmentAccessSummaries(filters: EnrollmentAccessSummaryFilterOptions, limit: Int, offset: Int): EnrollmentAccessSummariesPaginated!
  firstName: String
  id: ID!
  lastName: String
  name: String!
  recentItems: [OmnisearchResult!]!
}

type ApplicationUserAuditEvent {
  clientId: String
  clientName: String
  createdAt: ISO8601DateTime!
  enrollmentId: String
  event: AuditEventType!
  graphqlType: String!
  id: ID!

  """
  Format is { field: { fieldName: "GQL field name", displayName: "Human readable name", values: [old, new] } }
  """
  objectChanges: JsonObject
  projectId: String
  projectName: String
  recordId: ID!
  recordName: String!
  trueUser: ApplicationUser
  user: ApplicationUser
}

type ApplicationUserAuditEventsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ApplicationUserAuditEvent!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

input ApplicationUserFilterOptions {
  searchTerm: String
}

type ApplicationUsersPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ApplicationUser!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Custom Assessment
"""
type Assessment {
  access: AssessmentAccess!
  assessmentDate: ISO8601Date!
  ceAssessment: CeAssessment
  client: Client!
  customDataElements: [CustomDataElement!]!
  dataCollectionStage: DataCollectionStage
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  definition: FormDefinition!
  disabilityGroup: DisabilityGroup
  employmentEducation: EmploymentEducation
  enrollment: Enrollment!
  event: Event
  exit: Exit
  healthAndDv: HealthAndDv
  id: ID!
  inProgress: Boolean!
  incomeBenefit: IncomeBenefit
  lockVersion: Int!
  role: AssessmentRole!
  user: ApplicationUser
  wipValues: JsonObject
  youthEducationStatus: YouthEducationStatus
}

type AssessmentAccess {
  canDeleteAssessments: Boolean!
  canDeleteEnrollments: Boolean!
  canEditEnrollments: Boolean!
  id: ID!
}

type AssessmentEligibility {
  formDefinitionId: ID!
  id: ID!
  role: AssessmentRole!
  title: String!
}

input AssessmentFilterOptions {
  project: [ID!]
  projectType: [ProjectType!]
  type: [AssessmentRole!]
}

input AssessmentInput {
  """
  Required if updating an existing assessment
  """
  assessmentId: ID

  """
  Whether warnings have been confirmed
  """
  confirmed: Boolean

  """
  Required if saving a new assessment
  """
  enrollmentId: ID!

  """
  Form Definition that was used to perform this assessment
  """
  formDefinitionId: ID!

  """
  Transformed HUD values as JSON
  """
  hudValues: JsonObject!

  """
  Validate assessment but don't submit it
  """
  validateOnly: Boolean

  """
  Raw form state as JSON
  """
  values: JsonObject!
}

"""
4.19.4
"""
enum AssessmentLevel {
  """
  (1) Crisis Needs Assessment
  """
  CRISIS_NEEDS_ASSESSMENT

  """
  (2) Housing Needs Assessment
  """
  HOUSING_NEEDS_ASSESSMENT

  """
  Invalid Value
  """
  INVALID
}

"""
Form Roles that are used for assessments. These types of forms are submitted using SubmitAssessment.
"""
enum AssessmentRole {
  """
  Annual
  """
  ANNUAL

  """
  Custom assessment
  """
  CUSTOM_ASSESSMENT

  """
  Exit
  """
  EXIT

  """
  Intake
  """
  INTAKE

  """
  Post exit
  """
  POST_EXIT

  """
  Update
  """
  UPDATE
}

"""
HUD Assessment Sorting Options
"""
enum AssessmentSortOption {
  """
  Assessment Date: Most Recent First
  """
  ASSESSMENT_DATE

  """
  Last Updated: Most Recent First
  """
  DATE_UPDATED
}

"""
4.19.3
"""
enum AssessmentType {
  """
  Invalid Value
  """
  INVALID

  """
  (3) In Person
  """
  IN_PERSON

  """
  (1) Phone
  """
  PHONE

  """
  (2) Virtual
  """
  VIRTUAL
}

input AssessmentsForEnrollmentFilterOptions {
  type: [AssessmentRole!]
}

input AssessmentsForHouseholdFilterOptions {
  type: [AssessmentRole!]
}

type AssessmentsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Assessment!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

enum AuditEventType {
  create
  destroy
  update
}

"""
Auto Exit Config
"""
type AutoExitConfig {
  id: ID!
  lengthOfAbsenceDays: Int!
  organization: Organization
  organizationId: ID
  project: Project
  projectId: ID
  projectType: ProjectType
}

"""
Auto Exit Config Input
"""
input AutoExitConfigInput {
  lengthOfAbsenceDays: Int
  organizationId: ID
  projectId: ID
  projectType: ProjectType
}

type AutoExitConfigsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [AutoExitConfig!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Value to autofill based on conditional logic
"""
type AutofillValue {
  autofillBehavior: EnableBehavior!

  """
  Whether to perform autofill when displaying a read-only view (defaults to false)
  """
  autofillReadonly: Boolean
  autofillWhen: [EnableWhen!]!

  """
  Link IDs of numeric questions to sum up and set as the value if condition is met
  """
  sumQuestions: [String!]

  """
  Value to autofill if condition is met
  """
  valueBoolean: Boolean

  """
  Value to autofill if condition is met
  """
  valueCode: String

  """
  Value to autofill if condition is met
  """
  valueNumber: Int

  """
  Link ID whos value to autofill if condition is met
  """
  valueQuestion: String
}

"""
2.07.6
"""
enum Availability {
  """
  Invalid Value
  """
  INVALID

  """
  (3) Overflow
  """
  OVERFLOW

  """
  (2) Seasonal
  """
  SEASONAL

  """
  (1) Year-round
  """
  YEAR_ROUND
}

"""
A base64 encoded string
"""
scalar Base64

"""
2.07.5
"""
enum BedType {
  """
  (1) Facility-based
  """
  FACILITY_BASED

  """
  Invalid Value
  """
  INVALID

  """
  (3) Other
  """
  OTHER

  """
  (2) Voucher
  """
  VOUCHER
}

enum BoundType {
  MAX
  MIN
}

enum BulkActionType {
  ADD
  REMOVE
}

"""
Autogenerated input type of BulkMergeClients
"""
input BulkMergeClientsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: [ClientMergeInput!]!
}

"""
Autogenerated return type of BulkMergeClients.
"""
type BulkMergeClientsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  success: Boolean
}

"""
HUD Coordinated Entry Assessment
"""
type CeAssessment {
  assessmentDate: ISO8601Date!
  assessmentLevel: AssessmentLevel
  assessmentLocation: String!
  assessmentType: AssessmentType
  client: Client!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  enrollment: Enrollment!
  id: ID!
  prioritizationStatus: PrioritizationStatus
  user: ApplicationUser
}

type CeAssessmentsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [CeAssessment!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type CeParticipation {
  accessPoint: NoYes
  ceParticipationStatusEndDate: ISO8601Date
  ceParticipationStatusStartDate: ISO8601Date
  crisisAssessment: NoYes
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  directServices: NoYes
  housingAssessment: NoYes
  id: ID!
  preventionAssessment: NoYes
  receivesReferrals: NoYes
  user: ApplicationUser
}

type CeParticipationsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [CeParticipation!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated input type of ClearMci
"""
input ClearMciInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: MciClearanceInput!
}

"""
Autogenerated return type of ClearMci.
"""
type ClearMciPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  matches: [MciClearanceMatch!]
}

"""
Autogenerated input type of ClearRecentItems
"""
input ClearRecentItemsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
HUD Client
"""
type Client {
  access: ClientAccess!
  additionalRaceEthnicity: String
  addresses: [ClientAddress!]!
  afghanistanOef: NoYesReasonsForMissingData
  age: Int
  alerts: [ClientAlert!]!
  assessments(filters: AssessmentFilterOptions, inProgress: Boolean, limit: Int, offset: Int, sortOrder: AssessmentSortOption): AssessmentsPaginated!
  auditHistory(filters: ClientAuditEventFilterOptions, limit: Int, offset: Int): ClientAuditEventsPaginated!
  contactPoints: [ClientContactPoint!]!
  currentLivingSituations(limit: Int, offset: Int): CurrentLivingSituationsPaginated!
  customCaseNotes(limit: Int, offset: Int, sortOrder: CustomCaseNoteSortOption): CustomCaseNotesPaginated!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  desertStorm: NoYesReasonsForMissingData
  differentIdentityText: String
  disabilities(limit: Int, offset: Int): DisabilitiesPaginated!
  dischargeStatus: DischargeStatus
  dob: ISO8601Date
  dobDataQuality: DOBDataQuality!
  emailAddresses: [ClientContactPoint!]!
  employmentEducations(limit: Int, offset: Int): EmploymentEducationsPaginated!
  enabledFeatures: [ClientDashboardFeature!]!
  enrollments(filters: EnrollmentsForClientFilterOptions, includeEnrollmentsWithLimitedAccess: Boolean, limit: Int, offset: Int, sortOrder: EnrollmentSortOption): EnrollmentsPaginated!
  externalIds: [ExternalIdentifier!]!
  files(limit: Int, offset: Int, sortOrder: FileSortOption): FilesPaginated!
  firstName: String
  gender: [Gender!]!
  healthAndDvs(limit: Int, offset: Int): HealthAndDvsPaginated!
  hudChronic: Boolean
  id: ID!
  image: ClientImage
  incomeBenefits(limit: Int, offset: Int): IncomeBenefitsPaginated!
  iraqOif: NoYesReasonsForMissingData
  iraqOnd: NoYesReasonsForMissingData
  koreanWar: NoYesReasonsForMissingData
  lastName: String
  lockVersion: Int!
  mergeAuditHistory(limit: Int, offset: Int): MergeAuditEventsPaginated!
  middleName: String
  militaryBranch: MilitaryBranch
  nameDataQuality: NameDataQuality!
  nameSuffix: String
  names: [ClientName!]!
  otherTheater: NoYesReasonsForMissingData
  personalId: String!
  phoneNumbers: [ClientContactPoint!]!
  pronouns: [String!]!
  race: [Race!]!
  scanCardCodes(limit: Int, offset: Int): ScanCardCodesPaginated!
  services(filters: ServiceFilterOptions, limit: Int, offset: Int, sortOrder: ServiceSortOption): ServicesPaginated!
  ssn: String
  ssnDataQuality: SSNDataQuality!
  user: ApplicationUser
  veteranStatus: NoYesReasonsForMissingData!
  vietnamWar: NoYesReasonsForMissingData
  worldWarIi: NoYesReasonsForMissingData
  yearEnteredService: Int
  yearSeparated: Int
  youthEducationStatuses(limit: Int, offset: Int): YouthEducationStatusesPaginated!
}

type ClientAccess {
  canAuditClients: Boolean!
  canDeleteAssessments: Boolean!
  canDeleteClient: Boolean!
  canDeleteEnrollments: Boolean!
  canEditClient: Boolean!
  canEditEnrollments: Boolean!
  canManageAnyClientFiles: Boolean!
  canManageClientAlerts: Boolean!
  canManageOwnClientFiles: Boolean!
  canManageScanCards: Boolean!
  canMergeClients: Boolean!
  canUploadClientFiles: Boolean!
  canViewAnyConfidentialClientFiles: Boolean!
  canViewAnyFiles: Boolean!
  canViewAnyNonconfidentialClientFiles: Boolean!
  canViewClientAlerts: Boolean!
  canViewDob: Boolean!
  canViewEnrollmentDetails: Boolean!
  canViewFullSsn: Boolean!
  canViewPartialSsn: Boolean!
  id: ID!
}

type ClientAccessSummariesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ClientAccessSummary!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type ClientAccessSummary {
  clientId: ID!
  clientName: String
  id: ID!
  lastAccessedAt: ISO8601DateTime!
}

input ClientAccessSummaryFilterOptions {
  onOrAfter: ISO8601Date
  searchTerm: String
}

type ClientAddress {
  addressType: ClientAddressType
  city: String
  client: Client!
  country: String
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  district: String
  id: ID!
  line1: String
  line2: String
  notes: String
  postalCode: String
  state: String
  use: ClientAddressUse
  user: ApplicationUser
}

"""
Allowed values for ClientAddress.type
"""
enum ClientAddressType {
  """
  Both
  """
  both

  """
  Physical
  """
  physical

  """
  Postal
  """
  postal
}

"""
Allowed values for ClientAddress.use
"""
enum ClientAddressUse {
  """
  Home
  """
  home

  """
  Mail
  """
  mail

  """
  Old
  """
  old

  """
  School
  """
  school

  """
  Temp
  """
  temp

  """
  Work
  """
  work
}

"""
Alert
"""
type ClientAlert {
  createdAt: ISO8601DateTime!
  createdBy: ApplicationUser
  expirationDate: ISO8601Date
  id: ID!
  note: String!
  priority: ClientAlertPriorityLevel!
}

"""
Client Alert Input
"""
input ClientAlertInput {
  clientId: ID!
  expirationDate: ISO8601Date
  note: String
  priority: ClientAlertPriorityLevel
}

enum ClientAlertPriorityLevel {
  """
  1 - High
  """
  high

  """
  3 - Low
  """
  low

  """
  2 - Medium
  """
  medium
}

type ClientAuditEvent {
  clientId: String
  clientName: String
  createdAt: ISO8601DateTime!
  enrollmentId: String
  event: AuditEventType!
  graphqlType: String!
  id: ID!

  """
  Format is { field: { fieldName: "GQL field name", displayName: "Human readable name", values: [old, new] } }
  """
  objectChanges: JsonObject
  projectId: String
  projectName: String
  recordId: ID!
  recordName: String!
  trueUser: ApplicationUser
  user: ApplicationUser
}

input ClientAuditEventFilterOptions {
  clientRecordType: [ID!]
  user: [ID!]
}

type ClientAuditEventsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ClientAuditEvent!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type ClientContactPoint {
  client: Client!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  id: ID!
  notes: String
  system: ClientContactPointSystem
  use: ClientContactPointUse
  user: ApplicationUser
  value: String
}

"""
Allowed values for ClientContactPoint.system
"""
enum ClientContactPointSystem {
  """
  Email
  """
  email

  """
  Phone
  """
  phone

  """
  Url
  """
  url
}

"""
Allowed values for ClientContactPoint.use
"""
enum ClientContactPointUse {
  """
  Home
  """
  home

  """
  Mobile
  """
  mobile

  """
  Old
  """
  old

  """
  School
  """
  school

  """
  Temp
  """
  temp

  """
  Work
  """
  work
}

enum ClientDashboardFeature {
  CASE_NOTE
  FILE
}

input ClientFilterOptions {
  organization: [ID!]
  project: [ID!]
}

"""
Client Image
"""
type ClientImage {
  base64: Base64!
  contentType: String!
  id: ID!
}

type ClientMergeCandidate {
  clients: [Client!]!

  """
  Warehouse ID
  """
  id: ID!
  warehouseUrl: String!
}

type ClientMergeCandidatesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ClientMergeCandidate!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

input ClientMergeInput {
  clientIds: [ID!]!
}

type ClientName {
  client: Client!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  first: String
  id: ID!
  last: String
  middle: String
  nameDataQuality: NameDataQuality
  notes: String
  primary: Boolean
  suffix: String
  use: ClientNameUse
  user: ApplicationUser
}

"""
Allowed values for ClientName.use
"""
enum ClientNameUse {
  """
  Anonymous
  """
  anonymous

  """
  Maiden
  """
  maiden

  """
  Nickname
  """
  nickname

  """
  Official
  """
  official

  """
  Old
  """
  old

  """
  Temp
  """
  temp

  """
  Usual
  """
  usual
}

"""
HMIS Client search input
"""
input ClientSearchInput {
  """
  Date of birth as format yyyy-mm-dd
  """
  dob: String
  firstName: String

  """
  Client primary key
  """
  id: ID
  lastName: String
  organizations: [ID!]
  personalId: String
  projects: [ID!]

  """
  Last 4 digits of SSN
  """
  ssnSerial: String

  """
  Omnisearch string
  """
  textSearch: String
  warehouseId: String
}

"""
HUD Client Sorting Options
"""
enum ClientSortOption {
  """
  Age: Oldest to Youngest
  """
  AGE_OLDEST_TO_YOUNGEST

  """
  Age: Youngest to Oldest
  """
  AGE_YOUNGEST_TO_OLDEST

  """
  Most Relevant
  """
  BEST_MATCH

  """
  First Name: A-Z
  """
  FIRST_NAME_A_TO_Z

  """
  First Name: Z-A
  """
  FIRST_NAME_Z_TO_A

  """
  Last Name: A-Z
  """
  LAST_NAME_A_TO_Z

  """
  Last Name: Z-A
  """
  LAST_NAME_Z_TO_A

  """
  Recently Added
  """
  RECENTLY_ADDED
}

type ClientsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Client!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
V9.1
"""
enum CmExitReason {
  """
  (1) Accomplished goals and/or obtained services and no longer needs CM
  """
  ACCOMPLISHED_GOALS_AND_OR_OBTAINED_SERVICES_AND_NO_LONGER_NEEDS_CM

  """
  (4) Did not comply with HUD/VASH CM
  """
  DID_NOT_COMPLY_WITH_HUD_VASH_CM

  """
  (5) Eviction and/or other housing related issues
  """
  EVICTION_AND_OR_OTHER_HOUSING_RELATED_ISSUES

  """
  (3) Found/chose other housing
  """
  FOUND_CHOSE_OTHER_HOUSING

  """
  Invalid Value
  """
  INVALID

  """
  (7) No longer financially eligible for HUD/VASH voucher
  """
  NO_LONGER_FINANCIALLY_ELIGIBLE_FOR_HUD_VASH_VOUCHER

  """
  (8) No longer interested in participating in this program
  """
  NO_LONGER_INTERESTED_IN_PARTICIPATING_IN_THIS_PROGRAM

  """
  (13) Other
  """
  OTHER

  """
  (2) Transferred to another HUD/VASH program site
  """
  TRANSFERRED_TO_ANOTHER_HUD_VASH_PROGRAM_SITE

  """
  (6) Unhappy with HUD/VASH housing
  """
  UNHAPPY_WITH_HUD_VASH_HOUSING

  """
  (9) Veteran cannot be located
  """
  VETERAN_CANNOT_BE_LOCATED

  """
  (12) Veteran is deceased
  """
  VETERAN_IS_DECEASED

  """
  (11) Veteran is incarcerated
  """
  VETERAN_IS_INCARCERATED

  """
  (10) Veteran too ill to participate at this time
  """
  VETERAN_TOO_ILL_TO_PARTICIPATE_AT_THIS_TIME
}

enum CompleteDisabilityResponse {
  """
  Alcohol use disorder
  """
  ALCOHOL_USE_DISORDER

  """
  Both alcohol and drug use disorders
  """
  BOTH_ALCOHOL_AND_DRUG_USE_DISORDERS

  """
  Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Drug use disorder
  """
  DRUG_USE_DISORDER

  """
  Invalid Value
  """
  INVALID

  """
  No
  """
  NO

  """
  Yes
  """
  YES
}

enum Component {
  """
  Client Address input
  """
  ADDRESS

  """
  Display text as an error alert
  """
  ALERT_ERROR

  """
  Display text as an info alert
  """
  ALERT_INFO

  """
  Display text as a success alert
  """
  ALERT_SUCCESS

  """
  Display text as a warning alert
  """
  ALERT_WARNING

  """
  Render a boolean input item as a checkbox
  """
  CHECKBOX

  """
  Specialized component for rendering disabilities in a table
  """
  DISABILITY_TABLE

  """
  Render a choice input item as a dropdown
  """
  DROPDOWN

  """
  Email address input for ContactPoint
  """
  EMAIL

  """
  Render a group of inputs horizontally
  """
  HORIZONTAL_GROUP

  """
  Render contents in an info box
  """
  INFO_GROUP

  """
  Render a group that contains children of the same type (e.g. all booleans)
  """
  INPUT_GROUP

  """
  MCI linking component
  """
  MCI

  """
  Client Name input
  """
  NAME

  """
  Phone number input for ContactPoint
  """
  PHONE

  """
  Render a choice input item as radio buttons
  """
  RADIO_BUTTONS

  """
  Render a choice input item as vertical radio buttons
  """
  RADIO_BUTTONS_VERTICAL

  """
  SSN input component
  """
  SSN
}

enum CounselingMethod {
  """
  Family
  """
  FAMILY

  """
  Group - including peer counseling
  """
  GROUP

  """
  Individual
  """
  INDIVIDUAL
}

"""
R15.B
"""
enum CountExchangeForSex {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) 12 or more
  """
  NUM_12_OR_MORE

  """
  (1) 1-3
  """
  NUM_1_3

  """
  (2) 4-7
  """
  NUM_4_7

  """
  (3) 8-11
  """
  NUM_8_11
}

"""
Autogenerated return type of CreateAutoExitConfig.
"""
type CreateAutoExitConfigPayload {
  autoExitConfig: AutoExitConfig
  errors: [ValidationError!]!
}

"""
Autogenerated return type of CreateClientAlert.
"""
type CreateClientAlertPayload {
  clientAlert: ClientAlert
  errors: [ValidationError!]!
}

"""
Autogenerated input type of CreateDirectUpload
"""
input CreateDirectUploadInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: DirectUploadInput!
}

"""
Autogenerated return type of CreateFormDefinition.
"""
type CreateFormDefinitionPayload {
  errors: [ValidationError!]!
  formDefinition: FormDefinition
}

"""
Autogenerated input type of CreateFormRule
"""
input CreateFormRuleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  definitionId: ID!
  input: FormRuleInput!
}

"""
Autogenerated return type of CreateFormRule.
"""
type CreateFormRulePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  formRule: FormRule!
}

"""
Autogenerated return type of CreateOutgoingReferralPosting.
"""
type CreateOutgoingReferralPostingPayload {
  errors: [ValidationError!]!
  record: ReferralPosting
}

"""
Autogenerated return type of CreateScanCardCode.
"""
type CreateScanCardCodePayload {
  errors: [ValidationError!]!
  scanCardCode: ScanCardCode
}

"""
Autogenerated input type of CreateService
"""
input CreateServiceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: ServiceInput!
}

"""
Autogenerated return type of CreateService.
"""
type CreateServicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  service: Service
}

"""
Autogenerated input type of CreateUnits
"""
input CreateUnitsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: UnitInput!
}

"""
Autogenerated return type of CreateUnits.
"""
type CreateUnitsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  units: [Unit!]
}

"""
C3.B
"""
enum CurrentEdStatus {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (1) Pursuing Associate's Degree
  """
  PURSUING_ASSOCIATE_S_DEGREE

  """
  (0) Pursuing a high school diploma or GED
  """
  PURSUING_A_HIGH_SCHOOL_DIPLOMA_OR_GED

  """
  (2) Pursuing Bachelor's Degree
  """
  PURSUING_BACHELOR_S_DEGREE

  """
  (3) Pursuing Graduate Degree
  """
  PURSUING_GRADUATE_DEGREE

  """
  (4) Pursuing other post-secondary credential
  """
  PURSUING_OTHER_POST_SECONDARY_CREDENTIAL
}

"""
HUD Current Living Situation
"""
type CurrentLivingSituation {
  client: Client!
  clsSubsidyType: RentalSubsidyType
  currentLivingSituation: CurrentLivingSituationOptions!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  enrollment: Enrollment!
  id: ID!
  informationDate: ISO8601Date
  leaseOwn60Day: NoYesReasonsForMissingData
  leaveSituation14Days: NoYesReasonsForMissingData
  locationDetails: String
  movedTwoOrMore: NoYesReasonsForMissingData
  resourcesToObtain: NoYesReasonsForMissingData
  subsequentResidence: NoYesReasonsForMissingData
  user: ApplicationUser
  verifiedBy: String
}

"""
4.12
"""
enum CurrentLivingSituationOptions {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (101) Emergency shelter, including hotel or motel paid for with emergency shelter voucher, or Host Home shelter
  """
  EMERGENCY_SHELTER_INCLUDING_HOTEL_OR_MOTEL_PAID_FOR_WITH_EMERGENCY_SHELTER_VOUCHER_OR_HOST_HOME_SHELTER

  """
  (215) Foster care home or foster care group home
  """
  FOSTER_CARE_HOME_OR_FOSTER_CARE_GROUP_HOME

  """
  (206) Hospital or other residential non-psychiatric medical facility
  """
  HOSPITAL_OR_OTHER_RESIDENTIAL_NON_PSYCHIATRIC_MEDICAL_FACILITY

  """
  (332) Host Home (non-crisis)
  """
  HOST_HOME_NON_CRISIS

  """
  (314) Hotel or motel paid for without emergency shelter voucher
  """
  HOTEL_OR_MOTEL_PAID_FOR_WITHOUT_EMERGENCY_SHELTER_VOUCHER

  """
  Invalid Value
  """
  INVALID

  """
  (207) Jail, prison or juvenile detention facility
  """
  JAIL_PRISON_OR_JUVENILE_DETENTION_FACILITY

  """
  (225) Long-term care facility or nursing home
  """
  LONG_TERM_CARE_FACILITY_OR_NURSING_HOME

  """
  (17) Other
  """
  OTHER

  """
  (411) Owned by client, no ongoing housing subsidy
  """
  OWNED_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (421) Owned by client, with ongoing housing subsidy
  """
  OWNED_BY_CLIENT_WITH_ONGOING_HOUSING_SUBSIDY

  """
  (116) Place not meant for habitation (e.g., a vehicle, an abandoned building,
  bus/train/subway station/airport or anywhere outside)
  """
  PLACE_NOT_MEANT_FOR_HABITATION

  """
  (204) Psychiatric hospital or other psychiatric facility
  """
  PSYCHIATRIC_HOSPITAL_OR_OTHER_PSYCHIATRIC_FACILITY

  """
  (410) Rental by client, no ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (435) Rental by client, with ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_ONGOING_HOUSING_SUBSIDY

  """
  (329) Residential project or halfway house with no homeless criteria
  """
  RESIDENTIAL_PROJECT_OR_HALFWAY_HOUSE_WITH_NO_HOMELESS_CRITERIA

  """
  (118) Safe Haven
  """
  SAFE_HAVEN

  """
  (335) Staying or living in a family member’s room, apartment, or house
  """
  STAYING_OR_LIVING_IN_A_FAMILY_MEMBER_S_ROOM_APARTMENT_OR_HOUSE

  """
  (336) Staying or living in a friend's room, apartment or house
  """
  STAYING_OR_LIVING_IN_A_FRIEND_S_ROOM_APARTMENT_OR_HOUSE

  """
  (205) Substance abuse treatment facility or detox center
  """
  SUBSTANCE_ABUSE_TREATMENT_FACILITY_OR_DETOX_CENTER

  """
  (302) Transitional housing for homeless persons (including homeless youth)
  """
  TRANSITIONAL_HOUSING_FOR_HOMELESS_PERSONS

  """
  (37) Worker unable to determine
  """
  WORKER_UNABLE_TO_DETERMINE
}

type CurrentLivingSituationsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [CurrentLivingSituation!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
C3.2
"""
enum CurrentSchoolAttended {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (2) Currently enrolled and attending regularly (when school or the course is in session)
  """
  CURRENTLY_ENROLLED_AND_ATTENDING_REGULARLY

  """
  (1) Currently enrolled but NOT attending regularly (when school or the course is in session)
  """
  CURRENTLY_ENROLLED_BUT_NOT_ATTENDING_REGULARLY

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) Not currently enrolled in any school or educational course
  """
  NOT_CURRENTLY_ENROLLED_IN_ANY_SCHOOL_OR_EDUCATIONAL_COURSE
}

"""
Case Note
"""
type CustomCaseNote {
  client: Client!
  content: String!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  enrollment: Enrollment!
  id: ID!
  informationDate: ISO8601Date
  user: ApplicationUser
}

"""
HUD Custom Case Note Sorting Options
"""
enum CustomCaseNoteSortOption {
  """
  Date Created
  """
  DATE_CREATED

  """
  Date Updated
  """
  DATE_UPDATED

  """
  Information Date
  """
  INFORMATION_DATE
}

type CustomCaseNotesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [CustomCaseNote!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type CustomDataElement {
  """
  Where to display the custom field in the application
  """
  displayHooks: [DisplayHook!]!
  fieldType: CustomDataElementType!
  id: ID!
  key: String!
  label: String!
  repeats: Boolean!
  value: CustomDataElementValue
  values: [CustomDataElementValue!]
}

"""
Allowed values for CustomDataElementDefinition.type
"""
enum CustomDataElementType {
  boolean
  date
  float
  integer
  json
  string
  text
}

type CustomDataElementValue {
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  id: ID!
  user: ApplicationUser
  valueBoolean: Boolean
  valueDate: ISO8601Date
  valueFloat: Float
  valueInteger: Int
  valueJson: JsonObject
  valueString: String
  valueText: String
}

"""
3.03.2
"""
enum DOBDataQuality {
  """
  (2) Approximate or partial DOB reported
  """
  APPROXIMATE_OR_PARTIAL_DOB_REPORTED

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Full DOB reported
  """
  FULL_DOB_REPORTED

  """
  Invalid Value
  """
  INVALID
}

enum DataCollectedAbout {
  """
  All Clients
  """
  ALL_CLIENTS

  """
  All Veterans
  """
  ALL_VETERANS

  """
  HoH
  """
  HOH

  """
  HoH and Adults
  """
  HOH_AND_ADULTS

  """
  Veteran HoH
  """
  VETERAN_HOH
}

type DataCollectionFeature {
  dataCollectedAbout: DataCollectedAbout!
  id: ID!
  legacy: Boolean!
  role: DataCollectionFeatureRole!
}

enum DataCollectionFeatureRole {
  """
  Case note
  """
  CASE_NOTE

  """
  CE assessment
  """
  CE_ASSESSMENT

  """
  CE event
  """
  CE_EVENT

  """
  Current living situation
  """
  CURRENT_LIVING_SITUATION

  """
  Referral request
  """
  REFERRAL_REQUEST

  """
  Service
  """
  SERVICE
}

"""
5.03.1
"""
enum DataCollectionStage {
  """
  (5) Annual assessment
  """
  ANNUAL_ASSESSMENT

  """
  Invalid Value
  """
  INVALID

  """
  (6) Post-exit
  """
  POST_EXIT

  """
  (1) Project entry
  """
  PROJECT_ENTRY

  """
  (3) Project exit
  """
  PROJECT_EXIT

  """
  (2) Update
  """
  UPDATE
}

"""
Autogenerated input type of DeleteAssessment
"""
input DeleteAssessmentInput {
  assessmentLockVersion: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteAssessment.
"""
type DeleteAssessmentPayload {
  assessmentId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated return type of DeleteAutoExitConfig.
"""
type DeleteAutoExitConfigPayload {
  autoExitConfig: AutoExitConfig
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteCeAssessment
"""
input DeleteCeAssessmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteCeAssessment.
"""
type DeleteCeAssessmentPayload {
  ceAssessment: CeAssessment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteCeEvent
"""
input DeleteCeEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteCeEvent.
"""
type DeleteCeEventPayload {
  ceEvent: Event

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteCeParticipation
"""
input DeleteCeParticipationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteCeParticipation.
"""
type DeleteCeParticipationPayload {
  ceParticipation: CeParticipation

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated return type of DeleteClientAlert.
"""
type DeleteClientAlertPayload {
  clientAlert: ClientAlert
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteClientFile
"""
input DeleteClientFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  fileId: ID!
}

"""
Autogenerated return type of DeleteClientFile.
"""
type DeleteClientFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  file: File
}

"""
Autogenerated input type of DeleteClientImage
"""
input DeleteClientImageInput {
  clientId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteClientImage.
"""
type DeleteClientImagePayload {
  client: Client

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteClient
"""
input DeleteClientInput {
  clientLockVersion: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Whether warnings have been confirmed
  """
  confirmed: Boolean
  id: ID!
}

"""
Autogenerated return type of DeleteClient.
"""
type DeleteClientPayload {
  client: Client

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteCurrentLivingSituation
"""
input DeleteCurrentLivingSituationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteCurrentLivingSituation.
"""
type DeleteCurrentLivingSituationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  currentLivingSituation: CurrentLivingSituation
  errors: [ValidationError!]!
}

"""
Autogenerated return type of DeleteCustomCaseNote.
"""
type DeleteCustomCaseNotePayload {
  customCaseNote: CustomCaseNote
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteEnrollment
"""
input DeleteEnrollmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteEnrollment.
"""
type DeleteEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollment: Enrollment
  errors: [ValidationError!]!
}

"""
Autogenerated return type of DeleteFormDefinition.
"""
type DeleteFormDefinitionPayload {
  errors: [ValidationError!]!
  formDefinition: FormDefinition
}

"""
Autogenerated input type of DeleteFunder
"""
input DeleteFunderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteFunder.
"""
type DeleteFunderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  funder: Funder
}

"""
Autogenerated input type of DeleteHmisParticipation
"""
input DeleteHmisParticipationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteHmisParticipation.
"""
type DeleteHmisParticipationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  hmisParticipation: HmisParticipation
}

"""
Autogenerated input type of DeleteInventory
"""
input DeleteInventoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteInventory.
"""
type DeleteInventoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  inventory: Inventory
}

"""
Autogenerated input type of DeleteOrganization
"""
input DeleteOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteOrganization.
"""
type DeleteOrganizationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  organization: Organization
}

"""
Autogenerated input type of DeleteProjectCoc
"""
input DeleteProjectCocInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProjectCoc.
"""
type DeleteProjectCocPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  projectCoc: ProjectCoc
}

"""
Autogenerated input type of DeleteProject
"""
input DeleteProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProject.
"""
type DeleteProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  project: Project
}

"""
Autogenerated return type of DeleteScanCardCode.
"""
type DeleteScanCardCodePayload {
  errors: [ValidationError!]!
  scanCardCode: ScanCardCode
}

"""
Autogenerated input type of DeleteService
"""
input DeleteServiceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteService.
"""
type DeleteServicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  service: Service
}

"""
Autogenerated input type of DeleteUnits
"""
input DeleteUnitsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  unitIds: [ID!]!
}

"""
Autogenerated return type of DeleteUnits.
"""
type DeleteUnitsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  unitIds: [ID!]
}

"""
V7.O
"""
enum DependentUnder6 {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (2) Youngest child is 1 to 6 years old and/or one or more children (any age) require significant care
  """
  YOUNGEST_CHILD_IS_1_TO_6_YEARS_OLD_AND_OR_ONE_OR_MORE_CHILDREN_ANY_AGE_REQUIRE_SIGNIFICANT_CARE

  """
  (1) Youngest child is under 1 year old
  """
  YOUNGEST_CHILD_IS_UNDER_1_YEAR_OLD
}

"""
3.12
"""
enum Destination {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (24) Deceased
  """
  DECEASED

  """
  (101) Emergency shelter, including hotel or motel paid for with emergency shelter voucher, or Host Home shelter
  """
  EMERGENCY_SHELTER_INCLUDING_HOTEL_OR_MOTEL_PAID_FOR_WITH_EMERGENCY_SHELTER_VOUCHER_OR_HOST_HOME_SHELTER

  """
  (215) Foster care home or foster care group home
  """
  FOSTER_CARE_HOME_OR_FOSTER_CARE_GROUP_HOME

  """
  (206) Hospital or other residential non-psychiatric medical facility
  """
  HOSPITAL_OR_OTHER_RESIDENTIAL_NON_PSYCHIATRIC_MEDICAL_FACILITY

  """
  (332) Host Home (non-crisis)
  """
  HOST_HOME_NON_CRISIS

  """
  (314) Hotel or motel paid for without emergency shelter voucher
  """
  HOTEL_OR_MOTEL_PAID_FOR_WITHOUT_EMERGENCY_SHELTER_VOUCHER

  """
  Invalid Value
  """
  INVALID

  """
  (207) Jail, prison or juvenile detention facility
  """
  JAIL_PRISON_OR_JUVENILE_DETENTION_FACILITY

  """
  (225) Long-term care facility or nursing home
  """
  LONG_TERM_CARE_FACILITY_OR_NURSING_HOME

  """
  (426) Moved from one HOPWA funded project to HOPWA PH
  """
  MOVED_FROM_ONE_HOPWA_FUNDED_PROJECT_TO_HOPWA_PH

  """
  (327) Moved from one HOPWA funded project to HOPWA TH
  """
  MOVED_FROM_ONE_HOPWA_FUNDED_PROJECT_TO_HOPWA_TH

  """
  (30) No exit interview completed
  """
  NO_EXIT_INTERVIEW_COMPLETED

  """
  (17) Other
  """
  OTHER

  """
  (411) Owned by client, no ongoing housing subsidy
  """
  OWNED_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (421) Owned by client, with ongoing housing subsidy
  """
  OWNED_BY_CLIENT_WITH_ONGOING_HOUSING_SUBSIDY

  """
  (116) Place not meant for habitation (e.g., a vehicle, an abandoned building,
  bus/train/subway station/airport or anywhere outside)
  """
  PLACE_NOT_MEANT_FOR_HABITATION

  """
  (204) Psychiatric hospital or other psychiatric facility
  """
  PSYCHIATRIC_HOSPITAL_OR_OTHER_PSYCHIATRIC_FACILITY

  """
  (410) Rental by client, no ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (435) Rental by client, with ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_ONGOING_HOUSING_SUBSIDY

  """
  (329) Residential project or halfway house with no homeless criteria
  """
  RESIDENTIAL_PROJECT_OR_HALFWAY_HOUSE_WITH_NO_HOMELESS_CRITERIA

  """
  (118) Safe Haven
  """
  SAFE_HAVEN

  """
  (422) Staying or living with family, permanent tenure
  """
  STAYING_OR_LIVING_WITH_FAMILY_PERMANENT_TENURE

  """
  (312) Staying or living with family, temporary tenure (e.g. room, apartment or house)
  """
  STAYING_OR_LIVING_WITH_FAMILY_TEMPORARY_TENURE

  """
  (423) Staying or living with friends, permanent tenure
  """
  STAYING_OR_LIVING_WITH_FRIENDS_PERMANENT_TENURE

  """
  (313) Staying or living with friends, temporary tenure (e.g. room apartment or house)
  """
  STAYING_OR_LIVING_WITH_FRIENDS_TEMPORARY_TENURE

  """
  (205) Substance abuse treatment facility or detox center
  """
  SUBSTANCE_ABUSE_TREATMENT_FACILITY_OR_DETOX_CENTER

  """
  (302) Transitional housing for homeless persons (including homeless youth)
  """
  TRANSITIONAL_HOUSING_FOR_HOMELESS_PERSONS
}

"""
Represents direct upload credentials
"""
type DirectUpload {
  """
  Created blob record ID
  """
  blobId: ID!
  filename: String!

  """
  HTTP request headers (JSON-encoded)
  """
  headers: String!

  """
  Created blob record signed ID
  """
  signedBlobId: ID!

  """
  Upload URL
  """
  url: String!
}

"""
File information required to prepare a direct upload
"""
input DirectUploadInput {
  """
  File size (bytes)
  """
  byteSize: Int!

  """
  MD5 file checksum as base64
  """
  checksum: String!

  """
  File content type
  """
  contentType: String!

  """
  Original file name
  """
  filename: String!
}

type DisabilitiesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Disability!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Disability {
  antiRetroviral: NoYesReasonsForMissingData
  client: Client!
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  disabilityResponse: CompleteDisabilityResponse!
  disabilityType: DisabilityType!
  enrollment: Enrollment!
  id: ID!
  indefiniteAndImpairs: NoYesReasonsForMissingData
  informationDate: ISO8601Date
  tCellCount: Int
  tCellCountAvailable: NoYesReasonsForMissingData
  tCellSource: TCellSourceViralLoadSource
  user: ApplicationUser
  viralLoad: Int
  viralLoadAvailable: ViralLoadAvailable
}

"""
Group of disability records that were collected at the same time
"""
type DisabilityGroup {
  antiRetroviral: NoYesReasonsForMissingData
  chronicHealthCondition: NoYesReasonsForMissingData
  chronicHealthConditionIndefiniteAndImpairs: NoYesReasonsForMissingData
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  developmentalDisability: NoYesReasonsForMissingData

  """
  Current disabling condition on the linked Enrollment. It may not match up with the disabilities specified in this group.
  """
  disablingCondition: NoYesReasonsForMissingData!
  enrollment: Enrollment!
  hivAids: NoYesReasonsForMissingData

  """
  Concatenated string of Disability record IDs
  """
  id: ID!
  informationDate: ISO8601Date!
  mentalHealthDisorder: NoYesReasonsForMissingData
  mentalHealthDisorderIndefiniteAndImpairs: NoYesReasonsForMissingData
  physicalDisability: NoYesReasonsForMissingData
  physicalDisabilityIndefiniteAndImpairs: NoYesReasonsForMissingData
  substanceUseDisorder: DisabilityResponse
  substanceUseDisorderIndefiniteAndImpairs: NoYesReasonsForMissingData
  tCellCount: Int
  tCellCountAvailable: NoYesReasonsForMissingData
  tCellSource: TCellSourceViralLoadSource
  user: ApplicationUser
  viralLoad: Int
  viralLoadAvailable: ViralLoadAvailable
}

"""
4.10.2
"""
enum DisabilityResponse {
  """
  (1) Alcohol use disorder
  """
  ALCOHOL_USE_DISORDER

  """
  (3) Both alcohol and drug use disorders
  """
  BOTH_ALCOHOL_AND_DRUG_USE_DISORDERS

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (2) Drug use disorder
  """
  DRUG_USE_DISORDER

  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO
}

"""
1.3
"""
enum DisabilityType {
  """
  (7) Chronic health condition
  """
  CHRONIC_HEALTH_CONDITION

  """
  (6) Developmental disability
  """
  DEVELOPMENTAL_DISABILITY

  """
  (8) HIV/AIDS
  """
  HIV_AIDS

  """
  Invalid Value
  """
  INVALID

  """
  (9) Mental health disorder
  """
  MENTAL_HEALTH_DISORDER

  """
  (5) Physical disability
  """
  PHYSICAL_DISABILITY

  """
  (10) Substance use disorder
  """
  SUBSTANCE_USE_DISORDER
}

enum DisabledDisplay {
  HIDDEN
  PROTECTED
  PROTECTED_WITH_VALUE
}

"""
V1.12
"""
enum DischargeStatus {
  """
  (4) Bad conduct
  """
  BAD_CONDUCT

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (5) Dishonorable
  """
  DISHONORABLE

  """
  (2) General under honorable conditions
  """
  GENERAL_UNDER_HONORABLE_CONDITIONS

  """
  (1) Honorable
  """
  HONORABLE

  """
  Invalid Value
  """
  INVALID

  """
  (7) Uncharacterized
  """
  UNCHARACTERIZED

  """
  (6) Under other than honorable conditions (OTH)
  """
  UNDER_OTHER_THAN_HONORABLE_CONDITIONS_OTH
}

"""
Application for displaying Custom Data Element values
"""
enum DisplayHook {
  """
  Display value as a column when viewing a table of records (e.g. Current Living Situations)
  """
  TABLE_SUMMARY
}

"""
HUD Employment Education
"""
type EmploymentEducation {
  client: Client!
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  employed: NoYesReasonsForMissingData
  employmentType: EmploymentType
  enrollment: Enrollment!
  id: ID!
  informationDate: ISO8601Date
  lastGradeCompleted: LastGradeCompleted
  notEmployedReason: NotEmployedReason
  schoolStatus: SchoolStatus
  user: ApplicationUser
}

type EmploymentEducationsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [EmploymentEducation!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
R6.A
"""
enum EmploymentType {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Full-time
  """
  FULL_TIME

  """
  Invalid Value
  """
  INVALID

  """
  (2) Part-time
  """
  PART_TIME

  """
  (3) Seasonal / sporadic (including day labor)
  """
  SEASONAL_SPORADIC
}

enum EnableBehavior {
  ALL
  ANY
}

enum EnableOperator {
  """
  Use with answerBoolean to specify is the item should be enabled or not.
  """
  ENABLED
  EQUAL

  """
  Use with answerBoolean to specify if an answer should exist or not.
  """
  EXISTS
  GREATER_THAN
  GREATER_THAN_EQUAL

  """
  Whether the value is in the answerCodes array.
  """
  IN

  """
  Whether the value includes the given item
  """
  INCLUDES
  LESS_THAN
  LESS_THAN_EQUAL
  NOT_EQUAL
}

type EnableWhen {
  """
  If question is boolean type, value for comparison
  """
  answerBoolean: Boolean

  """
  If question is choice type, value for comparison
  """
  answerCode: String

  """
  If question is choice type, and operator is IN, values for comparison
  """
  answerCodes: [String!]

  """
  If question is choice type and has grouped options, value for comparison
  """
  answerGroupCode: String

  """
  If question is numeric, value for comparison
  """
  answerNumber: Int

  """
  The linkId of a question to compare with the question using the operator
  """
  compareQuestion: String

  """
  The Local Constant that determines whether item is enabled/disabled
  """
  localConstant: String

  """
  How to evaluate the question's answer
  """
  operator: EnableOperator!

  """
  The linkId of question that determines whether item is enabled/disabled
  """
  question: String
}

"""
HUD Enrollment
"""
type Enrollment {
  access: EnrollmentAccess!
  alcoholDrugUseDisorderFam: NoYesMissing
  annualPercentAmi: AnnualPercentAMI
  assessmentEligibilities: [AssessmentEligibility!]!
  assessments(filters: AssessmentsForEnrollmentFilterOptions, inProgress: Boolean, limit: Int, offset: Int, sortOrder: AssessmentSortOption): AssessmentsPaginated!
  auditHistory(filters: EnrollmentAuditEventFilterOptions, limit: Int, offset: Int): EnrollmentAuditEventsPaginated!
  ceAssessments(limit: Int, offset: Int, sortOrder: AssessmentSortOption): CeAssessmentsPaginated!
  childWelfareMonths: Int
  childWelfareYears: RHYNumberofYears
  client: Client!
  clientEnrolledInPath: NoYesMissing
  clientLeaseholder: NoYesMissing
  cocPrioritized: NoYesMissing
  countOutreachReferralApproaches: Int
  criminalRecord: NoYesMissing
  currentLivingSituations(limit: Int, offset: Int): CurrentLivingSituationsPaginated!
  currentPregnant: NoYesMissing
  currentUnit: Unit
  customCaseNotes(limit: Int, offset: Int, sortOrder: CustomCaseNoteSortOption): CustomCaseNotesPaginated!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateOfBcpStatus: ISO8601Date
  dateOfEngagement: ISO8601Date
  dateOfPathStatus: ISO8601Date
  dateToStreetEssh: ISO8601Date
  dateUpdated: ISO8601DateTime
  dependentUnder6: DependentUnder6
  disabilities(limit: Int, offset: Int): DisabilitiesPaginated!
  disabledHoh: NoYesMissing
  disablingCondition: NoYesReasonsForMissingData
  eligibleForRhy: NoYesMissing
  employmentEducations(limit: Int, offset: Int): EmploymentEducationsPaginated!
  enrollmentCoc: String
  entryDate: ISO8601Date!
  events(limit: Int, offset: Int, sortOrder: EventSortOption): EventsPaginated!
  evictionHistory: EvictionHistory
  exitAssessment: Assessment
  exitDate: ISO8601Date
  exitDestination: Destination
  files(limit: Int, offset: Int, sortOrder: FileSortOption): FilesPaginated!
  formerWardChildWelfare: NoYesReasonsForMissingData
  formerWardJuvenileJustice: NoYesReasonsForMissingData
  healthAndDvs(limit: Int, offset: Int): HealthAndDvsPaginated!
  hh5Plus: NoYesMissing
  hohLeaseholder: NoYesMissing
  household: Household!
  householdId: ID!
  householdShortId: ID!
  householdSize: Int!
  hpScreeningScore: Int
  id: ID!
  inProgress: Boolean!
  incarceratedAdult: IncarceratedAdult
  incarceratedParent: NoYesMissing
  incomeBenefits(limit: Int, offset: Int): IncomeBenefitsPaginated!
  insufficientIncome: NoYesMissing
  intakeAssessment: Assessment
  juvenileJusticeMonths: Int
  juvenileJusticeYears: RHYNumberofYears
  lastBedNightDate: ISO8601Date
  lastCurrentLivingSituation: CurrentLivingSituation
  lengthOfStay: ResidencePriorLengthOfStay
  literalHomelessHistory: LiteralHomelessHistory
  livingSituation: PriorLivingSituation
  lockVersion: Int!
  losUnderThreshold: NoYesMissing
  mentalHealthDisorderFam: NoYesMissing
  monthsHomelessPastThreeYears: MonthsHomelessPastThreeYears
  moveInAddresses: [ClientAddress!]!
  moveInDate: ISO8601Date
  numUnitsAssignedToHousehold: Int!
  openEnrollmentSummary: [EnrollmentSummary!]!
  organizationName: String!
  percentAmi: PercentAMI
  physicalDisabilityFam: NoYesMissing
  preferredLanguage: PreferredLanguage
  preferredLanguageDifferent: String
  previousStreetEssh: NoYesMissing
  prisonDischarge: NoYesMissing
  project: Project!
  projectName: String!
  projectType: ProjectType
  reasonNoServices: ReasonNoServices
  reasonNotEnrolled: ReasonNotEnrolled
  referralSource: ReferralSource
  relationshipToHoH: RelationshipToHoH!
  reminders: [Reminder!]!
  rentalSubsidyType: RentalSubsidyType
  runawayYouth: NoYesReasonsForMissingData
  services(filters: ServicesForEnrollmentFilterOptions, limit: Int, offset: Int, sortOrder: ServiceSortOption): ServicesPaginated!
  sexOffender: NoYesMissing
  sexualOrientation: SexualOrientation
  sexualOrientationOther: String
  singleParent: NoYesMissing
  status: EnrollmentStatus!
  subsidyAtRisk: NoYesMissing
  targetScreenReqd: NoYesMissing
  thresholdScore: Int
  timeToHousingLoss: TimeToHousingLoss
  timesHomelessPastThreeYears: TimesHomelessPastThreeYears
  translationNeeded: NoYesReasonsForMissingData
  unemploymentFam: NoYesMissing
  user: ApplicationUser
  vamcStation: VamcStationNumber
  youthEducationStatuses(limit: Int, offset: Int): YouthEducationStatusesPaginated!
}

type EnrollmentAccess {
  canAuditEnrollments: Boolean!
  canDeleteEnrollments: Boolean!
  canEditEnrollments: Boolean!
  canSplitHouseholds: Boolean!
  canViewEnrollmentDetails: Boolean!
  id: ID!
}

type EnrollmentAccessSummariesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [EnrollmentAccessSummary!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type EnrollmentAccessSummary {
  clientId: ID
  clientName: String
  enrollmentId: ID!
  id: ID!
  lastAccessedAt: ISO8601DateTime!
  projectId: ID
  projectName: String
}

input EnrollmentAccessSummaryFilterOptions {
  onOrAfter: ISO8601Date
  project: [ID!]
  searchTerm: String
}

type EnrollmentAuditEvent {
  clientId: String
  clientName: String
  createdAt: ISO8601DateTime!
  enrollmentId: String
  event: AuditEventType!
  graphqlType: String!
  id: ID!

  """
  Format is { field: { fieldName: "GQL field name", displayName: "Human readable name", values: [old, new] } }
  """
  objectChanges: JsonObject
  projectId: String
  projectName: String
  recordId: ID!
  recordName: String!
  trueUser: ApplicationUser
  user: ApplicationUser
}

input EnrollmentAuditEventFilterOptions {
  enrollmentRecordType: [ID!]
  user: [ID!]
}

type EnrollmentAuditEventsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [EnrollmentAuditEvent!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

enum EnrollmentFilterOptionHouseholdTask {
  """
  Annual Due
  """
  ANNUAL_DUE
}

enum EnrollmentFilterOptionStatus {
  """
  Active
  """
  ACTIVE

  """
  Exited
  """
  EXITED

  """
  Incomplete
  """
  INCOMPLETE
}

"""
HUD Enrollment Sorting Options
"""
enum EnrollmentSortOption {
  """
  Age: Oldest to Youngest
  """
  AGE_OLDEST_TO_YOUNGEST

  """
  Age: Youngest to Oldest
  """
  AGE_YOUNGEST_TO_OLDEST

  """
  First Name: A-Z
  """
  FIRST_NAME_A_TO_Z

  """
  First Name: Z-A
  """
  FIRST_NAME_Z_TO_A

  """
  Household ID
  """
  HOUSEHOLD_ID

  """
  Last Name: A-Z
  """
  LAST_NAME_A_TO_Z

  """
  Last Name: Z-A
  """
  LAST_NAME_Z_TO_A

  """
  Most Recent
  """
  MOST_RECENT
}

"""
Status of this enrollment
"""
enum EnrollmentStatus {
  """
  Active
  """
  ACTIVE

  """
  Household Entry Incomplete
  """
  ANY_ENTRY_INCOMPLETE

  """
  Household Exit Incomplete
  """
  ANY_EXIT_INCOMPLETE

  """
  Exited
  """
  EXITED

  """
  Entry Incomplete
  """
  OWN_ENTRY_INCOMPLETE

  """
  Exit Incomplete
  """
  OWN_EXIT_INCOMPLETE
}

type EnrollmentSummary {
  canViewEnrollment: Boolean!
  entryDate: ISO8601Date!
  id: ID!
  inProgress: Boolean!
  moveInDate: ISO8601Date
  projectId: String!
  projectName: String!
  projectType: ProjectType!
}

input EnrollmentsForClientFilterOptions {
  householdTasks: [EnrollmentFilterOptionHouseholdTask!]
  openOnDate: ISO8601Date
  projectType: [ProjectType!]
  status: [EnrollmentFilterOptionStatus!]
}

input EnrollmentsForProjectFilterOptions {
  bedNightOnDate: ISO8601Date
  householdTasks: [EnrollmentFilterOptionHouseholdTask!]
  openOnDate: ISO8601Date
  searchTerm: String
  status: [EnrollmentFilterOptionStatus!]
}

type EnrollmentsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Enrollment!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
AC ESG Funding Service
"""
type EsgFundingService {
  clientDob: ISO8601Date
  clientId: ID!
  customDataElements: [CustomDataElement!]!
  dateProvided: ISO8601Date!
  faAmount: Float
  faEndDate: ISO8601Date
  faStartDate: ISO8601Date
  firstName: String
  id: ID!
  lastName: String
  mciIds: [ExternalIdentifier!]!
  organizationId: ID!
  organizationName: String!
  projectId: ID!
  projectName: String!
}

"""
HUD Event
"""
type Event {
  client: Client!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  enrollment: Enrollment!
  event: EventType!
  eventDate: ISO8601Date!
  id: ID!
  locationCrisisOrPhHousing: String
  probSolDivRrResult: NoYesMissing
  referralCaseManageAfter: NoYesMissing
  referralResult: ReferralResult
  resultDate: ISO8601Date
  user: ApplicationUser
}

"""
HUD Event Sorting Options
"""
enum EventSortOption {
  EVENT_DATE
}

"""
4.20.2
"""
enum EventType {
  """
  Invalid Value
  """
  INVALID

  """
  (2) Problem Solving/Diversion/Rapid Resolution intervention or service
  """
  PROBLEM_SOLVING_DIVERSION_RAPID_RESOLUTION_INTERVENTION_OR_SERVICE

  """
  (18) Referral to a Housing Stability Voucher
  """
  REFERRAL_TO_A_HOUSING_STABILITY_VOUCHER

  """
  (16) Referral to emergency assistance/flex fund/furniture assistance
  """
  REFERRAL_TO_EMERGENCY_ASSISTANCE_FLEX_FUND_FURNITURE_ASSISTANCE

  """
  (17) Referral to Emergency Housing Voucher (EHV)
  """
  REFERRAL_TO_EMERGENCY_HOUSING_VOUCHER_EHV

  """
  (10) Referral to Emergency Shelter bed opening
  """
  REFERRAL_TO_EMERGENCY_SHELTER_BED_OPENING

  """
  (7) Referral to Housing Navigation project or services
  """
  REFERRAL_TO_HOUSING_NAVIGATION_PROJECT_OR_SERVICES

  """
  (12) Referral to Joint TH-RRH project/unit/resource opening
  """
  REFERRAL_TO_JOINT_TH_RRH_PROJECT_UNIT_RESOURCE_OPENING

  """
  (8) Referral to Non-continuum services: Ineligible for continuum services
  """
  REFERRAL_TO_NON_CONTINUUM_SERVICES_INELIGIBLE_FOR_CONTINUUM_SERVICES

  """
  (9) Referral to Non-continuum services: No availability in continuum services
  """
  REFERRAL_TO_NON_CONTINUUM_SERVICES_NO_AVAILABILITY_IN_CONTINUUM_SERVICES

  """
  (15) Referral to Other PH project/unit/resource opening
  """
  REFERRAL_TO_OTHER_PH_PROJECT_UNIT_RESOURCE_OPENING

  """
  (5) Referral to Post-placement/ follow-up case management
  """
  REFERRAL_TO_POST_PLACEMENT_FOLLOW_UP_CASE_MANAGEMENT

  """
  (1) Referral to Prevention Assistance project
  """
  REFERRAL_TO_PREVENTION_ASSISTANCE_PROJECT

  """
  (14) Referral to PSH project resource opening
  """
  REFERRAL_TO_PSH_PROJECT_RESOURCE_OPENING

  """
  (13) Referral to RRH project resource opening
  """
  REFERRAL_TO_RRH_PROJECT_RESOURCE_OPENING

  """
  (3) Referral to scheduled Coordinated Entry Crisis Needs Assessment
  """
  REFERRAL_TO_SCHEDULED_COORDINATED_ENTRY_CRISIS_NEEDS_ASSESSMENT

  """
  (4) Referral to scheduled Coordinated Entry Housing Needs Assessment
  """
  REFERRAL_TO_SCHEDULED_COORDINATED_ENTRY_HOUSING_NEEDS_ASSESSMENT

  """
  (6) Referral to Street Outreach project or services
  """
  REFERRAL_TO_STREET_OUTREACH_PROJECT_OR_SERVICES

  """
  (11) Referral to Transitional Housing bed/unit opening
  """
  REFERRAL_TO_TRANSITIONAL_HOUSING_BED_UNIT_OPENING
}

type EventsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Event!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
V7.G
"""
enum EvictionHistory {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) No prior rental evictions
  """
  NO_PRIOR_RENTAL_EVICTIONS

  """
  (1) 1 prior rental eviction
  """
  NUM_1_PRIOR_RENTAL_EVICTION

  """
  (2) 2 or more prior rental evictions
  """
  NUM_2_OR_MORE_PRIOR_RENTAL_EVICTIONS
}

type Exit {
  aftercareDate: ISO8601Date
  aftercareMethods: [AftercareMethod!]
  aftercareProvided: AftercareProvided
  askedOrForcedToExchangeForSex: NoYesReasonsForMissingData
  askedOrForcedToExchangeForSexPastThreeMonths: NoYesReasonsForMissingData
  client: Client!
  cmExitReason: CmExitReason
  coercedToContinueWork: NoYesReasonsForMissingData
  counselingMethods: [CounselingMethod!]
  counselingReceived: NoYesMissing
  countOfExchangeForSex: CountExchangeForSex
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  destination: Destination!
  destinationSafeClient: NoYesReasonsForMissingData
  destinationSafeWorker: WorkerResponse
  destinationSubsidyType: RentalSubsidyType
  earlyExitReason: ExpelledReason
  enrollment: Enrollment!
  exchangeForSex: NoYesReasonsForMissingData
  exchangeForSexPastThreeMonths: NoYesReasonsForMissingData
  exitDate: ISO8601Date!
  housingAssessment: HousingAssessmentAtExit
  id: ID!
  laborExploitPastThreeMonths: NoYesReasonsForMissingData
  otherDestination: String
  posAdultConnections: WorkerResponse
  posCommunityConnections: WorkerResponse
  posPeerConnections: WorkerResponse
  postExitCounselingPlan: NoYesMissing
  projectCompletionStatus: ProjectCompletionStatus
  sessionCountAtExit: Int
  sessionsInPlan: Int
  subsidyInformation: SubsidyInformation
  subsidyInformationA: SubsidyInformationA
  subsidyInformationB: SubsidyInformationB
  user: ApplicationUser
  workPlaceViolenceThreats: NoYesReasonsForMissingData
  workplacePromiseDifference: NoYesReasonsForMissingData
}

"""
R17.A
"""
enum ExpelledReason {
  """
  (1) Criminal activity/destruction of property/violence
  """
  CRIMINAL_ACTIVITY_DESTRUCTION_OF_PROPERTY_VIOLENCE

  """
  Invalid Value
  """
  INVALID

  """
  (2) Non-compliance with project rules
  """
  NON_COMPLIANCE_WITH_PROJECT_RULES

  """
  (3) Non-payment of rent/occupancy charge
  """
  NON_PAYMENT_OF_RENT_OCCUPANCY_CHARGE

  """
  (5) Project terminated
  """
  PROJECT_TERMINATED

  """
  (4) Reached maximum time allowed by project
  """
  REACHED_MAXIMUM_TIME_ALLOWED_BY_PROJECT

  """
  (6) Unknown/disappeared
  """
  UNKNOWN_DISAPPEARED
}

"""
External Identifier
"""
type ExternalIdentifier {
  """
  API ID, not the actual identifier value
  """
  id: ID!

  """
  The identifier value
  """
  identifier: ID
  label: String!
  type: ExternalIdentifierType!
  url: String
}

"""
External Identifier Type
"""
enum ExternalIdentifierType {
  """
  HMIS ID
  """
  CLIENT_ID

  """
  MCI ID
  """
  MCI_ID

  """
  Personal ID
  """
  PERSONAL_ID

  """
  Warehouse ID
  """
  WAREHOUSE_ID
}

type FieldMapping {
  """
  Key of CustomDataElement where field is stored
  """
  customFieldKey: String

  """
  Field name that this field is stored as
  """
  fieldName: String

  """
  Type of record that this field is tied to
  """
  recordType: RelatedRecordType
}

"""
File
"""
type File {
  confidential: Boolean
  contentType: String
  dateCreated: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  effectiveDate: ISO8601Date
  enrollment: Enrollment
  enrollmentId: ID
  expirationDate: ISO8601Date
  fileBlobId: ID
  id: ID!
  name: String!
  ownFile: Boolean!
  redacted: Boolean!
  tags: [String!]!
  updatedBy: ApplicationUser
  uploadedBy: ApplicationUser
  url: String
  user: ApplicationUser
}

"""
File Sorting Options
"""
enum FileSortOption {
  DATE_CREATED
  DATE_UPDATED
}

type FilesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [File!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
FormDefinition
"""
type FormDefinition {
  cacheKey: ID!
  definition: FormDefinitionJson!
  formRules(filters: FormRuleFilterOptions, limit: Int, offset: Int, sortOrder: FormRuleSortOption): FormRulesPaginated!
  id: ID!
  identifier: String!
  rawDefinition: JsonObject!
  role: FormRole!
  system: Boolean!
  title: String!
}

type FormDefinitionForJsonResult {
  definition: FormDefinitionJson
  errors: [String!]!
}

input FormDefinitionInput {
  definition: String
  identifier: String
  role: FormRole
  title: String
}

type FormDefinitionJson {
  """
  Nested items
  """
  item: [FormItem!]!
}

type FormDefinitionsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [FormDefinition!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

input FormInput {
  clientId: ID
  confirmed: Boolean
  enrollmentId: ID
  formDefinitionId: ID!
  hudValues: JsonObject
  organizationId: ID
  projectId: ID
  recordId: ID
  serviceTypeId: ID
  values: JsonObject
}

"""
A question or group of questions
"""
type FormItem {
  """
  Whether this item corresponds to the assessment date. Must be used with DATE
  type. Should be used no more than once per form
  """
  assessmentDate: Boolean

  """
  Value(s) to autofill based on conditional logic
  """
  autofillValues: [AutofillValue!]

  """
  Bounds applied to the input value
  """
  bounds: [ValueBound!]

  """
  Label to use for placeholder and population table
  """
  briefText: String

  """
  Component to use for display/input of this item
  """
  component: Component

  """
  Include this item only if the Client meets this HUD DataCollectedAbout condition
  """
  dataCollectedAbout: DataCollectedAbout

  """
  How to display item if it is disabled
  """
  disabledDisplay: DisabledDisplay!
  enableBehavior: EnableBehavior!
  enableWhen: [EnableWhen!]

  """
  Helper text for the item
  """
  helperText: String

  """
  Whether the item should always be hidden
  """
  hidden: Boolean!

  """
  Initial value(s) when item is first rendered
  """
  initial: [InitialValue!]

  """
  Nested items
  """
  item: [FormItem!]

  """
  Unique identifier for item
  """
  linkId: String!
  mapping: FieldMapping

  """
  Permitted answers, for choice items
  """
  pickListOptions: [PickListOption!]

  """
  Reference to value set of possible answer options
  """
  pickListReference: String

  """
  Whether to allow pre-filling this section from a previous assessment
  """
  prefill: Boolean!

  """
  Prefix for the item label
  """
  prefix: String

  """
  Whether human editing is allowed
  """
  readOnly: Boolean!

  """
  Text to use for the item when displayed in read-only view
  """
  readonlyText: String

  """
  Whether the item may repeat (for choice types, this means multiple choice)
  """
  repeats: Boolean!

  """
  Whether the item must be included in data results
  """
  required: Boolean!

  """
  Whether to apply this field to all clients or a single client when bulk creating
  """
  serviceDetailType: ServiceDetailType

  """
  Size of the input element
  """
  size: InputSize

  """
  Primary text for the item
  """
  text: String
  type: ItemType!

  """
  Whether to show a warning if this question is unanswered
  """
  warnIfEmpty: Boolean!
}

enum FormRole {
  """
  Annual
  """
  ANNUAL

  """
  Auto exit config
  """
  AUTO_EXIT_CONFIG

  """
  Case note
  """
  CASE_NOTE

  """
  CE assessment
  """
  CE_ASSESSMENT

  """
  CE event
  """
  CE_EVENT

  """
  CE participation
  """
  CE_PARTICIPATION

  """
  Client
  """
  CLIENT

  """
  Client alert
  """
  CLIENT_ALERT

  """
  Client detail
  """
  CLIENT_DETAIL

  """
  Current living situation
  """
  CURRENT_LIVING_SITUATION

  """
  Custom assessment
  """
  CUSTOM_ASSESSMENT

  """
  Enrollment
  """
  ENROLLMENT

  """
  Exit
  """
  EXIT

  """
  File
  """
  FILE

  """
  Form definition
  """
  FORM_DEFINITION

  """
  Form rule
  """
  FORM_RULE

  """
  Funder
  """
  FUNDER

  """
  HMIS participation
  """
  HMIS_PARTICIPATION

  """
  Intake
  """
  INTAKE

  """
  Inventory
  """
  INVENTORY

  """
  New client enrollment
  """
  NEW_CLIENT_ENROLLMENT

  """
  Occurrence point
  """
  OCCURRENCE_POINT

  """
  Organization
  """
  ORGANIZATION

  """
  Post exit
  """
  POST_EXIT

  """
  Project
  """
  PROJECT

  """
  Project CoC
  """
  PROJECT_COC

  """
  Referral request
  """
  REFERRAL_REQUEST

  """
  Service
  """
  SERVICE

  """
  Update
  """
  UPDATE
}

type FormRule {
  active: Boolean!
  activeStatus: ActiveStatus!
  createdAt: ISO8601DateTime!
  dataCollectedAbout: DataCollectedAbout
  definitionId: ID
  definitionIdentifier: String!
  definitionRole: FormRole
  definitionTitle: String
  funder: FundingSource
  id: ID!
  organization: Organization
  organizationId: ID
  otherFunder: String
  project: Project
  projectId: ID
  projectType: ProjectType
  serviceCategory: ServiceCategory
  serviceType: ServiceType
  system: Boolean!
  updatedAt: ISO8601DateTime!
}

input FormRuleFilterOptions {
  activeStatus: [ActiveStatus!]
  appliedToProject: ID
  definition: ID
  formType: [FormRole!]
  projectType: [ProjectType!]
  systemForm: [SystemStatus!]
}

input FormRuleInput {
  activeStatus: ActiveStatus
  dataCollectedAbout: DataCollectedAbout
  funder: FundingSource
  organizationId: ID
  otherFunder: String
  projectId: ID
  projectType: ProjectType
}

enum FormRuleSortOption {
  """
  Date Updated
  """
  DATE_UPDATED

  """
  Form Title
  """
  FORM_TITLE

  """
  Form Type
  """
  FORM_TYPE
}

type FormRulesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [FormRule!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Funder {
  active: Boolean!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  endDate: ISO8601Date
  funder: FundingSource!
  grantId: String
  id: ID!
  otherFunder: String
  startDate: ISO8601Date
  user: ApplicationUser
}

"""
HUD Funder Sorting Options
"""
enum FunderSortOption {
  START_DATE
}

type FundersPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Funder!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
2.06.1
"""
enum FundingSource {
  """
  (21) HHS: PATH - Street Outreach & Supportive Services Only
  """
  HHS_PATH_STREET_OUTREACH_SUPPORTIVE_SERVICES_ONLY

  """
  (22) HHS: RHY - Basic Center Program (prevention and shelter)
  """
  HHS_RHY_BASIC_CENTER_PROGRAM

  """
  (26) HHS: RHY - Demonstration Project
  """
  HHS_RHY_DEMONSTRATION_PROJECT

  """
  (23) HHS: RHY - Maternity Group Home for Pregnant and Parenting Youth
  """
  HHS_RHY_MATERNITY_GROUP_HOME_FOR_PREGNANT_AND_PARENTING_YOUTH

  """
  (25) HHS: RHY - Street Outreach Project
  """
  HHS_RHY_STREET_OUTREACH_PROJECT

  """
  (24) HHS: RHY - Transitional Living Program
  """
  HHS_RHY_TRANSITIONAL_LIVING_PROGRAM

  """
  (1) HUD: CoC - Homelessness Prevention (High Performing Communities Only)
  """
  HUD_COC_HOMELESSNESS_PREVENTION

  """
  (49) HUD: CoC - Joint Component RRH/PSH [Deprecated]
  """
  HUD_COC_JOINT_COMPONENT_RRH_PSH_DEPRECATED

  """
  (44) HUD: CoC - Joint Component TH/RRH
  """
  HUD_COC_JOINT_COMPONENT_TH_RRH

  """
  (2) HUD: CoC - Permanent Supportive Housing
  """
  HUD_COC_PERMANENT_SUPPORTIVE_HOUSING

  """
  (3) HUD: CoC - Rapid Re-Housing
  """
  HUD_COC_RAPID_RE_HOUSING

  """
  (6) HUD: CoC - Safe Haven
  """
  HUD_COC_SAFE_HAVEN

  """
  (7) HUD: CoC - Single Room Occupancy (SRO)
  """
  HUD_COC_SINGLE_ROOM_OCCUPANCY_SRO

  """
  (4) HUD: CoC - Supportive Services Only
  """
  HUD_COC_SUPPORTIVE_SERVICES_ONLY

  """
  (5) HUD: CoC - Transitional Housing
  """
  HUD_COC_TRANSITIONAL_HOUSING

  """
  (43) HUD: CoC - Youth Homeless Demonstration Program (YHDP)
  """
  HUD_COC_YOUTH_HOMELESS_DEMONSTRATION_PROGRAM_YHDP

  """
  (47) HUD: ESG - CV
  """
  HUD_ESG_CV

  """
  (8) HUD: ESG - Emergency Shelter (operating and/or essential services)
  """
  HUD_ESG_EMERGENCY_SHELTER

  """
  (9) HUD: ESG - Homelessness Prevention
  """
  HUD_ESG_HOMELESSNESS_PREVENTION

  """
  (10) HUD: ESG - Rapid Rehousing
  """
  HUD_ESG_RAPID_REHOUSING

  """
  (53) HUD: ESG - RUSH
  """
  HUD_ESG_RUSH

  """
  (11) HUD: ESG - Street Outreach
  """
  HUD_ESG_STREET_OUTREACH

  """
  (50) HUD: HOME
  """
  HUD_HOME

  """
  (51) HUD: HOME (ARP)
  """
  HUD_HOME_ARP

  """
  (48) HUD: HOPWA - CV
  """
  HUD_HOPWA_CV

  """
  (13) HUD: HOPWA - Hotel/Motel Vouchers
  """
  HUD_HOPWA_HOTEL_MOTEL_VOUCHERS

  """
  (14) HUD: HOPWA - Housing Information
  """
  HUD_HOPWA_HOUSING_INFORMATION

  """
  (15) HUD: HOPWA - Permanent Housing (facility based or TBRA)
  """
  HUD_HOPWA_PERMANENT_HOUSING

  """
  (16) HUD: HOPWA - Permanent Housing Placement
  """
  HUD_HOPWA_PERMANENT_HOUSING_PLACEMENT

  """
  (17) HUD: HOPWA - Short-Term Rent, Mortgage, Utility assistance
  """
  HUD_HOPWA_SHORT_TERM_RENT_MORTGAGE_UTILITY_ASSISTANCE

  """
  (18) HUD: HOPWA - Short-Term Supportive Facility
  """
  HUD_HOPWA_SHORT_TERM_SUPPORTIVE_FACILITY

  """
  (19) HUD: HOPWA - Transitional Housing (facility based or TBRA)
  """
  HUD_HOPWA_TRANSITIONAL_HOUSING

  """
  (20) HUD: HUD/VASH
  """
  HUD_HUD_VASH

  """
  (35) HUD: Pay for Success
  """
  HUD_PAY_FOR_SUCCESS

  """
  (52) HUD: PIH (Emergency Housing Voucher)
  """
  HUD_PIH

  """
  (36) HUD: Public and Indian Housing (PIH) Programs
  """
  HUD_PUBLIC_AND_INDIAN_HOUSING_PIH_PROGRAMS

  """
  (12) HUD: Rural Housing Stability Assistance Program [Deprecated]
  """
  HUD_RURAL_HOUSING_STABILITY_ASSISTANCE_PROGRAM_DEPRECATED

  """
  (55) HUD: Rural Special NOFO
  """
  HUD_RURAL_SPECIAL_NOFO

  """
  (54) HUD: Unsheltered Special NOFO
  """
  HUD_UNSHELTERED_SPECIAL_NOFO

  """
  Invalid Value
  """
  INVALID

  """
  (46) Local or Other Funding Source
  """
  LOCAL_OR_OTHER_FUNDING_SOURCE

  """
  (34) N/A
  """
  N_A

  """
  (30) VA: Community Contract Safe Haven Program
  """
  VA_COMMUNITY_CONTRACT_SAFE_HAVEN_PROGRAM

  """
  (32) VA: Compensated Work Therapy Transitional Residence
  """
  VA_COMPENSATED_WORK_THERAPY_TRANSITIONAL_RESIDENCE

  """
  (27) VA: CRS Contract Residential Services
  """
  VA_CRS_CONTRACT_RESIDENTIAL_SERVICES

  """
  (37) VA: Grant Per Diem - Bridge Housing
  """
  VA_GRANT_PER_DIEM_BRIDGE_HOUSING

  """
  (45) VA: Grant Per Diem - Case Management/Housing Retention
  """
  VA_GRANT_PER_DIEM_CASE_MANAGEMENT_HOUSING_RETENTION

  """
  (40) VA: Grant Per Diem - Clinical Treatment
  """
  VA_GRANT_PER_DIEM_CLINICAL_TREATMENT

  """
  (39) VA: Grant Per Diem - Hospital to Housing
  """
  VA_GRANT_PER_DIEM_HOSPITAL_TO_HOUSING

  """
  (38) VA: Grant Per Diem - Low Demand
  """
  VA_GRANT_PER_DIEM_LOW_DEMAND

  """
  (41) VA: Grant Per Diem - Service Intensive Transitional Housing
  """
  VA_GRANT_PER_DIEM_SERVICE_INTENSIVE_TRANSITIONAL_HOUSING

  """
  (42) VA: Grant Per Diem - Transition in Place
  """
  VA_GRANT_PER_DIEM_TRANSITION_IN_PLACE

  """
  (33) VA: Supportive Services for Veteran Families
  """
  VA_SUPPORTIVE_SERVICES_FOR_VETERAN_FAMILIES
}

"""
HUD Gender (1.7)
"""
enum Gender {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (2) Culturally Specific Identity (e.g., Two-Spirit)
  """
  CULTURALLY_SPECIFIC

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (3) Different Identity
  """
  DIFFERENT_IDENTITY

  """
  (1) Man (Boy, if child)
  """
  MAN

  """
  (4) Non-Binary
  """
  NON_BINARY

  """
  (6) Questioning
  """
  QUESTIONING

  """
  (5) Transgender
  """
  TRANSGENDER

  """
  (0) Woman (Girl, if child)
  """
  WOMAN
}

"""
2.03.4
"""
enum GeographyType {
  """
  (99) Unknown / data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (3) Rural
  """
  RURAL

  """
  (2) Suburban
  """
  SUBURBAN

  """
  (1) Urban
  """
  URBAN
}

"""
2.08.1
"""
enum HMISParticipationType {
  """
  (2) Comparable Database Participating
  """
  COMPARABLE_DATABASE_PARTICIPATING

  """
  (1) HMIS Participating
  """
  HMIS_PARTICIPATING

  """
  Invalid Value
  """
  INVALID

  """
  (0) Not Participating
  """
  NOT_PARTICIPATING
}

"""
2.02.8
"""
enum HOPWAMedAssistedLivingFac {
  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (2) Non-HOPWA Funded Project
  """
  NON_HOPWA_FUNDED_PROJECT

  """
  (1) Yes
  """
  YES
}

type HealthAndDv {
  client: Client!
  currentlyFleeing: NoYesReasonsForMissingData
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  dentalHealthStatus: HealthStatus
  domesticViolenceSurvivor: NoYesReasonsForMissingData
  dueDate: ISO8601Date
  enrollment: Enrollment!
  generalHealthStatus: HealthStatus
  id: ID!
  informationDate: ISO8601Date
  mentalHealthStatus: HealthStatus
  pregnancyStatus: NoYesReasonsForMissingData
  user: ApplicationUser
  whenOccurred: WhenDVOccurred
}

type HealthAndDvsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [HealthAndDv!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
R7.1
"""
enum HealthStatus {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Excellent
  """
  EXCELLENT

  """
  (4) Fair
  """
  FAIR

  """
  (3) Good
  """
  GOOD

  """
  Invalid Value
  """
  INVALID

  """
  (5) Poor
  """
  POOR

  """
  (2) Very good
  """
  VERY_GOOD
}

type HmisParticipation {
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  hmisParticipationStatusEndDate: ISO8601Date
  hmisParticipationStatusStartDate: ISO8601Date
  hmisParticipationType: HMISParticipationType
  id: ID!
  user: ApplicationUser
}

type HmisParticipationsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [HmisParticipation!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Household {
  assessments(filters: AssessmentsForHouseholdFilterOptions, inProgress: Boolean, limit: Int, offset: Int, sortOrder: AssessmentSortOption): AssessmentsPaginated!
  householdClients: [HouseholdClient!]!
  householdSize: Int!
  id: ID!
  shortId: ID!
}

"""
HUD Client within a Household
"""
type HouseholdClient {
  client: Client!
  enrollment: Enrollment!
  id: ID!
  relationshipToHoH: RelationshipToHoH!
}

input HouseholdFilterOptions {
  hohAgeRange: AgeRange
  openOnDate: ISO8601Date
  searchTerm: String
  status: [EnrollmentFilterOptionStatus!]
}

"""
HUD Household Sorting Options
"""
enum HouseholdSortOption {
  """
  Most Recent
  """
  MOST_RECENT
}

"""
2.07.4
"""
enum HouseholdType {
  """
  (1) Households without children
  """
  HOUSEHOLDS_WITHOUT_CHILDREN

  """
  (3) Households with at least one adult and one child
  """
  HOUSEHOLDS_WITH_AT_LEAST_ONE_ADULT_AND_ONE_CHILD

  """
  (4) Households with only children
  """
  HOUSEHOLDS_WITH_ONLY_CHILDREN

  """
  Invalid Value
  """
  INVALID
}

type HouseholdsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Household!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
W5.1
"""
enum HousingAssessmentAtExit {
  """
  (1) Able to maintain the housing they had at project entry
  """
  ABLE_TO_MAINTAIN_THE_HOUSING_THEY_HAD_AT_PROJECT_ENTRY

  """
  (6) Client became homeless - moving to a shelter or other place unfit for human habitation
  """
  CLIENT_BECAME_HOMELESS_MOVING_TO_A_SHELTER_OR_OTHER_PLACE_UNFIT_FOR_HUMAN_HABITATION

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (10) Deceased
  """
  DECEASED

  """
  Invalid Value
  """
  INVALID

  """
  (7) Jail/prison
  """
  JAIL_PRISON

  """
  (4) Moved in with family/friends on a permanent basis
  """
  MOVED_IN_WITH_FAMILY_FRIENDS_ON_A_PERMANENT_BASIS

  """
  (3) Moved in with family/friends on a temporary basis
  """
  MOVED_IN_WITH_FAMILY_FRIENDS_ON_A_TEMPORARY_BASIS

  """
  (5) Moved to a transitional or temporary housing facility or program
  """
  MOVED_TO_A_TRANSITIONAL_OR_TEMPORARY_HOUSING_FACILITY_OR_PROGRAM

  """
  (2) Moved to new housing unit
  """
  MOVED_TO_NEW_HOUSING_UNIT
}

"""
2.02.D
"""
enum HousingType {
  """
  Invalid Value
  """
  INVALID

  """
  (2) Site-based - clustered / multiple sites
  """
  SITE_BASED_CLUSTERED_MULTIPLE_SITES

  """
  (1) Site-based - single site
  """
  SITE_BASED_SINGLE_SITE

  """
  (3) Tenant-based - scattered site
  """
  TENANT_BASED_SCATTERED_SITE
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
V7.I
"""
enum IncarceratedAdult {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Incarcerated once
  """
  INCARCERATED_ONCE

  """
  (2) Incarcerated two or more times
  """
  INCARCERATED_TWO_OR_MORE_TIMES

  """
  Invalid Value
  """
  INVALID

  """
  (0) Not incarcerated
  """
  NOT_INCARCERATED
}

type IncomeBenefit {
  adap: NoYesReasonsForMissingData
  alimony: NoYesMissing
  alimonyAmount: Float
  benefitsFromAnySource: NoYesReasonsForMissingData
  childSupport: NoYesMissing
  childSupportAmount: Float
  client: Client!
  cobra: NoYesMissing
  connectionWithSoar: NoYesReasonsForMissingData
  customDataElements: [CustomDataElement!]!
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  earned: NoYesMissing
  earnedAmount: Float
  employerProvided: NoYesMissing
  enrollment: Enrollment!
  ga: NoYesMissing
  gaAmount: Float
  id: ID!
  incomeFromAnySource: NoYesReasonsForMissingData
  indianHealthServices: NoYesMissing
  informationDate: ISO8601Date
  insuranceFromAnySource: NoYesReasonsForMissingData
  medicaid: NoYesMissing
  medicare: NoYesMissing
  noAdapReason: NoAssistanceReason
  noCobraReason: ReasonNotInsured
  noEmployerProvidedReason: ReasonNotInsured
  noIndianHealthServicesReason: ReasonNotInsured
  noMedicaidReason: ReasonNotInsured
  noMedicareReason: ReasonNotInsured
  noPrivatePayReason: ReasonNotInsured
  noRyanWhiteReason: NoAssistanceReason
  noSchipReason: ReasonNotInsured
  noStateHealthInsReason: ReasonNotInsured
  noVhaReason: ReasonNotInsured
  otherBenefitsSource: NoYesMissing
  otherBenefitsSourceIdentify: String
  otherIncomeAmount: Float
  otherIncomeSource: NoYesMissing
  otherIncomeSourceIdentify: String
  otherInsurance: NoYesMissing
  otherInsuranceIdentify: String
  otherTanf: NoYesMissing
  pension: NoYesMissing
  pensionAmount: Float
  privateDisability: NoYesMissing
  privateDisabilityAmount: Float
  privatePay: NoYesMissing
  ryanWhiteMedDent: NoYesReasonsForMissingData
  schip: NoYesMissing
  snap: NoYesMissing
  socSecRetirement: NoYesMissing
  socSecRetirementAmount: Float
  ssdi: NoYesMissing
  ssdiAmount: Float
  ssi: NoYesMissing
  ssiAmount: Float
  stateHealthIns: NoYesMissing
  tanf: NoYesMissing
  tanfAmount: Float
  tanfChildCare: NoYesMissing
  tanfTransportation: NoYesMissing
  totalMonthlyIncome: String
  unemployment: NoYesMissing
  unemploymentAmount: Float
  user: ApplicationUser
  vaDisabilityNonService: NoYesMissing
  vaDisabilityNonServiceAmount: Float
  vaDisabilityService: NoYesMissing
  vaDisabilityServiceAmount: Float
  vhaServices: NoYesMissing
  wic: NoYesMissing
  workersComp: NoYesMissing
  workersCompAmount: Float
}

type IncomeBenefitsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [IncomeBenefit!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

enum InitialBehavior {
  """
  When loading the form, only set the specified initial value if there is no existing value.
  """
  IF_EMPTY

  """
  When loading the form, always overwrite the existing value with specified initial value.
  """
  OVERWRITE
}

"""
Initial value when item is first rendered
"""
type InitialValue {
  initialBehavior: InitialBehavior!

  """
  Boolean to set as initial value
  """
  valueBoolean: Boolean

  """
  Code to set as initial value
  """
  valueCode: String

  """
  Name of local variable to use as initial value if present. Variable type should match item type.
  """
  valueLocalConstant: String

  """
  Number to set as initial value
  """
  valueNumber: Int
}

enum InputSize {
  LARGE
  MEDIUM
  SMALL
  XSMALL
}

type InventoriesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Inventory!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Inventory {
  active: Boolean!
  availability: Availability
  bedInventory: Int!
  chBedInventory: Int
  chVetBedInventory: Int
  chYouthBedInventory: Int
  cocCode: String
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  esBedType: BedType
  householdType: HouseholdType
  id: ID!
  inventoryEndDate: ISO8601Date
  inventoryStartDate: ISO8601Date
  otherBedInventory: Int
  unitInventory: Int!
  user: ApplicationUser
  vetBedInventory: Int
  youthBedInventory: Int
  youthVetBedInventory: Int
}

enum InventoryBedType {
  """
  Chronic
  """
  CHRONIC

  """
  Chronic Veteran
  """
  CHRONIC_VETERAN

  """
  Chronic Youth
  """
  CHRONIC_YOUTH

  """
  Other
  """
  OTHER

  """
  Veteran
  """
  VETERAN

  """
  Youth
  """
  YOUTH

  """
  Youth Veteran
  """
  YOUTH_VETERAN
}

"""
HUD Inventory Sorting Options
"""
enum InventorySortOption {
  START_DATE
}

enum ItemType {
  BOOLEAN
  CHOICE
  CURRENCY
  DATE
  DISPLAY
  FILE
  GROUP
  IMAGE
  INTEGER
  OBJECT
  OPEN_CHOICE
  STRING
  TEXT
}

"""
Arbitrary JSON Type
"""
scalar JsonObject

"""
R4.1
"""
enum LastGradeCompleted {
  """
  (11) Associate's degree
  """
  ASSOCIATE_S_DEGREE

  """
  (12) Bachelor's degree
  """
  BACHELOR_S_DEGREE

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (7) GED
  """
  GED

  """
  (2) Grades 5-6
  """
  GRADES_5_6

  """
  (3) Grades 7-8
  """
  GRADES_7_8

  """
  (4) Grades 9-11
  """
  GRADES_9_11

  """
  (5) Grade 12
  """
  GRADE_12

  """
  (13) Graduate degree
  """
  GRADUATE_DEGREE

  """
  Invalid Value
  """
  INVALID

  """
  (1) Less than grade 5
  """
  LESS_THAN_GRADE_5

  """
  (6) School program does not have grade levels
  """
  SCHOOL_PROGRAM_DOES_NOT_HAVE_GRADE_LEVELS

  """
  (10) Some college
  """
  SOME_COLLEGE

  """
  (14) Vocational certification
  """
  VOCATIONAL_CERTIFICATION
}

"""
V7.C
"""
enum LiteralHomelessHistory {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) Most recent episode occurred in the last year
  """
  MOST_RECENT_EPISODE_OCCURRED_IN_THE_LAST_YEAR

  """
  (1) Most recent episode occurred more than one year ago
  """
  MOST_RECENT_EPISODE_OCCURRED_MORE_THAN_ONE_YEAR_AGO

  """
  (2) None
  """
  NONE
}

input MciClearanceInput {
  dob: ISO8601Date!
  firstName: String!
  gender: [Gender!]
  lastName: String!
  middleName: String
  ssn: String
}

type MciClearanceMatch {
  age: Int!
  dob: ISO8601Date!

  """
  ID of existing Client that has the same MCI ID
  """
  existingClientId: ID
  firstName: String!
  gender: [Gender!]!
  id: ID!
  lastName: String!
  mciId: String!
  middleName: String
  nameSuffix: String
  score: Int!
  ssn: String
}

type MergeAuditEvent {
  client: Client
  clientIdsMerged: [ID!]!
  id: ID!
  mergedAt: ISO8601DateTime!
  preMergeState: JsonObject!
  user: ApplicationUser
}

input MergeAuditEventFilterOptions {
  user: [ID!]
}

type MergeAuditEventsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [MergeAuditEvent!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated input type of MergeClients
"""
input MergeClientsInput {
  clientIds: [ID!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of MergeClients.
"""
type MergeClientsPayload {
  client: Client

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
V1.11
"""
enum MilitaryBranch {
  """
  (2) Air Force
  """
  AIR_FORCE

  """
  (1) Army
  """
  ARMY

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (6) Coast Guard
  """
  COAST_GUARD

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) Marines
  """
  MARINES

  """
  (3) Navy
  """
  NAVY

  """
  (7) Space Force
  """
  SPACE_FORCE
}

"""
3.917.5
"""
enum MonthsHomelessPastThreeYears {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (113) More than 12 months
  """
  MORE_THAN_12_MONTHS

  """
  (101) 1
  """
  NUM_1

  """
  (110) 10
  """
  NUM_10

  """
  (111) 11
  """
  NUM_11

  """
  (112) 12
  """
  NUM_12

  """
  (102) 2
  """
  NUM_2

  """
  (103) 3
  """
  NUM_3

  """
  (104) 4
  """
  NUM_4

  """
  (105) 5
  """
  NUM_5

  """
  (106) 6
  """
  NUM_6

  """
  (107) 7
  """
  NUM_7

  """
  (108) 8
  """
  NUM_8

  """
  (109) 9
  """
  NUM_9
}

"""
C3.A
"""
enum MostRecentEdStatus {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (6) Higher education: Dropped out
  """
  HIGHER_EDUCATION_DROPPED_OUT

  """
  (7) Higher education: Obtained a credential/degree
  """
  HIGHER_EDUCATION_OBTAINED_A_CREDENTIAL_DEGREE

  """
  (5) Higher education: Pursuing a credential but not currently attending
  """
  HIGHER_EDUCATION_PURSUING_A_CREDENTIAL_BUT_NOT_CURRENTLY_ATTENDING

  """
  Invalid Value
  """
  INVALID

  """
  (2) K12: Dropped out
  """
  K12_DROPPED_OUT

  """
  (4) K12: Expelled
  """
  K12_EXPELLED

  """
  (0) K12: Graduated from high school
  """
  K12_GRADUATED_FROM_HIGH_SCHOOL

  """
  (1) K12: Obtained GED
  """
  K12_OBTAINED_GED

  """
  (3) K12: Suspended
  """
  K12_SUSPENDED
}

type Mutation {
  addRecentItem(
    """
    Parameters for AddRecentItem
    """
    input: AddRecentItemInput!
  ): ApplicationUser
  bulkMergeClients(
    """
    Parameters for BulkMergeClients
    """
    input: BulkMergeClientsInput!
  ): BulkMergeClientsPayload

  """
  Perform MCI clearance and return matches
  """
  clearMci(
    """
    Parameters for ClearMci
    """
    input: ClearMciInput!
  ): ClearMciPayload
  clearRecentItems(
    """
    Parameters for ClearRecentItems
    """
    input: ClearRecentItemsInput!
  ): ApplicationUser
  createAutoExitConfig(input: AutoExitConfigInput!): CreateAutoExitConfigPayload
  createClientAlert(input: ClientAlertInput!): CreateClientAlertPayload
  createDirectUpload(
    """
    Parameters for CreateDirectUpload
    """
    input: CreateDirectUploadInput!
  ): DirectUpload
  createFormDefinition(input: FormDefinitionInput!): CreateFormDefinitionPayload
  createFormRule(
    """
    Parameters for CreateFormRule
    """
    input: CreateFormRuleInput!
  ): CreateFormRulePayload

  """
  Create outgoing referral posting
  """
  createOutgoingReferralPosting(input: OutgoingReferralPostingInput): CreateOutgoingReferralPostingPayload
  createScanCardCode(clientId: ID!, expirationDate: ISO8601Date): CreateScanCardCodePayload
  createService(
    """
    Parameters for CreateService
    """
    input: CreateServiceInput!
  ): CreateServicePayload
  createUnits(
    """
    Parameters for CreateUnits
    """
    input: CreateUnitsInput!
  ): CreateUnitsPayload
  deleteAssessment(
    """
    Parameters for DeleteAssessment
    """
    input: DeleteAssessmentInput!
  ): DeleteAssessmentPayload
  deleteAutoExitConfig(id: ID!): DeleteAutoExitConfigPayload
  deleteCeAssessment(
    """
    Parameters for DeleteCeAssessment
    """
    input: DeleteCeAssessmentInput!
  ): DeleteCeAssessmentPayload
  deleteCeEvent(
    """
    Parameters for DeleteCeEvent
    """
    input: DeleteCeEventInput!
  ): DeleteCeEventPayload
  deleteCeParticipation(
    """
    Parameters for DeleteCeParticipation
    """
    input: DeleteCeParticipationInput!
  ): DeleteCeParticipationPayload
  deleteClient(
    """
    Parameters for DeleteClient
    """
    input: DeleteClientInput!
  ): DeleteClientPayload
  deleteClientAlert(id: ID!): DeleteClientAlertPayload
  deleteClientFile(
    """
    Parameters for DeleteClientFile
    """
    input: DeleteClientFileInput!
  ): DeleteClientFilePayload
  deleteClientImage(
    """
    Parameters for DeleteClientImage
    """
    input: DeleteClientImageInput!
  ): DeleteClientImagePayload
  deleteCurrentLivingSituation(
    """
    Parameters for DeleteCurrentLivingSituation
    """
    input: DeleteCurrentLivingSituationInput!
  ): DeleteCurrentLivingSituationPayload
  deleteCustomCaseNote(id: ID!): DeleteCustomCaseNotePayload
  deleteEnrollment(
    """
    Parameters for DeleteEnrollment
    """
    input: DeleteEnrollmentInput!
  ): DeleteEnrollmentPayload
  deleteFormDefinition(id: ID!): DeleteFormDefinitionPayload
  deleteFunder(
    """
    Parameters for DeleteFunder
    """
    input: DeleteFunderInput!
  ): DeleteFunderPayload
  deleteHmisParticipation(
    """
    Parameters for DeleteHmisParticipation
    """
    input: DeleteHmisParticipationInput!
  ): DeleteHmisParticipationPayload
  deleteInventory(
    """
    Parameters for DeleteInventory
    """
    input: DeleteInventoryInput!
  ): DeleteInventoryPayload
  deleteOrganization(
    """
    Parameters for DeleteOrganization
    """
    input: DeleteOrganizationInput!
  ): DeleteOrganizationPayload
  deleteProject(
    """
    Parameters for DeleteProject
    """
    input: DeleteProjectInput!
  ): DeleteProjectPayload
  deleteProjectCoc(
    """
    Parameters for DeleteProjectCoc
    """
    input: DeleteProjectCocInput!
  ): DeleteProjectCocPayload
  deleteScanCardCode(id: ID!): DeleteScanCardCodePayload
  deleteService(
    """
    Parameters for DeleteService
    """
    input: DeleteServiceInput!
  ): DeleteServicePayload
  deleteUnits(
    """
    Parameters for DeleteUnits
    """
    input: DeleteUnitsInput!
  ): DeleteUnitsPayload
  mergeClients(
    """
    Parameters for MergeClients
    """
    input: MergeClientsInput!
  ): MergeClientsPayload
  restoreScanCardCode(id: ID!): RestoreScanCardCodePayload

  """
  Create/Save assessment as work-in-progress
  """
  saveAssessment(
    """
    Parameters for SaveAssessment
    """
    input: SaveAssessmentInput!
  ): SaveAssessmentPayload

  """
  Create/Submit assessment, and create/update related HUD records
  """
  submitAssessment(
    """
    Parameters for SubmitAssessment
    """
    input: SubmitAssessmentInput!
  ): SubmitAssessmentPayload

  """
  Submit a form to create/update HUD record(s)
  """
  submitForm(
    """
    Parameters for SubmitForm
    """
    input: SubmitFormInput!
  ): SubmitFormPayload

  """
  Submit multiple assessments in a household
  """
  submitHouseholdAssessments(
    """
    Parameters for SubmitHouseholdAssessments
    """
    input: SubmitHouseholdAssessmentsInput!
  ): SubmitHouseholdAssessmentsPayload
  updateAutoExitConfig(id: ID!, input: AutoExitConfigInput!): UpdateAutoExitConfigPayload
  updateBedNights(
    """
    Parameters for UpdateBedNights
    """
    input: UpdateBedNightsInput!
  ): UpdateBedNightsPayload
  updateClientImage(
    """
    Parameters for UpdateClientImage
    """
    input: UpdateClientImageInput!
  ): UpdateClientImagePayload
  updateFormDefinition(id: ID!, input: FormDefinitionInput!): UpdateFormDefinitionPayload
  updateFormRule(
    """
    Parameters for UpdateFormRule
    """
    input: UpdateFormRuleInput!
  ): UpdateFormRulePayload

  """
  Update a referral posting
  """
  updateReferralPosting(id: ID!, input: ReferralPostingInput): UpdateReferralPostingPayload
  updateRelationshipToHoH(
    """
    Parameters for UpdateRelationshipToHoH
    """
    input: UpdateRelationshipToHoHInput!
  ): UpdateRelationshipToHoHPayload
  updateUnits(
    """
    Parameters for UpdateUnits
    """
    input: UpdateUnitsInput!
  ): UpdateUnitsPayload

  """
  Void a referral request
  """
  voidReferralRequest(referralRequestId: ID!): VoidReferralRequestPayload
}

"""
3.01.5
"""
enum NameDataQuality {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Full name reported
  """
  FULL_NAME_REPORTED

  """
  Invalid Value
  """
  INVALID

  """
  (2) Partial, street name, or code name reported
  """
  PARTIAL_STREET_NAME_OR_CODE_NAME_REPORTED
}

"""
W3
"""
enum NoAssistanceReason {
  """
  (2) Applied; client not eligible
  """
  APPLIED_CLIENT_NOT_ELIGIBLE

  """
  (1) Applied; decision pending
  """
  APPLIED_DECISION_PENDING

  """
  (3) Client did not apply
  """
  CLIENT_DID_NOT_APPLY

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (4) Insurance type not applicable for this client
  """
  INSURANCE_TYPE_NOT_APPLICABLE_FOR_THIS_CLIENT

  """
  Invalid Value
  """
  INVALID
}

"""
1.10
"""
enum NoYes {
  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (1) Yes
  """
  YES
}

"""
1.7
"""
enum NoYesMissing {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (1) Yes
  """
  YES
}

"""
1.8
"""
enum NoYesReasonsForMissingData {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (1) Yes
  """
  YES
}

"""
R6.B
"""
enum NotEmployedReason {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (1) Looking for work
  """
  LOOKING_FOR_WORK

  """
  (3) Not looking for work
  """
  NOT_LOOKING_FOR_WORK

  """
  (2) Unable to work
  """
  UNABLE_TO_WORK
}

type OccurrencePointForm {
  dataCollectedAbout: DataCollectedAbout!
  definition: FormDefinition!
  id: ID!
}

"""
Results from client/project omnisearch
"""
union OmnisearchResult = Client | Project

type Organization {
  access: OrganizationAccess!
  contactInformation: String
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  description: String
  hudId: ID!
  id: ID!
  organizationName: String!
  projects(filters: ProjectsForEnrollmentFilterOptions, limit: Int, offset: Int, sortOrder: ProjectSortOption): ProjectsPaginated!
  user: ApplicationUser
  victimServiceProvider: NoYesMissing!
}

type OrganizationAccess {
  canDeleteOrganization: Boolean!
  canEditOrganization: Boolean!
  id: ID!
}

"""
HUD Organization Sorting Options
"""
enum OrganizationSortOption {
  NAME
}

type OrganizationsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Organization!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

input OutgoingReferralPostingInput {
  enrollmentId: ID
  note: String
  projectId: ID
  unitTypeId: ID
}

"""
P2.A
"""
enum PATHReferralOutcome {
  """
  (1) Attained
  """
  ATTAINED

  """
  Invalid Value
  """
  INVALID

  """
  (2) Not attained
  """
  NOT_ATTAINED

  """
  (3) Unknown
  """
  UNKNOWN
}

"""
V4.1
"""
enum PercentAMI {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (1) 30% or less
  """
  NUM_30_OR_LESS

  """
  (2) 31% to 50%
  """
  NUM_31_TO_50

  """
  (3) 51% to 80%
  """
  NUM_51_TO_80

  """
  (4) 81% or greater
  """
  NUM_81_OR_GREATER
}

type PickListOption {
  """
  Code for the option
  """
  code: String!

  """
  Code for group that option belongs to, if grouped
  """
  groupCode: String

  """
  Label for group that option belongs to, if grouped
  """
  groupLabel: String

  """
  Helper text/html
  """
  helperText: String

  """
  Whether option is selected by default
  """
  initialSelected: Boolean

  """
  Label for the option
  """
  label: String

  """
  Numeric value, such as a score
  """
  numericValue: Int

  """
  Secondary label, such as project type or CoC code
  """
  secondaryLabel: String
}

enum PickListType {
  ALL_SERVICE_CATEGORIES
  ALL_SERVICE_TYPES

  """
  All unit types.
  """
  ALL_UNIT_TYPES
  AVAILABLE_FILE_TYPES
  AVAILABLE_SERVICE_TYPES

  """
  Units available for the given household at the given project
  """
  AVAILABLE_UNITS_FOR_ENROLLMENT

  """
  Unit types that have unoccupied units in the specified project
  """
  AVAILABLE_UNIT_TYPES

  """
  Grouped HUD CE Event types
  """
  CE_EVENTS
  CLIENT_AUDIT_EVENT_RECORD_TYPES
  COC
  CURRENT_LIVING_SITUATION
  DESTINATION

  """
  Projects that the User can enroll Clients in
  """
  ENROLLABLE_PROJECTS

  """
  Enrollments for the client, including WIP and Exited.
  """
  ENROLLMENTS_FOR_CLIENT
  ENROLLMENT_AUDIT_EVENT_RECORD_TYPES
  GEOCODE

  """
  Open HoH enrollments at the project.
  """
  OPEN_HOH_ENROLLMENTS_FOR_PROJECT

  """
  All Organizations that the User can see
  """
  ORGANIZATION

  """
  Unit types that are eligible to be added to project
  """
  POSSIBLE_UNIT_TYPES_FOR_PROJECT
  PRIOR_LIVING_SITUATION

  """
  All Projects that the User can see
  """
  PROJECT
  REFERRAL_OUTCOME

  """
  Residential Projects
  """
  RESIDENTIAL_PROJECTS
  STATE
  SUB_TYPE_PROVIDED_3
  SUB_TYPE_PROVIDED_4
  SUB_TYPE_PROVIDED_5

  """
  User Accounts
  """
  USERS
}

"""
C4.A
"""
enum PreferredLanguage {
  """
  (100) Acholi
  """
  ACHOLI

  """
  (101) Afar
  """
  AFAR

  """
  (102) Afrikaans
  """
  AFRIKAANS

  """
  (103) Ahtna
  """
  AHTNA

  """
  (104) Akan
  """
  AKAN

  """
  (105) Akateko
  """
  AKATEKO

  """
  (106) Akuzipigestun / St. Lawrence Island Yupik (aka Siberian Yupik)
  """
  AKUZIPIGESTUN_ST_LAWRENCE_ISLAND_YUPIK

  """
  (107) Albanian
  """
  ALBANIAN

  """
  (108) Algonquian
  """
  ALGONQUIAN

  """
  (109) Alutiiq
  """
  ALUTIIQ

  """
  (110) American Sign Language
  """
  AMERICAN_SIGN_LANGUAGE

  """
  (111) Amharic
  """
  AMHARIC

  """
  (112) Anuak
  """
  ANUAK

  """
  (113) Apache
  """
  APACHE

  """
  (114) Arabic
  """
  ARABIC

  """
  (115) Armenian
  """
  ARMENIAN

  """
  (116) Assyrian
  """
  ASSYRIAN

  """
  (117) Atnakenaege’ / Ahtna
  """
  ATNAKENAEGE_AHTNA

  """
  (118) Aymara
  """
  AYMARA

  """
  (119) Azerbaijani
  """
  AZERBAIJANI

  """
  (120) Bahasa
  """
  BAHASA

  """
  (121) Bahdini
  """
  BAHDINI

  """
  (122) Bajuni
  """
  BAJUNI

  """
  (123) Bambara
  """
  BAMBARA

  """
  (124) Bantu
  """
  BANTU

  """
  (125) Barese
  """
  BARESE

  """
  (126) Basque
  """
  BASQUE

  """
  (127) Bassa
  """
  BASSA

  """
  (128) Belorussian
  """
  BELORUSSIAN

  """
  (129) Bemba
  """
  BEMBA

  """
  (130) Benaadir
  """
  BENAADIR

  """
  (131) Bengali
  """
  BENGALI

  """
  (132) Berber
  """
  BERBER

  """
  (133) Black American Sign Language
  """
  BLACK_AMERICAN_SIGN_LANGUAGE

  """
  (134) Bosnian
  """
  BOSNIAN

  """
  (135) Bravanese
  """
  BRAVANESE

  """
  (136) Bulgarian
  """
  BULGARIAN

  """
  (137) Burmese
  """
  BURMESE

  """
  (138) Cambodian
  """
  CAMBODIAN

  """
  (139) Cantonese
  """
  CANTONESE

  """
  (140) Cape Verdean Creole
  """
  CAPE_VERDEAN_CREOLE

  """
  (141) Catalan
  """
  CATALAN

  """
  (142) Cebuano
  """
  CEBUANO

  """
  (143) Central Alaskan Yup’ik / Yugtun
  """
  CENTRAL_ALASKAN_YUP_IK_YUGTUN

  """
  (144) Chaldean
  """
  CHALDEAN

  """
  (145) Chamorro
  """
  CHAMORRO

  """
  (146) Chaochow
  """
  CHAOCHOW

  """
  (147) Cherokee
  """
  CHEROKEE

  """
  (148) Chinese
  """
  CHINESE

  """
  (149) Chipewyan
  """
  CHIPEWYAN

  """
  (150) Choctaw
  """
  CHOCTAW

  """
  (151) Chuukese
  """
  CHUUKESE

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (152) Cree
  """
  CREE

  """
  (153) Croatian
  """
  CROATIAN

  """
  (154) Czech
  """
  CZECH

  """
  (155) Dakota
  """
  DAKOTA

  """
  (156) Danish
  """
  DANISH

  """
  (157) Dari
  """
  DARI

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (158) Deg Xinag
  """
  DEG_XINAG

  """
  (160) Denaakk'e / Koyukon
  """
  DENAAKK_E_KOYUKON

  """
  (159) Dena'inaq' / Dena'ina
  """
  DENA_INAQ_DENA_INA

  """
  (161) Dewoin
  """
  DEWOIN

  """
  (21) Different preferred language
  """
  DIFFERENT_PREFERRED_LANGUAGE

  """
  (162) Dinak'i / Upper Kuskokwim
  """
  DINAK_I_UPPER_KUSKOKWIM

  """
  (163) Dinjii Zhuh K'yaa / Gwich'in
  """
  DINJII_ZHUH_K_YAA_GWICH_IN

  """
  (164) Dinka
  """
  DINKA

  """
  (165) Doogh Qinaq / Holikachuk
  """
  DOOGH_QINAQ_HOLIKACHUK

  """
  (166) Duala
  """
  DUALA

  """
  (167) Dutch
  """
  DUTCH

  """
  (168) Dzongkha
  """
  DZONGKHA

  """
  (169) Edo
  """
  EDO

  """
  (170) Ekegusli
  """
  EKEGUSLI

  """
  (171) English
  """
  ENGLISH

  """
  (172) Estonian
  """
  ESTONIAN

  """
  (173) Ewe
  """
  EWE

  """
  (174) Eyak
  """
  EYAK

  """
  (175) Farsi
  """
  FARSI

  """
  (176) Fijian
  """
  FIJIAN

  """
  (177) Filipino
  """
  FILIPINO

  """
  (178) Finnish
  """
  FINNISH

  """
  (179) Flemish
  """
  FLEMISH

  """
  (180) French
  """
  FRENCH

  """
  (181) French Cajun
  """
  FRENCH_CAJUN

  """
  (182) French Canadian
  """
  FRENCH_CANADIAN

  """
  (183) French Creole
  """
  FRENCH_CREOLE

  """
  (184) French Haitian
  """
  FRENCH_HAITIAN

  """
  (185) Fukienese
  """
  FUKIENESE

  """
  (186) Fulani
  """
  FULANI

  """
  (187) Fuzhou
  """
  FUZHOU

  """
  (188) Ga
  """
  GA

  """
  (189) Gaddang
  """
  GADDANG

  """
  (190) Gaelic
  """
  GAELIC

  """
  (191) Garre
  """
  GARRE

  """
  (192) Gen
  """
  GEN

  """
  (193) Georgian
  """
  GEORGIAN

  """
  (194) German
  """
  GERMAN

  """
  (195) Gheg
  """
  GHEG

  """
  (196) Gokana
  """
  GOKANA

  """
  (197) Greek
  """
  GREEK

  """
  (198) Gujarati
  """
  GUJARATI

  """
  (199) Gulay
  """
  GULAY

  """
  (200) Gullah
  """
  GULLAH

  """
  (201) Gurani
  """
  GURANI

  """
  (202) Gwich'in
  """
  GWICH_IN

  """
  (203) Haida
  """
  HAIDA

  """
  (204) Haitian
  """
  HAITIAN

  """
  (205) Haitian Creole
  """
  HAITIAN_CREOLE

  """
  (206) Hakka
  """
  HAKKA

  """
  (208) Hassaniyya
  """
  HASSANIYYA

  """
  (209) Hausa
  """
  HAUSA

  """
  (211) Hawaiian
  """
  HAWAIIAN

  """
  (210) Hawai'i Sign Language
  """
  HAWAI_I_SIGN_LANGUAGE

  """
  (212) Hebrew
  """
  HEBREW

  """
  (213) Hiligaynon
  """
  HILIGAYNON

  """
  (214) Hindi
  """
  HINDI

  """
  (215) Hindko
  """
  HINDKO

  """
  (216) Hmong
  """
  HMONG

  """
  (217) Hokkien
  """
  HOKKIEN

  """
  (218) Holikachuk
  """
  HOLIKACHUK

  """
  (219) Hopi
  """
  HOPI

  """
  (220) Huanese
  """
  HUANESE

  """
  (221) Hungarian
  """
  HUNGARIAN

  """
  (207) Häl golan / Hän
  """
  H_L_GOLAN_H_N

  """
  (222) Ibanag
  """
  IBANAG

  """
  (223) Icelandic
  """
  ICELANDIC

  """
  (224) Igbo
  """
  IGBO

  """
  (225) Ilocano
  """
  ILOCANO

  """
  (226) Indonesian
  """
  INDONESIAN

  """
  (227) Inuktitut
  """
  INUKTITUT

  """
  (228) Inupiatun / Inupiaq
  """
  INUPIATUN_INUPIAQ

  """
  Invalid Value
  """
  INVALID

  """
  (229) Italian
  """
  ITALIAN

  """
  (230) Jakartanese
  """
  JAKARTANESE

  """
  (231) Jamaican Patois
  """
  JAMAICAN_PATOIS

  """
  (232) Japanese
  """
  JAPANESE

  """
  (233) Jarai
  """
  JARAI

  """
  (234) Javanese
  """
  JAVANESE

  """
  (235) Jingpho
  """
  JINGPHO

  """
  (236) Jinyu
  """
  JINYU

  """
  (237) Juba Arabic
  """
  JUBA_ARABIC

  """
  (238) Jula
  """
  JULA

  """
  (239) Kaba
  """
  KABA

  """
  (240) Kamba
  """
  KAMBA

  """
  (241) Kam Muang
  """
  KAM_MUANG

  """
  (242) Kanjobal
  """
  KANJOBAL

  """
  (243) Kannada
  """
  KANNADA

  """
  (244) Karen
  """
  KAREN

  """
  (245) Kashmiri
  """
  KASHMIRI

  """
  (246) Kayah
  """
  KAYAH

  """
  (247) Kazakh
  """
  KAZAKH

  """
  (248) Keresan
  """
  KERESAN

  """
  (249) Keresan Sign Language
  """
  KERESAN_SIGN_LANGUAGE

  """
  (250) Kham
  """
  KHAM

  """
  (251) Khana
  """
  KHANA

  """
  (252) Khmer
  """
  KHMER

  """
  (254) Kikuyu
  """
  KIKUYU

  """
  (255) Kimiiru
  """
  KIMIIRU

  """
  (256) Kinyarwanda
  """
  KINYARWANDA

  """
  (257) Kiowa
  """
  KIOWA

  """
  (345) Kirundi
  """
  KIRUNDI

  """
  (258) Koho
  """
  KOHO

  """
  (259) Korean
  """
  KOREAN

  """
  (260) Koyukon
  """
  KOYUKON

  """
  (261) Krahn
  """
  KRAHN

  """
  (262) Krio
  """
  KRIO

  """
  (263) Kunama
  """
  KUNAMA

  """
  (264) Kurmanji
  """
  KURMANJI

  """
  (265) Kyrgyz
  """
  KYRGYZ

  """
  (253) K'iche'
  """
  K_ICHE

  """
  (266) Lakota
  """
  LAKOTA

  """
  (267) Laotian
  """
  LAOTIAN

  """
  (268) Latvian
  """
  LATVIAN

  """
  (269) Liberian Pidgin English
  """
  LIBERIAN_PIDGIN_ENGLISH

  """
  (270) Lingala
  """
  LINGALA

  """
  (271) Lingít / Tlingit
  """
  LING_T_TLINGIT

  """
  (272) Lithuanian
  """
  LITHUANIAN

  """
  (273) Lombard
  """
  LOMBARD

  """
  (274) Luba-Kasai
  """
  LUBA_KASAI

  """
  (275) Luganda
  """
  LUGANDA

  """
  (276) Luo
  """
  LUO

  """
  (277) Maay
  """
  MAAY

  """
  (278) Macedonian
  """
  MACEDONIAN

  """
  (279) Malay
  """
  MALAY

  """
  (280) Malayalam
  """
  MALAYALAM

  """
  (281) Maltese
  """
  MALTESE

  """
  (282) Mam
  """
  MAM

  """
  (283) Mandarin
  """
  MANDARIN

  """
  (284) Mandinka
  """
  MANDINKA

  """
  (285) Maninka
  """
  MANINKA

  """
  (286) Manobo
  """
  MANOBO

  """
  (287) Marathi
  """
  MARATHI

  """
  (288) Marka
  """
  MARKA

  """
  (289) Marshallese
  """
  MARSHALLESE

  """
  (290) Masalit
  """
  MASALIT

  """
  (291) Mbay
  """
  MBAY

  """
  (292) Mien
  """
  MIEN

  """
  (293) Mirpuri
  """
  MIRPURI

  """
  (294) Mixteco
  """
  MIXTECO

  """
  (295) Mizo
  """
  MIZO

  """
  (296) Mnong
  """
  MNONG

  """
  (297) Mongolian
  """
  MONGOLIAN

  """
  (298) Montenegrin
  """
  MONTENEGRIN

  """
  (299) Moroccan Arabic
  """
  MOROCCAN_ARABIC

  """
  (300) Mortlockese
  """
  MORTLOCKESE

  """
  (301) Muscogee
  """
  MUSCOGEE

  """
  (302) Napoletano
  """
  NAPOLETANO

  """
  (303) Navajo
  """
  NAVAJO

  """
  (304) Navajo Family Sign
  """
  NAVAJO_FAMILY_SIGN

  """
  (305) Ndebele
  """
  NDEBELE

  """
  (306) Neapolitan
  """
  NEAPOLITAN

  """
  (307) Nee’aandeg’ / Tanacross
  """
  NEE_AANDEG_TANACROSS

  """
  (308) Nepali
  """
  NEPALI

  """
  (309) Ngambay
  """
  NGAMBAY

  """
  (310) Nigerian Pidgin
  """
  NIGERIAN_PIDGIN

  """
  (311) Northern Sotho
  """
  NORTHERN_SOTHO

  """
  (312) Norwegian
  """
  NORWEGIAN

  """
  (313) Nuer
  """
  NUER

  """
  (314) Nupe
  """
  NUPE

  """
  (315) Nyanja
  """
  NYANJA

  """
  (316) Nyoro
  """
  NYORO

  """
  (318) Ojibwe
  """
  OJIBWE

  """
  (319) Oromo
  """
  OROMO

  """
  (317) O'odham
  """
  O_ODHAM

  """
  (320) Pampangan
  """
  PAMPANGAN

  """
  (321) Papiamento
  """
  PAPIAMENTO

  """
  (322) Pashto
  """
  PASHTO

  """
  (323) Pennsylvania Dutch
  """
  PENNSYLVANIA_DUTCH

  """
  (324) Persian
  """
  PERSIAN

  """
  (325) Plains Sign Language
  """
  PLAINS_SIGN_LANGUAGE

  """
  (326) Plateau Sign Language
  """
  PLATEAU_SIGN_LANGUAGE

  """
  (327) Plautdietsch
  """
  PLAUTDIETSCH

  """
  (328) Pohnpeian
  """
  POHNPEIAN

  """
  (329) Polish
  """
  POLISH

  """
  (330) Portuguese
  """
  PORTUGUESE

  """
  (331) Portuguese Brazilian
  """
  PORTUGUESE_BRAZILIAN

  """
  (332) Portuguese Cape Verdean
  """
  PORTUGUESE_CAPE_VERDEAN

  """
  (333) Portuguese Creole
  """
  PORTUGUESE_CREOLE

  """
  (334) Puerto Rican Sign Language
  """
  PUERTO_RICAN_SIGN_LANGUAGE

  """
  (335) Pugliese
  """
  PUGLIESE

  """
  (336) Pulaar
  """
  PULAAR

  """
  (337) Punjabi
  """
  PUNJABI

  """
  (338) Putian
  """
  PUTIAN

  """
  (339) Quechua
  """
  QUECHUA

  """
  (340) Quichua
  """
  QUICHUA

  """
  (341) Rade
  """
  RADE

  """
  (342) Rakhine
  """
  RAKHINE

  """
  (343) Rohingya
  """
  ROHINGYA

  """
  (344) Romanian
  """
  ROMANIAN

  """
  (346) Russian
  """
  RUSSIAN

  """
  (347) Samoan
  """
  SAMOAN

  """
  (348) Samoan Sign Language
  """
  SAMOAN_SIGN_LANGUAGE

  """
  (349) Sango
  """
  SANGO

  """
  (350) Seraiki
  """
  SERAIKI

  """
  (351) Serbian
  """
  SERBIAN

  """
  (352) Shanghainese
  """
  SHANGHAINESE

  """
  (353) Shona
  """
  SHONA

  """
  (354) Sichuan Yi
  """
  SICHUAN_YI

  """
  (355) Sicilian
  """
  SICILIAN

  """
  (356) Sindhi
  """
  SINDHI

  """
  (357) Sinhalese
  """
  SINHALESE

  """
  (358) Sioux
  """
  SIOUX

  """
  (359) Slovak
  """
  SLOVAK

  """
  (360) Slovenian
  """
  SLOVENIAN

  """
  (361) Sm’algyax / (Coast) Tsimshian
  """
  SM_ALGYAX_COAST_TSIMSHIAN

  """
  (362) Soga
  """
  SOGA

  """
  (363) Somali
  """
  SOMALI

  """
  (364) Soninke
  """
  SONINKE

  """
  (365) Sorani
  """
  SORANI

  """
  (366) Sothern Sotho
  """
  SOTHERN_SOTHO

  """
  (367) Spanish
  """
  SPANISH

  """
  (368) Spanish Creole
  """
  SPANISH_CREOLE

  """
  (369) Sudanese Arabic
  """
  SUDANESE_ARABIC

  """
  (370) Sugpiaq / Alutiiq
  """
  SUGPIAQ_ALUTIIQ

  """
  (371) Sunda
  """
  SUNDA

  """
  (372) Susu
  """
  SUSU

  """
  (373) Swahili
  """
  SWAHILI

  """
  (374) Swati
  """
  SWATI

  """
  (375) Swedish
  """
  SWEDISH

  """
  (376) Sylhetti
  """
  SYLHETTI

  """
  (377) Tagalog
  """
  TAGALOG

  """
  (378) Taiwanese
  """
  TAIWANESE

  """
  (379) Tajik
  """
  TAJIK

  """
  (380) Tamil
  """
  TAMIL

  """
  (381) Tanacross
  """
  TANACROSS

  """
  (382) Tanana
  """
  TANANA

  """
  (383) Telugu
  """
  TELUGU

  """
  (384) Thai
  """
  THAI

  """
  (385) Tibetan
  """
  TIBETAN

  """
  (386) Tigre
  """
  TIGRE

  """
  (387) Tigrigna
  """
  TIGRIGNA

  """
  (388) Tlingit
  """
  TLINGIT

  """
  (389) Toishanese
  """
  TOISHANESE

  """
  (390) Tongan
  """
  TONGAN

  """
  (391) Tooro
  """
  TOORO

  """
  (392) Trique
  """
  TRIQUE

  """
  (393) Tsimshian
  """
  TSIMSHIAN

  """
  (394) Tsonga
  """
  TSONGA

  """
  (395) Tswana
  """
  TSWANA

  """
  (396) Turkish
  """
  TURKISH

  """
  (397) Turkmen
  """
  TURKMEN

  """
  (398) Twi
  """
  TWI

  """
  (399) Tzotzil
  """
  TZOTZIL

  """
  (400) Ukrainian
  """
  UKRAINIAN

  """
  (401) Unangam Tunuu / Aleutian Aleut
  """
  UNANGAM_TUNUU_ALEUTIAN_ALEUT

  """
  (402) Upper Kuskokwim
  """
  UPPER_KUSKOKWIM

  """
  (403) Urdu
  """
  URDU

  """
  (404) Uyghur
  """
  UYGHUR

  """
  (405) Uzbek
  """
  UZBEK

  """
  (406) Venda
  """
  VENDA

  """
  (407) Vietnamese
  """
  VIETNAMESE

  """
  (408) Visayan
  """
  VISAYAN

  """
  (409) Welsh
  """
  WELSH

  """
  (410) Wodaabe
  """
  WODAABE

  """
  (411) Wolof
  """
  WOLOF

  """
  (412) Wuzhou
  """
  WUZHOU

  """
  (413) Xaat Kíl / Haida
  """
  XAAT_K_L_HAIDA

  """
  (414) Xhosa
  """
  XHOSA

  """
  (415) Xiang
  """
  XIANG

  """
  (416) Yemeni Arabic
  """
  YEMENI_ARABIC

  """
  (417) Yiddish
  """
  YIDDISH

  """
  (418) Yoruba
  """
  YORUBA

  """
  (419) Yunnanese
  """
  YUNNANESE

  """
  (420) Yupik
  """
  YUPIK

  """
  (421) Zapoteco
  """
  ZAPOTECO

  """
  (422) Zarma
  """
  ZARMA

  """
  (423) Zo
  """
  ZO

  """
  (424) Zulu
  """
  ZULU

  """
  (425) Zuni
  """
  ZUNI

  """
  (426) Zyphe
  """
  ZYPHE
}

"""
3.917
"""
enum PriorLivingSituation {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (101) Emergency shelter, including hotel or motel paid for with emergency shelter voucher, or Host Home shelter
  """
  EMERGENCY_SHELTER_INCLUDING_HOTEL_OR_MOTEL_PAID_FOR_WITH_EMERGENCY_SHELTER_VOUCHER_OR_HOST_HOME_SHELTER

  """
  (215) Foster care home or foster care group home
  """
  FOSTER_CARE_HOME_OR_FOSTER_CARE_GROUP_HOME

  """
  (206) Hospital or other residential non-psychiatric medical facility
  """
  HOSPITAL_OR_OTHER_RESIDENTIAL_NON_PSYCHIATRIC_MEDICAL_FACILITY

  """
  (332) Host Home (non-crisis)
  """
  HOST_HOME_NON_CRISIS

  """
  (314) Hotel or motel paid for without emergency shelter voucher
  """
  HOTEL_OR_MOTEL_PAID_FOR_WITHOUT_EMERGENCY_SHELTER_VOUCHER

  """
  Invalid Value
  """
  INVALID

  """
  (207) Jail, prison or juvenile detention facility
  """
  JAIL_PRISON_OR_JUVENILE_DETENTION_FACILITY

  """
  (225) Long-term care facility or nursing home
  """
  LONG_TERM_CARE_FACILITY_OR_NURSING_HOME

  """
  (411) Owned by client, no ongoing housing subsidy
  """
  OWNED_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (421) Owned by client, with ongoing housing subsidy
  """
  OWNED_BY_CLIENT_WITH_ONGOING_HOUSING_SUBSIDY

  """
  (116) Place not meant for habitation (e.g., a vehicle, an abandoned building,
  bus/train/subway station/airport or anywhere outside)
  """
  PLACE_NOT_MEANT_FOR_HABITATION

  """
  (204) Psychiatric hospital or other psychiatric facility
  """
  PSYCHIATRIC_HOSPITAL_OR_OTHER_PSYCHIATRIC_FACILITY

  """
  (410) Rental by client, no ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (435) Rental by client, with ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_ONGOING_HOUSING_SUBSIDY

  """
  (329) Residential project or halfway house with no homeless criteria
  """
  RESIDENTIAL_PROJECT_OR_HALFWAY_HOUSE_WITH_NO_HOMELESS_CRITERIA

  """
  (118) Safe Haven
  """
  SAFE_HAVEN

  """
  (335) Staying or living in a family member’s room, apartment, or house
  """
  STAYING_OR_LIVING_IN_A_FAMILY_MEMBER_S_ROOM_APARTMENT_OR_HOUSE

  """
  (336) Staying or living in a friend's room, apartment or house
  """
  STAYING_OR_LIVING_IN_A_FRIEND_S_ROOM_APARTMENT_OR_HOUSE

  """
  (205) Substance abuse treatment facility or detox center
  """
  SUBSTANCE_ABUSE_TREATMENT_FACILITY_OR_DETOX_CENTER

  """
  (302) Transitional housing for homeless persons (including homeless youth)
  """
  TRANSITIONAL_HOUSING_FOR_HOMELESS_PERSONS
}

"""
4.19.7
"""
enum PrioritizationStatus {
  """
  Invalid Value
  """
  INVALID

  """
  (2) Not placed on prioritization list
  """
  NOT_PLACED_ON_PRIORITIZATION_LIST

  """
  (1) Placed on prioritization list
  """
  PLACED_ON_PRIORITIZATION_LIST
}

type Project {
  HOPWAMedAssistedLivingFac: HOPWAMedAssistedLivingFac
  access: ProjectAccess!
  active: Boolean!
  affiliatedProjects: [Project!]!
  ceParticipations(limit: Int, offset: Int): CeParticipationsPaginated!
  contactInformation: String
  continuumProject: NoYes
  customDataElements: [CustomDataElement!]!

  """
  Occurrence Point data collection features that are enabled for this Project (e.g. Current Living Situations, Events)
  """
  dataCollectionFeatures: [DataCollectionFeature!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  description: String
  enrollments(filters: EnrollmentsForProjectFilterOptions, limit: Int, offset: Int, sortOrder: EnrollmentSortOption): EnrollmentsPaginated!
  funders(limit: Int, offset: Int, sortOrder: FunderSortOption): FundersPaginated!
  hasUnits: Boolean!
  hmisParticipations(limit: Int, offset: Int): HmisParticipationsPaginated!
  households(filters: HouseholdFilterOptions, limit: Int, offset: Int, sortOrder: HouseholdSortOption): HouseholdsPaginated!
  housingType: HousingType
  hudId: ID!
  id: ID!
  incomingReferralPostings(limit: Int, offset: Int): ReferralPostingsPaginated!
  inventories(limit: Int, offset: Int, sortOrder: InventorySortOption): InventoriesPaginated!

  """
  Forms for individual data elements that are collected at occurrence for this Project (e.g. Move-In Date)
  """
  occurrencePointForms: [OccurrencePointForm!]!
  operatingEndDate: ISO8601Date
  operatingStartDate: ISO8601Date
  organization: Organization!
  outgoingReferralPostings(limit: Int, offset: Int): ReferralPostingsPaginated!
  projectCocs(limit: Int, offset: Int): ProjectCocsPaginated!
  projectName: String!
  projectType: ProjectType
  referralRequests(limit: Int, offset: Int): ReferralRequestsPaginated!
  residentialAffiliation: NoYes
  residentialAffiliationProjectIds: [ID!]!
  residentialAffiliationProjects: [Project!]!
  rrhSubType: RRHSubType
  services(filters: ServicesForProjectFilterOptions, limit: Int, offset: Int, sortOrder: ServiceSortOption): ServicesPaginated!
  targetPopulation: TargetPopulation
  unitTypes: [UnitTypeCapacity!]!
  units(filters: UnitFilterOptions, limit: Int, offset: Int): UnitsPaginated!
  user: ApplicationUser
}

type ProjectAccess {
  canDeleteAssessments: Boolean!
  canDeleteEnrollments: Boolean!
  canDeleteProject: Boolean!
  canEditEnrollments: Boolean!
  canEditProjectDetails: Boolean!
  canEnrollClients: Boolean!
  canManageDeniedReferrals: Boolean!
  canManageIncomingReferrals: Boolean!
  canManageInventory: Boolean!
  canManageOutgoingReferrals: Boolean!
  canViewDob: Boolean!
  canViewEnrollmentDetails: Boolean!
  canViewFullSsn: Boolean!
  canViewPartialSsn: Boolean!
  id: ID!
}

type ProjectCoc {
  address1: String
  address2: String
  city: String
  cocCode: String
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  geocode: String!
  geographyType: GeographyType
  id: ID!
  state: String
  user: ApplicationUser
  zip: String
}

type ProjectCocsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ProjectCoc!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
R17.1
"""
enum ProjectCompletionStatus {
  """
  (2) Client voluntarily left early
  """
  CLIENT_VOLUNTARILY_LEFT_EARLY

  """
  (3) Client was expelled or otherwise involuntarily discharged from project
  """
  CLIENT_WAS_EXPELLED_OR_OTHERWISE_INVOLUNTARILY_DISCHARGED_FROM_PROJECT

  """
  (1) Completed project
  """
  COMPLETED_PROJECT

  """
  Invalid Value
  """
  INVALID
}

enum ProjectFilterOptionStatus {
  """
  Closed
  """
  CLOSED

  """
  Open
  """
  OPEN
}

input ProjectFilterOptions {
  funder: [FundingSource!]
  organization: [ID!]
  projectType: [ProjectType!]
  searchTerm: String
  status: [ProjectFilterOptionStatus!]
}

"""
HUD Project Sorting Options
"""
enum ProjectSortOption {
  """
  Name
  """
  NAME

  """
  Organization and Name
  """
  ORGANIZATION_AND_NAME
}

"""
HUD Project Types
"""
enum ProjectType {
  """
  Coordinated Entry
  """
  CE

  """
  Day Shelter
  """
  DAY_SHELTER

  """
  Emergency Shelter - Entry Exit
  """
  ES_ENTRY_EXIT

  """
  Emergency Shelter - Night-by-Night
  """
  ES_NBN

  """
  Homelessness Prevention
  """
  HP

  """
  Invalid Value
  """
  INVALID

  """
  Other
  """
  OTHER

  """
  PH - Housing with Services
  """
  PH_OPH

  """
  PH - Housing Only
  """
  PH_PH

  """
  PH - Permanent Supportive Housing
  """
  PH_PSH

  """
  PH - Rapid Re-Housing
  """
  PH_RRH

  """
  Safe Haven
  """
  SH

  """
  Street Outreach
  """
  SO

  """
  Services Only
  """
  SSO

  """
  Transitional Housing
  """
  TH
}

input ProjectsForEnrollmentFilterOptions {
  funder: [FundingSource!]
  projectType: [ProjectType!]
  searchTerm: String
  status: [ProjectFilterOptionStatus!]
}

type ProjectsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Project!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Query {
  access: QueryAccess!
  applicationUsers(filters: ApplicationUserFilterOptions, limit: Int, offset: Int): ApplicationUsersPaginated!

  """
  Assessment lookup
  """
  assessment(id: ID!): Assessment

  """
  Get the correct Form Definition to use for an assessment, by Role or FormDefinition ID
  """
  assessmentFormDefinition(
    """
    Date to use for Rule filtering on the definition
    """
    assessmentDate: ISO8601Date

    """
    Form Definition ID, if known
    """
    id: ID

    """
    Project to use for Rule filtering on the definition
    """
    projectId: ID!

    """
    Assessment role, if looking up by role
    """
    role: AssessmentRole
  ): FormDefinition
  autoExitConfigs(limit: Int, offset: Int): AutoExitConfigsPaginated!

  """
  Client lookup
  """
  client(id: ID!): Client

  """
  Custom forms for collecting and/or displaying custom details for a Client (outside of the Client demographics form)
  """
  clientDetailForms: [OccurrencePointForm!]!

  """
  Client omnisearch
  """
  clientOmniSearch(
    filters: ClientFilterOptions
    limit: Int
    offset: Int
    sortOrder: ClientSortOption

    """
    Omnisearch string
    """
    textSearch: String!
  ): ClientsPaginated!

  """
  Search for clients
  """
  clientSearch(filters: ClientFilterOptions, input: ClientSearchInput!, limit: Int, offset: Int, sortOrder: ClientSortOption): ClientsPaginated!
  currentUser: ApplicationUser
  deniedPendingReferralPostings(limit: Int, offset: Int): ReferralPostingsPaginated!

  """
  Enrollment lookup
  """
  enrollment(id: ID!): Enrollment
  esgFundingReport(clientIds: [ID!]!): [EsgFundingService!]!
  file(id: ID!): File
  formDefinition(id: ID!): FormDefinition
  formDefinitions(limit: Int, offset: Int): FormDefinitionsPaginated!
  formRule(id: ID!): FormRule
  formRules(filters: FormRuleFilterOptions, limit: Int, offset: Int, sortOrder: FormRuleSortOption): FormRulesPaginated!

  """
  Funder lookup
  """
  funder(id: ID!): Funder

  """
  Household lookup
  """
  household(id: ID!): Household

  """
  Get group of assessments that are performed together
  """
  householdAssessments(assessmentId: ID, assessmentRole: AssessmentRole!, householdId: ID!): [Assessment!]

  """
  Inventory lookup
  """
  inventory(id: ID!): Inventory
  mergeAuditHistory(filters: MergeAuditEventFilterOptions, limit: Int, offset: Int): MergeAuditEventsPaginated!
  mergeCandidates(limit: Int, offset: Int): ClientMergeCandidatesPaginated!

  """
  Organization lookup
  """
  organization(id: ID!): Organization
  organizations(limit: Int, offset: Int, sortOrder: OrganizationSortOption): OrganizationsPaginated!
  parsedFormDefinition(input: String!): FormDefinitionForJsonResult

  """
  Get list of options for pick list
  """
  pickList(clientId: ID, enrollmentId: ID, householdId: ID, pickListType: PickListType!, projectId: ID): [PickListOption!]!

  """
  Project lookup
  """
  project(id: ID!): Project

  """
  Project CoC lookup
  """
  projectCoc(id: ID!): ProjectCoc
  projects(filters: ProjectFilterOptions, limit: Int, offset: Int, sortOrder: ProjectSortOption): ProjectsPaginated!

  """
  Get the most relevant Form Definition to use for record viewing/editing
  """
  recordFormDefinition(
    """
    Optional Project to apply rule filtering (e.g. show/hide questions based on Project applicability)
    """
    projectId: ID
    role: RecordFormRole!
  ): FormDefinition
  referralPosting(id: ID!): ReferralPosting

  """
  Service lookup
  """
  service(id: ID!): Service
  serviceCategories(limit: Int, offset: Int): ServiceCategoriesPaginated!
  serviceCategory(id: ID!): ServiceCategory

  """
  Get most relevant form definition for the specified service type
  """
  serviceFormDefinition(projectId: ID!, serviceTypeId: ID!): FormDefinition

  """
  Service type lookup
  """
  serviceType(id: ID!): ServiceType
  staticFormDefinition(role: StaticFormRole!): FormDefinition!

  """
  User lookup
  """
  user(id: ID!): ApplicationUser
}

type QueryAccess {
  canAdministerHmis: Boolean!
  canAuditClients: Boolean!
  canAuditEnrollments: Boolean!
  canAuditUsers: Boolean!
  canConfigureDataCollection: Boolean!
  canDeleteAssessments: Boolean!
  canDeleteClients: Boolean!
  canDeleteEnrollments: Boolean!
  canDeleteOrganization: Boolean!
  canDeleteProject: Boolean!
  canEditClients: Boolean!
  canEditEnrollments: Boolean!
  canEditOrganization: Boolean!
  canEditProjectDetails: Boolean!
  canEnrollClients: Boolean!
  canImpersonateUsers: Boolean!
  canManageAnyClientFiles: Boolean!
  canManageClientAlerts: Boolean!
  canManageDeniedReferrals: Boolean!
  canManageIncomingReferrals: Boolean!
  canManageInventory: Boolean!
  canManageOutgoingReferrals: Boolean!
  canManageOwnClientFiles: Boolean!
  canManageScanCards: Boolean!
  canMergeClients: Boolean!
  canSplitHouseholds: Boolean!
  canTransferEnrollments: Boolean!
  canViewAnyConfidentialClientFiles: Boolean!
  canViewAnyNonconfidentialClientFiles: Boolean!
  canViewClientAlerts: Boolean!
  canViewClients: Boolean!
  canViewDob: Boolean!
  canViewEnrollmentDetails: Boolean!
  canViewFullSsn: Boolean!
  canViewHudChronicStatus: Boolean!
  canViewLimitedEnrollmentDetails: Boolean!
  canViewOpenEnrollmentSummary: Boolean!
  canViewPartialSsn: Boolean!
  canViewProject: Boolean!
  id: ID!
}

"""
R11.A
"""
enum RHYNumberofYears {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (1) Less than one year
  """
  LESS_THAN_ONE_YEAR

  """
  (2) 1 to 2 years
  """
  NUM_1_TO_2_YEARS

  """
  (3) 3 to 5 or more years
  """
  NUM_3_TO_5_OR_MORE_YEARS
}

"""
2.02.A
"""
enum RRHSubType {
  """
  Invalid Value
  """
  INVALID

  """
  (2) RRH: Housing with or without services
  """
  RRH_HOUSING_WITH_OR_WITHOUT_SERVICES

  """
  (1) RRH: Services Only
  """
  RRH_SERVICES_ONLY
}

"""
HUD Race (1.7)
"""
enum Race {
  """
  (AmIndAKNative) American Indian, Alaska Native, or Indigenous
  """
  AM_IND_AK_NATIVE

  """
  (Asian) Asian or Asian American
  """
  ASIAN

  """
  (BlackAfAmerican) Black, African American, or African
  """
  BLACK_AF_AMERICAN

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (HispanicLatinaeo) Hispanic/Latina/e/o
  """
  HISPANIC_LATINAEO

  """
  (MidEastNAfrican) Middle Eastern or North African
  """
  MID_EAST_N_AFRICAN

  """
  (NativeHIPacific) Native Hawaiian or Pacific Islander
  """
  NATIVE_HI_PACIFIC

  """
  (White) White
  """
  WHITE
}

"""
R2.A
"""
enum ReasonNoServices {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) Other
  """
  OTHER

  """
  (1) Out of age range
  """
  OUT_OF_AGE_RANGE

  """
  (3) Ward of the criminal justice system
  """
  WARD_OF_THE_CRIMINAL_JUSTICE_SYSTEM

  """
  (2) Ward of the state
  """
  WARD_OF_THE_STATE
}

"""
P3.A
"""
enum ReasonNotEnrolled {
  """
  (1) Client was found ineligible for PATH
  """
  CLIENT_WAS_FOUND_INELIGIBLE_FOR_PATH

  """
  (2) Client was not enrolled for other reason(s)
  """
  CLIENT_WAS_NOT_ENROLLED_FOR_OTHER_REASON_S

  """
  Invalid Value
  """
  INVALID
}

"""
4.04.A
"""
enum ReasonNotInsured {
  """
  (2) Applied; client not eligible
  """
  APPLIED_CLIENT_NOT_ELIGIBLE

  """
  (1) Applied; decision pending
  """
  APPLIED_DECISION_PENDING

  """
  (3) Client did not apply
  """
  CLIENT_DID_NOT_APPLY

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (4) Insurance type N/A for this client
  """
  INSURANCE_TYPE_N_A_FOR_THIS_CLIENT

  """
  Invalid Value
  """
  INVALID
}

"""
Types allowed for recent items
"""
enum RecentItemType {
  Client
  Project
}

"""
Form Roles that are used for record-editing. These types of forms are submitted using SubmitForm.
"""
enum RecordFormRole {
  """
  Case note
  """
  CASE_NOTE

  """
  CE assessment
  """
  CE_ASSESSMENT

  """
  CE event
  """
  CE_EVENT

  """
  CE participation
  """
  CE_PARTICIPATION

  """
  Client
  """
  CLIENT

  """
  Client detail
  """
  CLIENT_DETAIL

  """
  Current living situation
  """
  CURRENT_LIVING_SITUATION

  """
  Enrollment
  """
  ENROLLMENT

  """
  File
  """
  FILE

  """
  Funder
  """
  FUNDER

  """
  HMIS participation
  """
  HMIS_PARTICIPATION

  """
  Inventory
  """
  INVENTORY

  """
  New client enrollment
  """
  NEW_CLIENT_ENROLLMENT

  """
  Occurrence point
  """
  OCCURRENCE_POINT

  """
  Organization
  """
  ORGANIZATION

  """
  Project
  """
  PROJECT

  """
  Project CoC
  """
  PROJECT_COC

  """
  Referral request
  """
  REFERRAL_REQUEST

  """
  Service
  """
  SERVICE
}

"""
1.4
"""
enum RecordType {
  """
  (200) Bed Night
  """
  BED_NIGHT

  """
  (151) HOPWA Financial Assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE

  """
  (143) HOPWA Service
  """
  HOPWA_SERVICE

  """
  (210) HUD-VASH OTH Voucher Tracking
  """
  HUD_VASH_OTH_VOUCHER_TRACKING

  """
  Invalid Value
  """
  INVALID

  """
  (300) Moving On Assistance
  """
  MOVING_ON_ASSISTANCE

  """
  (161) PATH Referral
  """
  PATH_REFERRAL

  """
  (141) PATH Service
  """
  PATH_SERVICE

  """
  (142) RHY Service Connections
  """
  RHY_SERVICE_CONNECTIONS

  """
  (152) SSVF Financial Assistance
  """
  SSVF_FINANCIAL_ASSISTANCE

  """
  (144) SSVF Service
  """
  SSVF_SERVICE
}

"""
HUD Client within a Referral Household
"""
type ReferralHouseholdMember {
  client: Client!
  id: ID!
  openEnrollmentSummary: [EnrollmentSummary!]!
  relationshipToHoH: RelationshipToHoH!
}

"""
A referral for a household of one or more clients
"""
type ReferralPosting {
  assignedDate: ISO8601DateTime!
  chronic: Boolean
  denialNote: String
  denialReason: ReferralPostingDenialReasonType
  hohClient: Client

  """
  Enrollment for the HoH at the receiving Project (if the referral was accepted)
  """
  hohEnrollment: Enrollment
  hohMciId: ID
  hohName: String!
  householdMembers: [ReferralHouseholdMember!]!
  householdSize: Int!
  hudChronic: Boolean
  id: ID!
  needsWheelchairAccessibleUnit: Boolean
  organization: Organization
  postingIdentifier: ID

  """
  Project that household is being referred to
  """
  project: Project
  referralDate: ISO8601DateTime!
  referralIdentifier: ID
  referralNotes: String
  referralRequest: ReferralRequest
  referralResult: ReferralResult
  referredBy: String!

  """
  Name of project or external source that the referral originated from
  """
  referredFrom: String!
  resourceCoordinatorNotes: String
  score: Int
  status: ReferralPostingStatus!
  statusNote: String
  statusNoteUpdatedAt: ISO8601DateTime
  statusNoteUpdatedBy: String
  statusUpdatedAt: ISO8601DateTime
  statusUpdatedBy: String
  unitType: UnitTypeObject!
}

"""
Referral Posting Denial Reason
"""
enum ReferralPostingDenialReasonType {
  """
  Does not meet eligibility criteria
  """
  DoesNotMeetEligibilityCriteria

  """
  Enrolled, but declined HMIS data entry
  """
  EnrolledButDeclinedHMISDataEntry

  """
  Estimated vacancy no longer available
  """
  EstimatedVacancyNoLongerAvailable

  """
  HMIS user error
  """
  HMISUserError

  """
  Inability to complete intake
  """
  InabilityToCompleteIntake

  """
  No longer experiencing homelessness
  """
  NoLongerExperiencingHomelessness

  """
  No longer interested in this program
  """
  NoLongerInterestedInThisProgram
}

input ReferralPostingInput {
  denialNote: String
  denialReason: ReferralPostingDenialReasonType
  referralResult: ReferralResult
  resendReferralRequest: Boolean
  status: ID
  statusNote: String
}

"""
Referral Posting Status
"""
enum ReferralPostingStatus {
  """
  Accepted By Other Program
  """
  accepted_by_other_program_status

  """
  Accepted Pending
  """
  accepted_pending_status

  """
  Accepted
  """
  accepted_status

  """
  Assigned
  """
  assigned_status

  """
  Assigned To Other Program
  """
  assigned_to_other_program_status

  """
  Closed
  """
  closed_status

  """
  Denied Pending
  """
  denied_pending_status

  """
  Denied
  """
  denied_status

  """
  New
  """
  new_status

  """
  Not Selected
  """
  not_selected_status

  """
  Void
  """
  void_status
}

type ReferralPostingsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ReferralPosting!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type ReferralRequest {
  id: ID!
  identifier: ID!
  neededBy: ISO8601Date!
  requestedOn: ISO8601DateTime!
  requestorEmail: String!
  requestorName: String!
  requestorPhone: String!
  unitType: UnitTypeObject!
}

type ReferralRequestsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ReferralRequest!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
4.20.D
"""
enum ReferralResult {
  """
  Invalid Value
  """
  INVALID

  """
  (1) Successful referral: client accepted
  """
  SUCCESSFUL_REFERRAL_CLIENT_ACCEPTED

  """
  (2) Unsuccessful referral: client rejected
  """
  UNSUCCESSFUL_REFERRAL_CLIENT_REJECTED

  """
  (3) Unsuccessful referral: provider rejected
  """
  UNSUCCESSFUL_REFERRAL_PROVIDER_REJECTED
}

"""
R1.1
"""
enum ReferralSource {
  """
  (30) Child Welfare/CPS
  """
  CHILD_WELFARE_CPS

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (28) Hotline
  """
  HOTLINE

  """
  (2) Individual: Parent/Guardian/Relative/Friend/Foster Parent/Other Individual
  """
  INDIVIDUAL_PARENT_GUARDIAN_RELATIVE_FRIEND_FOSTER_PARENT_OTHER_INDIVIDUAL

  """
  Invalid Value
  """
  INVALID

  """
  (34) Juvenile Justice
  """
  JUVENILE_JUSTICE

  """
  (35) Law Enforcement/Police
  """
  LAW_ENFORCEMENT_POLICE

  """
  (37) Mental Hospital
  """
  MENTAL_HOSPITAL

  """
  (39) Other organization
  """
  OTHER_ORGANIZATION

  """
  (7) Outreach Project
  """
  OUTREACH_PROJECT

  """
  (18) Residential Project
  """
  RESIDENTIAL_PROJECT

  """
  (38) School
  """
  SCHOOL

  """
  (1) Self-referral
  """
  SELF_REFERRAL

  """
  (11) Temporary Shelter
  """
  TEMPORARY_SHELTER
}

"""
Related record type for a group of questions in an assessment
"""
enum RelatedRecordType {
  """
  CeAssessment
  """
  ASSESSMENT

  """
  Client
  """
  CLIENT

  """
  CurrentLivingSituation
  """
  CURRENT_LIVING_SITUATION

  """
  DisabilityGroup
  """
  DISABILITY_GROUP

  """
  EmploymentEducation
  """
  EMPLOYMENT_EDUCATION

  """
  Enrollment
  """
  ENROLLMENT

  """
  EnrollmentCoc
  """
  ENROLLMENT_COC

  """
  Event
  """
  EVENT

  """
  Exit
  """
  EXIT

  """
  HealthAndDv
  """
  HEALTH_AND_DV

  """
  IncomeBenefit
  """
  INCOME_BENEFIT

  """
  YouthEducationStatus
  """
  YOUTH_EDUCATION_STATUS
}

"""
3.15.1
"""
enum RelationshipToHoH {
  """
  (2) Child
  """
  CHILD

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) Other relative
  """
  OTHER_RELATIVE

  """
  (1) Self (head of household)
  """
  SELF_HEAD_OF_HOUSEHOLD

  """
  (3) Spouse or partner
  """
  SPOUSE_OR_PARTNER

  """
  (5) Unrelated household member
  """
  UNRELATED_HOUSEHOLD_MEMBER
}

type Reminder {
  """
  Relevant existing assessment, if any
  """
  assessmentId: ID
  client: Client!
  dueDate: ISO8601Date
  enrollment: Enrollment!

  """
  Form definition to use, if a new assessment is needed
  """
  formDefinitionId: ID
  id: ID!
  overdue: Boolean!
  topic: ReminderTopic!
}

enum ReminderTopic {
  aged_into_adulthood
  annual_assessment
  current_living_situation
  exit_incomplete
  intake_incomplete
}

"""
3.12.A
"""
enum RentalSubsidyType {
  """
  (436) Emergency Housing Voucher
  """
  EMERGENCY_HOUSING_VOUCHER

  """
  (437) Family Unification Program Voucher (FUP)
  """
  FAMILY_UNIFICATION_PROGRAM_VOUCHER_FUP

  """
  (438) Foster Youth to Independence Initiative (FYI)
  """
  FOSTER_YOUTH_TO_INDEPENDENCE_INITIATIVE_FYI

  """
  (428) GPD TIP housing subsidy
  """
  GPD_TIP_HOUSING_SUBSIDY

  """
  (433) HCV voucher (tenant or project based) (not dedicated)
  """
  HCV_VOUCHER

  """
  Invalid Value
  """
  INVALID

  """
  (440) Other permanent housing dedicated for formerly homeless persons
  """
  OTHER_PERMANENT_HOUSING_DEDICATED_FOR_FORMERLY_HOMELESS_PERSONS

  """
  (439) Permanent Supportive Housing
  """
  PERMANENT_SUPPORTIVE_HOUSING

  """
  (434) Public housing unit
  """
  PUBLIC_HOUSING_UNIT

  """
  (420) Rental by client, with other ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_OTHER_ONGOING_HOUSING_SUBSIDY

  """
  (431) RRH or equivalent subsidy
  """
  RRH_OR_EQUIVALENT_SUBSIDY

  """
  (419) VASH housing subsidy
  """
  VASH_HOUSING_SUBSIDY
}

"""
3.917.2
"""
enum ResidencePriorLengthOfStay {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) 90 days or more but less than one year
  """
  NUM_90_DAYS_OR_MORE_BUT_LESS_THAN_ONE_YEAR

  """
  (3) One month or more, but less than 90 days
  """
  ONE_MONTH_OR_MORE_BUT_LESS_THAN_90_DAYS

  """
  (10) One night or less
  """
  ONE_NIGHT_OR_LESS

  """
  (2) One week or more, but less than one month
  """
  ONE_WEEK_OR_MORE_BUT_LESS_THAN_ONE_MONTH

  """
  (5) One year or longer
  """
  ONE_YEAR_OR_LONGER

  """
  (11) Two to six nights
  """
  TWO_TO_SIX_NIGHTS
}

"""
Autogenerated return type of RestoreScanCardCode.
"""
type RestoreScanCardCodePayload {
  errors: [ValidationError!]!
  scanCardCode: ScanCardCode
}

"""
3.02.2
"""
enum SSNDataQuality {
  """
  (2) Approximate or partial SSN reported
  """
  APPROXIMATE_OR_PARTIAL_SSN_REPORTED

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Full SSN reported
  """
  FULL_SSN_REPORTED

  """
  Invalid Value
  """
  INVALID
}

"""
Autogenerated input type of SaveAssessment
"""
input SaveAssessmentInput {
  assessmentLockVersion: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: AssessmentInput!
}

"""
Autogenerated return type of SaveAssessment.
"""
type SaveAssessmentPayload {
  assessment: Assessment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

type ScanCardCode {
  createdBy: ApplicationUser
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  deletedBy: ApplicationUser
  expirationDate: ISO8601DateTime
  id: ID!
  value: ID!
}

type ScanCardCodesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ScanCardCode!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
R5.1
"""
enum SchoolStatus {
  """
  (2) Attending school irregularly
  """
  ATTENDING_SCHOOL_IRREGULARLY

  """
  (1) Attending school regularly
  """
  ATTENDING_SCHOOL_REGULARLY

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (5) Dropped out
  """
  DROPPED_OUT

  """
  (7) Expelled
  """
  EXPELLED

  """
  (3) Graduated from high school
  """
  GRADUATED_FROM_HIGH_SCHOOL

  """
  Invalid Value
  """
  INVALID

  """
  (4) Obtained GED
  """
  OBTAINED_GED

  """
  (6) Suspended
  """
  SUSPENDED
}

"""
HUD or Custom Service rendered
"""
type Service {
  client: Client!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateProvided: ISO8601Date
  dateUpdated: ISO8601DateTime
  enrollment: Enrollment!
  faAmount: Float
  faEndDate: ISO8601Date
  faStartDate: ISO8601Date
  id: ID!
  movingOnOtherType: String
  otherTypeProvided: String
  recordType: RecordType
  referralOutcome: PATHReferralOutcome
  serviceType: ServiceType!
  subTypeProvided: ServiceSubTypeProvided
  typeProvided: ServiceTypeProvided
  user: ApplicationUser
}

type ServiceCategoriesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ServiceCategory!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type ServiceCategory {
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  formRules(filters: FormRuleFilterOptions, limit: Int, offset: Int, sortOrder: FormRuleSortOption): FormRulesPaginated!
  hud: Boolean!
  id: ID!
  name: String!
  serviceTypes(limit: Int, offset: Int): ServiceTypesPaginated!
  user: ApplicationUser
}

enum ServiceDetailType {
  BULK
  CLIENT
}

input ServiceFilterOptions {
  dateProvided: ISO8601Date
  project: [ID!]
  projectType: [ProjectType!]
  serviceCategory: [ID!]
  serviceType: [ID!]
}

"""
HUD Service Input
"""
input ServiceInput {
  dateProvided: ISO8601Date
  enrollmentId: ID
  faAmount: Float
  movingOnOtherType: String
  otherTypeProvided: String
  recordType: RecordType
  referralOutcome: PATHReferralOutcome
  subTypeProvided: ServiceSubTypeProvided
  typeProvided: ServiceTypeProvided
}

"""
HMIS Service Sorting Options
"""
enum ServiceSortOption {
  DATE_PROVIDED
}

"""
HUD Service TypeProvided:SubTypeProvided aggregate (V2.A, V2.B, V2.C)
"""
enum ServiceSubTypeProvided {
  """
  Invalid Value
  """
  INVALID

  """
  (12) Child care
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__CHILD_CARE

  """
  (2) Daily living services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__DAILY_LIVING_SERVICES

  """
  (6) Fiduciary and representative payee services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__FIDUCIARY_AND_REPRESENTATIVE_PAYEE_SERVICES

  """
  (1) Health care services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__HEALTH_CARE_SERVICES

  """
  (13) Housing counseling
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__HOUSING_COUNSELING

  """
  (5) Income support services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__INCOME_SUPPORT_SERVICES

  """
  (7) Legal services - child support
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_CHILD_SUPPORT

  """
  (8) Legal services - eviction prevention
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_EVICTION_PREVENTION

  """
  (11) Legal services - other
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OTHER

  """
  (9) Legal services - outstanding fines and penalties
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OUTSTANDING_FINES_AND_PENALTIES

  """
  (10) Legal services - restore / acquire driver's license
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_RESTORE_ACQUIRE_DRIVER_S_LICENSE

  """
  (3) Personal financial planning services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__PERSONAL_FINANCIAL_PLANNING_SERVICES

  """
  (4) Transportation services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__TRANSPORTATION_SERVICES

  """
  (3) Educational assistance
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__EDUCATIONAL_ASSISTANCE

  """
  (2) Employment and training services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (4) Health care services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__HEALTH_CARE_SERVICES

  """
  (1) VA vocational and rehabilitation counseling
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__VA_VOCATIONAL_AND_REHABILITATION_COUNSELING

  """
  (10) Child care
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__CHILD_CARE

  """
  (4) Fiduciary and representative payee services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__FIDUCIARY_AND_REPRESENTATIVE_PAYEE_SERVICES

  """
  (11) Housing counseling
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__HOUSING_COUNSELING

  """
  (3) Income support services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__INCOME_SUPPORT_SERVICES

  """
  (5) Legal services - child support
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_CHILD_SUPPORT

  """
  (6) Legal services - eviction prevention
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_EVICTION_PREVENTION

  """
  (9) Legal services - other
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OTHER

  """
  (7) Legal services - outstanding fines and penalties
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OUTSTANDING_FINES_AND_PENALTIES

  """
  (8) Legal services - restore / acquire driver's license
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_RESTORE_ACQUIRE_DRIVER_S_LICENSE

  """
  (1) Personal financial planning services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__PERSONAL_FINANCIAL_PLANNING_SERVICES

  """
  (2) Transportation services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__TRANSPORTATION_SERVICES
}

type ServiceType {
  category: String!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  hud: Boolean!
  hudRecordType: RecordType
  hudTypeProvided: ServiceTypeProvided
  id: ID!
  name: String!
  user: ApplicationUser
}

"""
HUD Service RecordType:TypeProvided aggregate (P1.2, R14.2, W1.2, V2.2, W2.3, V3.3, P2.2, 4.14, V8.1, C2.2)
"""
enum ServiceTypeProvided {
  """
  (200) Bed Night
  """
  BED_NIGHT__BED_NIGHT

  """
  (7) Mortgage assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE__MORTGAGE_ASSISTANCE

  """
  (1) Rental assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE__RENTAL_ASSISTANCE

  """
  (2) Security deposits
  """
  HOPWA_FINANCIAL_ASSISTANCE__SECURITY_DEPOSITS

  """
  (3) Utility deposits
  """
  HOPWA_FINANCIAL_ASSISTANCE__UTILITY_DEPOSITS

  """
  (4) Utility payments
  """
  HOPWA_FINANCIAL_ASSISTANCE__UTILITY_PAYMENTS

  """
  (1) Adult day care and personal assistance
  """
  HOPWA_SERVICE__ADULT_DAY_CARE_AND_PERSONAL_ASSISTANCE

  """
  (2) Case management
  """
  HOPWA_SERVICE__CASE_MANAGEMENT

  """
  (3) Child care
  """
  HOPWA_SERVICE__CHILD_CARE

  """
  (4) Criminal justice/legal services
  """
  HOPWA_SERVICE__CRIMINAL_JUSTICE_LEGAL_SERVICES

  """
  (5) Education
  """
  HOPWA_SERVICE__EDUCATION

  """
  (6) Employment and training services
  """
  HOPWA_SERVICE__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (7) Food/meals/nutritional services
  """
  HOPWA_SERVICE__FOOD_MEALS_NUTRITIONAL_SERVICES

  """
  (8) Health/medical care
  """
  HOPWA_SERVICE__HEALTH_MEDICAL_CARE

  """
  (9) Life skills training
  """
  HOPWA_SERVICE__LIFE_SKILLS_TRAINING

  """
  (10) Mental health care/counseling
  """
  HOPWA_SERVICE__MENTAL_HEALTH_CARE_COUNSELING

  """
  (14) Other HOPWA funded service
  """
  HOPWA_SERVICE__OTHER_HOPWA_FUNDED_SERVICE

  """
  (11) Outreach and/or engagement
  """
  HOPWA_SERVICE__OUTREACH_AND_OR_ENGAGEMENT

  """
  (12) Substance use services/treatment
  """
  HOPWA_SERVICE__SUBSTANCE_USE_SERVICES_TREATMENT

  """
  (13) Transportation
  """
  HOPWA_SERVICE__TRANSPORTATION

  """
  (12) Other
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__OTHER

  """
  (1) Referral package forwarded to PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__REFERRAL_PACKAGE_FORWARDED_TO_PHA

  """
  (10) Veteran exited - family maintained the voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_FAMILY_MAINTAINED_THE_VOUCHER

  """
  (11) Veteran exited - prior to ever receiving a voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_PRIOR_TO_EVER_RECEIVING_A_VOUCHER

  """
  (9) Veteran exited - voucher was returned
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_VOUCHER_WAS_RETURNED

  """
  (2) Voucher denied by PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_DENIED_BY_PHA

  """
  (5) Voucher in use - veteran moved into housing
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_IN_USE_VETERAN_MOVED_INTO_HOUSING

  """
  (3) Voucher issued by PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_ISSUED_BY_PHA

  """
  (4) Voucher revoked or expired
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_REVOKED_OR_EXPIRED

  """
  (7) Voucher was administratively absorbed by new PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_ADMINISTRATIVELY_ABSORBED_BY_NEW_PHA

  """
  (8) Voucher was converted to Housing Choice Voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_CONVERTED_TO_HOUSING_CHOICE_VOUCHER

  """
  (6) Voucher was ported locally
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_PORTED_LOCALLY

  """
  Invalid Value
  """
  INVALID

  """
  (2) Financial assistance for Moving On (e.g., security deposit, moving expenses)
  """
  MOVING_ON_ASSISTANCE__FINANCIAL_ASSISTANCE_FOR_MOVING_ON

  """
  (4) Housing referral/placement
  """
  MOVING_ON_ASSISTANCE__HOUSING_REFERRAL_PLACEMENT

  """
  (3) Non-financial assistance for Moving On (e.g., housing navigation, transition support)
  """
  MOVING_ON_ASSISTANCE__NON_FINANCIAL_ASSISTANCE_FOR_MOVING_ON

  """
  (5) Other
  """
  MOVING_ON_ASSISTANCE__OTHER

  """
  (1) Subsidized housing application assistance
  """
  MOVING_ON_ASSISTANCE__SUBSIDIZED_HOUSING_APPLICATION_ASSISTANCE

  """
  (1) Community mental health
  """
  PATH_REFERRAL__COMMUNITY_MENTAL_HEALTH

  """
  (5) Educational services
  """
  PATH_REFERRAL__EDUCATIONAL_SERVICES

  """
  (9) Employment assistance
  """
  PATH_REFERRAL__EMPLOYMENT_ASSISTANCE

  """
  (6) Housing services
  """
  PATH_REFERRAL__HOUSING_SERVICES

  """
  (8) Income assistance
  """
  PATH_REFERRAL__INCOME_ASSISTANCE

  """
  (4) Job training
  """
  PATH_REFERRAL__JOB_TRAINING

  """
  (10) Medical insurance
  """
  PATH_REFERRAL__MEDICAL_INSURANCE

  """
  (7) Permanent housing
  """
  PATH_REFERRAL__PERMANENT_HOUSING

  """
  (3) Primary health/dental care
  """
  PATH_REFERRAL__PRIMARY_HEALTH_DENTAL_CARE

  """
  (2) Substance use treatment
  """
  PATH_REFERRAL__SUBSTANCE_USE_TREATMENT

  """
  (11) Temporary housing
  """
  PATH_REFERRAL__TEMPORARY_HOUSING

  """
  (6) Case management
  """
  PATH_SERVICE__CASE_MANAGEMENT

  """
  (14) Clinical assessment
  """
  PATH_SERVICE__CLINICAL_ASSESSMENT

  """
  (4) Community mental health
  """
  PATH_SERVICE__COMMUNITY_MENTAL_HEALTH

  """
  (3) Habilitation/rehabilitation
  """
  PATH_SERVICE__HABILITATION_REHABILITATION

  """
  (10) Housing eligibility determination
  """
  PATH_SERVICE__HOUSING_ELIGIBILITY_DETERMINATION

  """
  (8) Housing minor renovation
  """
  PATH_SERVICE__HOUSING_MINOR_RENOVATION

  """
  (9) Housing moving assistance
  """
  PATH_SERVICE__HOUSING_MOVING_ASSISTANCE

  """
  (12) One-time rent for eviction prevention
  """
  PATH_SERVICE__ONE_TIME_RENT_FOR_EVICTION_PREVENTION

  """
  (7) Residential supportive services
  """
  PATH_SERVICE__RESIDENTIAL_SUPPORTIVE_SERVICES

  """
  (1) Re-engagement
  """
  PATH_SERVICE__RE_ENGAGEMENT

  """
  (2) Screening
  """
  PATH_SERVICE__SCREENING

  """
  (11) Security deposits
  """
  PATH_SERVICE__SECURITY_DEPOSITS

  """
  (5) Substance use treatment
  """
  PATH_SERVICE__SUBSTANCE_USE_TREATMENT

  """
  (2) Community service/service learning (CSL)
  """
  RHY_SERVICE_CONNECTIONS__COMMUNITY_SERVICE_SERVICE_LEARNING_CSL

  """
  (7) Criminal justice /legal services
  """
  RHY_SERVICE_CONNECTIONS__CRIMINAL_JUSTICE_LEGAL_SERVICES

  """
  (5) Education
  """
  RHY_SERVICE_CONNECTIONS__EDUCATION

  """
  (6) Employment and training services
  """
  RHY_SERVICE_CONNECTIONS__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (14) Health/medical care
  """
  RHY_SERVICE_CONNECTIONS__HEALTH_MEDICAL_CARE

  """
  (26) Home-based Services
  """
  RHY_SERVICE_CONNECTIONS__HOME_BASED_SERVICES

  """
  (8) Life skills training
  """
  RHY_SERVICE_CONNECTIONS__LIFE_SKILLS_TRAINING

  """
  (10) Parenting education for youth with children
  """
  RHY_SERVICE_CONNECTIONS__PARENTING_EDUCATION_FOR_YOUTH_WITH_CHILDREN

  """
  (12) Post-natal care for client (person who gave birth)
  """
  RHY_SERVICE_CONNECTIONS__POST_NATAL_CARE_FOR_CLIENT

  """
  (27) Post-natal newborn care (wellness exams; immunizations)
  """
  RHY_SERVICE_CONNECTIONS__POST_NATAL_NEWBORN_CARE

  """
  (13) Pre-natal care
  """
  RHY_SERVICE_CONNECTIONS__PRE_NATAL_CARE

  """
  (28) STD Testing
  """
  RHY_SERVICE_CONNECTIONS__STD_TESTING

  """
  (29) Street-based Services
  """
  RHY_SERVICE_CONNECTIONS__STREET_BASED_SERVICES

  """
  (18) Substance use disorder/Prevention Services
  """
  RHY_SERVICE_CONNECTIONS__SUBSTANCE_USE_DISORDER_PREVENTION_SERVICES

  """
  (17) Substance use disorder treatment
  """
  RHY_SERVICE_CONNECTIONS__SUBSTANCE_USE_DISORDER_TREATMENT

  """
  (10) Child care
  """
  SSVF_FINANCIAL_ASSISTANCE__CHILD_CARE

  """
  (14) Emergency housing assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__EMERGENCY_HOUSING_ASSISTANCE

  """
  (16) Food Assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__FOOD_ASSISTANCE

  """
  (12) General housing stability assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__GENERAL_HOUSING_STABILITY_ASSISTANCE

  """
  (11) General housing stability assistance - emergency supplies [Deprecated]
  """
  SSVF_FINANCIAL_ASSISTANCE__GENERAL_HOUSING_STABILITY_ASSISTANCE_EMERGENCY_SUPPLIES_DEPRECATED

  """
  (17) Landlord Incentive
  """
  SSVF_FINANCIAL_ASSISTANCE__LANDLORD_INCENTIVE

  """
  (5) Moving costs
  """
  SSVF_FINANCIAL_ASSISTANCE__MOVING_COSTS

  """
  (1) Rental assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__RENTAL_ASSISTANCE

  """
  (2) Security deposit
  """
  SSVF_FINANCIAL_ASSISTANCE__SECURITY_DEPOSIT

  """
  (15) Shallow Subsidy - Financial Assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__SHALLOW_SUBSIDY_FINANCIAL_ASSISTANCE

  """
  (18) Tenant Incentive
  """
  SSVF_FINANCIAL_ASSISTANCE__TENANT_INCENTIVE

  """
  (8) Transportation services: tokens/vouchers
  """
  SSVF_FINANCIAL_ASSISTANCE__TRANSPORTATION_SERVICES_TOKENS_VOUCHERS

  """
  (9) Transportation services: vehicle repair/maintenance
  """
  SSVF_FINANCIAL_ASSISTANCE__TRANSPORTATION_SERVICES_VEHICLE_REPAIR_MAINTENANCE

  """
  (3) Utility deposit
  """
  SSVF_FINANCIAL_ASSISTANCE__UTILITY_DEPOSIT

  """
  (4) Utility fee payment assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__UTILITY_FEE_PAYMENT_ASSISTANCE

  """
  (4) Assistance obtaining/coordinating other public benefits
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS

  """
  (3) Assistance obtaining VA benefits
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS

  """
  (2) Case management services
  """
  SSVF_SERVICE__CASE_MANAGEMENT_SERVICES

  """
  (5) Direct provision of other public benefits
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS

  """
  (6) Other (non-TFA) supportive service approved by VA
  """
  SSVF_SERVICE__OTHER_NON_TFA_SUPPORTIVE_SERVICE_APPROVED_BY_VA

  """
  (1) Outreach services
  """
  SSVF_SERVICE__OUTREACH_SERVICES

  """
  (9) Rapid Resolution
  """
  SSVF_SERVICE__RAPID_RESOLUTION

  """
  (8) Returning Home
  """
  SSVF_SERVICE__RETURNING_HOME

  """
  (7) Shallow Subsidy
  """
  SSVF_SERVICE__SHALLOW_SUBSIDY
}

type ServiceTypesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ServiceType!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

input ServicesForEnrollmentFilterOptions {
  dateProvided: ISO8601Date
  serviceCategory: [ID!]
  serviceType: [ID!]
}

input ServicesForProjectFilterOptions {
  dateProvided: ISO8601Date
  serviceCategory: [ID!]
  serviceType: [ID!]
}

type ServicesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Service!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
R3.1
"""
enum SexualOrientation {
  """
  (4) Bisexual
  """
  BISEXUAL

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (2) Gay
  """
  GAY

  """
  (1) Heterosexual
  """
  HETEROSEXUAL

  """
  Invalid Value
  """
  INVALID

  """
  (3) Lesbian
  """
  LESBIAN

  """
  (6) Other
  """
  OTHER

  """
  (5) Questioning / unsure
  """
  QUESTIONING_UNSURE
}

"""
Form Roles that are used for non-configurable forms. These types of forms are submitted using custom mutations.
"""
enum StaticFormRole {
  """
  Auto exit config
  """
  AUTO_EXIT_CONFIG

  """
  Client alert
  """
  CLIENT_ALERT

  """
  Form definition
  """
  FORM_DEFINITION

  """
  Form rule
  """
  FORM_RULE
}

"""
Autogenerated input type of SubmitAssessment
"""
input SubmitAssessmentInput {
  assessmentLockVersion: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: AssessmentInput!
}

"""
Autogenerated return type of SubmitAssessment.
"""
type SubmitAssessmentPayload {
  assessment: Assessment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of SubmitForm
"""
input SubmitFormInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: FormInput!
  recordLockVersion: Int
}

"""
Autogenerated return type of SubmitForm.
"""
type SubmitFormPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  record: SubmitFormResult
}

"""
Union type of allowed records for form submission response
"""
union SubmitFormResult = CeAssessment | CeParticipation | Client | CurrentLivingSituation | CustomCaseNote | Enrollment | Event | File | Funder | HmisParticipation | Inventory | Organization | Project | ProjectCoc | ReferralRequest | Service

"""
Autogenerated input type of SubmitHouseholdAssessments
"""
input SubmitHouseholdAssessmentsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Whether warnings have been confirmed
  """
  confirmed: Boolean
  submissions: [VersionedRecordInput!]!

  """
  Validate assessments but don't submit them
  """
  validateOnly: Boolean
}

"""
Autogenerated return type of SubmitHouseholdAssessments.
"""
type SubmitHouseholdAssessmentsPayload {
  assessments: [Assessment!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
W5.AB
"""
enum SubsidyInformation {
  """
  Invalid Value
  """
  INVALID

  """
  (4) Only with financial assistance other than a subsidy
  """
  ONLY_WITH_FINANCIAL_ASSISTANCE_OTHER_THAN_A_SUBSIDY

  """
  (12) Without an on-going subsidy
  """
  WITHOUT_AN_ON_GOING_SUBSIDY

  """
  (1) Without a subsidy
  """
  WITHOUT_A_SUBSIDY

  """
  (3) With an on-going subsidy acquired since project entry
  """
  WITH_AN_ON_GOING_SUBSIDY_ACQUIRED_SINCE_PROJECT_ENTRY

  """
  (11) With on-going subsidy
  """
  WITH_ON_GOING_SUBSIDY

  """
  (2) With the subsidy they had at project entry
  """
  WITH_THE_SUBSIDY_THEY_HAD_AT_PROJECT_ENTRY
}

"""
W5.A
"""
enum SubsidyInformationA {
  """
  Invalid Value
  """
  INVALID

  """
  (4) Only with financial assistance other than a subsidy
  """
  ONLY_WITH_FINANCIAL_ASSISTANCE_OTHER_THAN_A_SUBSIDY

  """
  (1) Without a subsidy
  """
  WITHOUT_A_SUBSIDY

  """
  (3) With an on-going subsidy acquired since project entry
  """
  WITH_AN_ON_GOING_SUBSIDY_ACQUIRED_SINCE_PROJECT_ENTRY

  """
  (2) With the subsidy they had at project entry
  """
  WITH_THE_SUBSIDY_THEY_HAD_AT_PROJECT_ENTRY
}

"""
W5.B
"""
enum SubsidyInformationB {
  """
  Invalid Value
  """
  INVALID

  """
  (12) Without an on-going subsidy
  """
  WITHOUT_AN_ON_GOING_SUBSIDY

  """
  (11) With on-going subsidy
  """
  WITH_ON_GOING_SUBSIDY
}

enum SystemStatus {
  """
  Non-System
  """
  NON_SYSTEM

  """
  System
  """
  SYSTEM
}

"""
W4.B
"""
enum TCellSourceViralLoadSource {
  """
  (2) Client Report
  """
  CLIENT_REPORT

  """
  Invalid Value
  """
  INVALID

  """
  (1) Medical Report
  """
  MEDICAL_REPORT

  """
  (3) Other
  """
  OTHER
}

"""
2.02.7
"""
enum TargetPopulation {
  """
  (1) DV: Survivor of Domestic Violence
  """
  DV_SURVIVOR_OF_DOMESTIC_VIOLENCE

  """
  (3) HIV: Persons with HIV/AIDS
  """
  HIV_PERSONS_WITH_HIV_AIDS

  """
  Invalid Value
  """
  INVALID

  """
  (4) NA: Not applicable
  """
  NA_NOT_APPLICABLE
}

"""
V7.A
"""
enum TimeToHousingLoss {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (3) More than 21 days
  """
  MORE_THAN_21_DAYS

  """
  (2) 14-21 days
  """
  NUM_14_21_DAYS

  """
  (0) 1-6 days
  """
  NUM_1_6_DAYS

  """
  (1) 7-13 days
  """
  NUM_7_13_DAYS
}

"""
3.917.4
"""
enum TimesHomelessPastThreeYears {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (4) Four or more times
  """
  FOUR_OR_MORE_TIMES

  """
  Invalid Value
  """
  INVALID

  """
  (1) One time
  """
  ONE_TIME

  """
  (3) Three times
  """
  THREE_TIMES

  """
  (2) Two times
  """
  TWO_TIMES
}

type Unit {
  dateCreated: ISO8601DateTime!
  dateUpdated: ISO8601DateTime!
  id: ID!
  name: String!
  occupants: [Enrollment!]!
  project: Project
  unitSize: Int
  unitType: UnitTypeObject
  user: ApplicationUser
}

enum UnitFilterOptionStatus {
  """
  Available
  """
  AVAILABLE

  """
  Filled
  """
  FILLED
}

input UnitFilterOptions {
  status: [UnitFilterOptionStatus!]
  unitType: [ID!]
}

input UnitInput {
  """
  Number of units to create
  """
  count: Int

  """
  Prefix for unit names
  """
  prefix: String
  projectId: ID!
  unitTypeId: ID
}

type UnitTypeCapacity {
  availability: Int!
  capacity: Int!
  id: ID!
  unitType: String!
}

type UnitTypeObject {
  bedType: InventoryBedType
  dateCreated: ISO8601DateTime!
  dateUpdated: ISO8601DateTime!
  description: String
  id: ID!
  unitSize: Int
}

type UnitsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Unit!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated return type of UpdateAutoExitConfig.
"""
type UpdateAutoExitConfigPayload {
  autoExitConfig: AutoExitConfig
  errors: [ValidationError!]!
}

"""
Autogenerated input type of UpdateBedNights
"""
input UpdateBedNightsInput {
  action: BulkActionType!
  bedNightDate: ISO8601Date!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollmentIds: [ID!]!
  projectId: ID!
}

"""
Autogenerated return type of UpdateBedNights.
"""
type UpdateBedNightsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  success: Boolean
}

"""
Autogenerated input type of UpdateClientImage
"""
input UpdateClientImageInput {
  clientId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  imageBlobId: ID!
}

"""
Autogenerated return type of UpdateClientImage.
"""
type UpdateClientImagePayload {
  client: Client

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated return type of UpdateFormDefinition.
"""
type UpdateFormDefinitionPayload {
  errors: [ValidationError!]!
  formDefinition: FormDefinition
}

"""
Autogenerated input type of UpdateFormRule
"""
input UpdateFormRuleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  input: FormRuleInput!
}

"""
Autogenerated return type of UpdateFormRule.
"""
type UpdateFormRulePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  formRule: FormRule!
}

"""
Autogenerated return type of UpdateReferralPosting.
"""
type UpdateReferralPostingPayload {
  errors: [ValidationError!]!
  record: ReferralPosting
}

"""
Autogenerated input type of UpdateRelationshipToHoH
"""
input UpdateRelationshipToHoHInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Whether user has confirmed the action
  """
  confirmed: Boolean
  enrollmentId: ID!
  enrollmentLockVersion: Int
  relationshipToHoH: RelationshipToHoH!
}

"""
Autogenerated return type of UpdateRelationshipToHoH.
"""
type UpdateRelationshipToHoHPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollment: Enrollment
  errors: [ValidationError!]!
}

"""
Autogenerated input type of UpdateUnits
"""
input UpdateUnitsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String
  projectId: ID!
  unitIds: [ID!]!
}

"""
Autogenerated return type of UpdateUnits.
"""
type UpdateUnitsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  units: [Unit!]!
}

input UserAuditEventFilterOptions {
  clientRecordType: [ID!]
  enrollmentRecordType: [ID!]
}

type ValidationError {
  attribute: String!
  data: JsonObject
  fullMessage: String!

  """
  Unique ID for this error
  """
  id: String

  """
  Link ID of form item if this error is linked to a specific item
  """
  linkId: String
  message: String!
  readableAttribute: String

  """
  ID of the AR record this error pertains to
  """
  recordId: ID
  section: String
  severity: ValidationSeverity!
  type: ValidationType!
}

enum ValidationSeverity {
  error
  warning
}

enum ValidationType {
  data_not_collected
  information
  invalid
  not_allowed
  not_found
  out_of_range
  required
  server_error
}

"""
Bound applied to the response value. The bound may or may not be dependent on another questions answer.
"""
type ValueBound {
  """
  Unique identifier for this bound
  """
  id: String!

  """
  Value to offset the comparison value. Can be positive or negative. If date, offset is applied as number of days.
  """
  offset: Int

  """
  Link ID of dependent question, if this items value should be compared to another items value
  """
  question: String

  """
  Severity of bound. If error, user will be unable to submit a value that does not meet this condition.
  """
  severity: ValidationSeverity!
  type: BoundType!
  valueDate: ISO8601Date

  """
  Name of Local Constant to use for comparison
  """
  valueLocalConstant: String
  valueNumber: Int
}

"""
V6.1
"""
enum VamcStationNumber {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (402) (402) Togus, ME
  """
  NUM_402_TOGUS_ME

  """
  (405) (405) White River Junction, VT
  """
  NUM_405_WHITE_RIVER_JUNCTION_VT

  """
  (436) (436) Montana HCS
  """
  NUM_436_MONTANA_HCS

  """
  (437) (437) Fargo, ND
  """
  NUM_437_FARGO_ND

  """
  (438) (438) Sioux Falls, SD
  """
  NUM_438_SIOUX_FALLS_SD

  """
  (442) (442) Cheyenne, WY
  """
  NUM_442_CHEYENNE_WY

  """
  (459GE) (459GE) Guam
  """
  NUM_459_GE_GUAM

  """
  (459) (459) Honolulu, HI
  """
  NUM_459_HONOLULU_HI

  """
  (460) (460) Wilmington, DE
  """
  NUM_460_WILMINGTON_DE

  """
  (463) (463) Anchorage, AK
  """
  NUM_463_ANCHORAGE_AK

  """
  (501) (501) New Mexico HCS
  """
  NUM_501_NEW_MEXICO_HCS

  """
  (502) (502) Alexandria, LA
  """
  NUM_502_ALEXANDRIA_LA

  """
  (503) (503) Altoona, PA
  """
  NUM_503_ALTOONA_PA

  """
  (504) (504) Amarillo, TX
  """
  NUM_504_AMARILLO_TX

  """
  (506) (506) Ann Arbor, MI
  """
  NUM_506_ANN_ARBOR_MI

  """
  (508) (508) Atlanta, GA
  """
  NUM_508_ATLANTA_GA

  """
  (509) (509) Augusta, GA
  """
  NUM_509_AUGUSTA_GA

  """
  (512) (512) Baltimore HCS, MD
  """
  NUM_512_BALTIMORE_HCS_MD

  """
  (515) (515) Battle Creek, MI
  """
  NUM_515_BATTLE_CREEK_MI

  """
  (516) (516) Bay Pines, FL
  """
  NUM_516_BAY_PINES_FL

  """
  (517) (517) Beckley, WV
  """
  NUM_517_BECKLEY_WV

  """
  (518) (518) Bedford, MA
  """
  NUM_518_BEDFORD_MA

  """
  (519) (519) Big Spring, TX
  """
  NUM_519_BIG_SPRING_TX

  """
  (520) (520) Gulf Coast HCS, MS
  """
  NUM_520_GULF_COAST_HCS_MS

  """
  (521) (521) Birmingham, AL
  """
  NUM_521_BIRMINGHAM_AL

  """
  (523) (523) VA Boston HCS, MA
  """
  NUM_523_VA_BOSTON_HCS_MA

  """
  (526) (526) Bronx, NY
  """
  NUM_526_BRONX_NY

  """
  (528A5) (528A5) Canandaigua, NY
  """
  NUM_528_A5_CANANDAIGUA_NY

  """
  (528A6) (528A6) Bath, NY
  """
  NUM_528_A6_BATH_NY

  """
  (528A7) (528A7) Syracuse, NY
  """
  NUM_528_A7_SYRACUSE_NY

  """
  (528A8) (528A8) Albany, NY
  """
  NUM_528_A8_ALBANY_NY

  """
  (528) (528) Western New York, NY
  """
  NUM_528_WESTERN_NEW_YORK_NY

  """
  (529) (529) Butler, PA
  """
  NUM_529_BUTLER_PA

  """
  (531) (531) Boise, ID
  """
  NUM_531_BOISE_ID

  """
  (534) (534) Charleston, SC
  """
  NUM_534_CHARLESTON_SC

  """
  (537) (537) Jesse Brown VAMC (Chicago), IL
  """
  NUM_537_JESSE_BROWN_VAMC_CHICAGO_IL

  """
  (538) (538) Chillicothe, OH
  """
  NUM_538_CHILLICOTHE_OH

  """
  (539) (539) Cincinnati, OH
  """
  NUM_539_CINCINNATI_OH

  """
  (540) (540) Clarksburg, WV
  """
  NUM_540_CLARKSBURG_WV

  """
  (541) (541) Cleveland, OH
  """
  NUM_541_CLEVELAND_OH

  """
  (542) (542) Coatesville, PA
  """
  NUM_542_COATESVILLE_PA

  """
  (544) (544) Columbia, SC
  """
  NUM_544_COLUMBIA_SC

  """
  (546) (546) Miami, FL
  """
  NUM_546_MIAMI_FL

  """
  (548) (548) West Palm Beach, FL
  """
  NUM_548_WEST_PALM_BEACH_FL

  """
  (549) (549) Dallas, TX
  """
  NUM_549_DALLAS_TX

  """
  (550) (550) Danville, IL
  """
  NUM_550_DANVILLE_IL

  """
  (552) (552) Dayton, OH
  """
  NUM_552_DAYTON_OH

  """
  (553) (553) Detroit, MI
  """
  NUM_553_DETROIT_MI

  """
  (554) (554) Denver, CO
  """
  NUM_554_DENVER_CO

  """
  (556) (556) Captain James A Lovell FHCC
  """
  NUM_556_CAPTAIN_JAMES_A_LOVELL_FHCC

  """
  (557) (557) Dublin, GA
  """
  NUM_557_DUBLIN_GA

  """
  (558) (558) Durham, NC
  """
  NUM_558_DURHAM_NC

  """
  (561) (561) New Jersey HCS, NJ
  """
  NUM_561_NEW_JERSEY_HCS_NJ

  """
  (562) (562) Erie, PA
  """
  NUM_562_ERIE_PA

  """
  (564) (564) Fayetteville, AR
  """
  NUM_564_FAYETTEVILLE_AR

  """
  (565) (565) Fayetteville, NC
  """
  NUM_565_FAYETTEVILLE_NC

  """
  (568) (568) Black Hills HCS, SD
  """
  NUM_568_BLACK_HILLS_HCS_SD

  """
  (570) (570) Fresno, CA
  """
  NUM_570_FRESNO_CA

  """
  (573) (573) Gainesville, FL
  """
  NUM_573_GAINESVILLE_FL

  """
  (575) (575) Grand Junction, CO
  """
  NUM_575_GRAND_JUNCTION_CO

  """
  (578) (578) Hines, IL
  """
  NUM_578_HINES_IL

  """
  (580) (580) Houston, TX
  """
  NUM_580_HOUSTON_TX

  """
  (581) (581) Huntington, WV
  """
  NUM_581_HUNTINGTON_WV

  """
  (583) (583) Indianapolis, IN
  """
  NUM_583_INDIANAPOLIS_IN

  """
  (585) (585) Iron Mountain, MI
  """
  NUM_585_IRON_MOUNTAIN_MI

  """
  (586) (586) Jackson, MS
  """
  NUM_586_JACKSON_MS

  """
  (589A4) (589A4) Columbia, MO
  """
  NUM_589_A4_COLUMBIA_MO

  """
  (589A5) (589A5) Kansas City, MO
  """
  NUM_589_A5_KANSAS_CITY_MO

  """
  (589A6) (589A6) Eastern KS HCS, KS
  """
  NUM_589_A6_EASTERN_KS_HCS_KS

  """
  (589A7) (589A7) Wichita, KS
  """
  NUM_589_A7_WICHITA_KS

  """
  (589) (589) Kansas City, MO
  """
  NUM_589_KANSAS_CITY_MO

  """
  (590) (590) Hampton, VA
  """
  NUM_590_HAMPTON_VA

  """
  (593) (593) Las Vegas, NV
  """
  NUM_593_LAS_VEGAS_NV

  """
  (595) (595) Lebanon, PA
  """
  NUM_595_LEBANON_PA

  """
  (596) (596) Lexington, KY
  """
  NUM_596_LEXINGTON_KY

  """
  (598) (598) Little Rock, AR
  """
  NUM_598_LITTLE_ROCK_AR

  """
  (600) (600) Long Beach, CA
  """
  NUM_600_LONG_BEACH_CA

  """
  (603) (603) Louisville, KY
  """
  NUM_603_LOUISVILLE_KY

  """
  (605) (605) Loma Linda, CA
  """
  NUM_605_LOMA_LINDA_CA

  """
  (607) (607) Madison, WI
  """
  NUM_607_MADISON_WI

  """
  (608) (608) Manchester, NH
  """
  NUM_608_MANCHESTER_NH

  """
  (610) (610) Northern Indiana HCS, IN
  """
  NUM_610_NORTHERN_INDIANA_HCS_IN

  """
  (612) (612) N. California, CA
  """
  NUM_612_N_CALIFORNIA_CA

  """
  (613) (613) Martinsburg, WV
  """
  NUM_613_MARTINSBURG_WV

  """
  (614) (614) Memphis, TN
  """
  NUM_614_MEMPHIS_TN

  """
  (618) (618) Minneapolis, MN
  """
  NUM_618_MINNEAPOLIS_MN

  """
  (619) (619) Central Alabama Veterans HCS, AL
  """
  NUM_619_CENTRAL_ALABAMA_VETERANS_HCS_AL

  """
  (620) (620) VA Hudson Valley HCS, NY
  """
  NUM_620_VA_HUDSON_VALLEY_HCS_NY

  """
  (621) (621) Mountain Home, TN
  """
  NUM_621_MOUNTAIN_HOME_TN

  """
  (623) (623) Muskogee, OK
  """
  NUM_623_MUSKOGEE_OK

  """
  (626) (626) Middle Tennessee HCS, TN
  """
  NUM_626_MIDDLE_TENNESSEE_HCS_TN

  """
  (629) (629) New Orleans, LA
  """
  NUM_629_NEW_ORLEANS_LA

  """
  (630) (630) New York Harbor HCS, NY
  """
  NUM_630_NEW_YORK_HARBOR_HCS_NY

  """
  (631) (631) VA Central Western Massachusetts HCS
  """
  NUM_631_VA_CENTRAL_WESTERN_MASSACHUSETTS_HCS

  """
  (632) (632) Northport, NY
  """
  NUM_632_NORTHPORT_NY

  """
  (635) (635) Oklahoma City, OK
  """
  NUM_635_OKLAHOMA_CITY_OK

  """
  (636A6) (636A6) Central Iowa, IA
  """
  NUM_636_A6_CENTRAL_IOWA_IA

  """
  (636A8) (636A8) Iowa City, IA
  """
  NUM_636_A8_IOWA_CITY_IA

  """
  (636) (636) Nebraska-W Iowa, NE
  """
  NUM_636_NEBRASKA_W_IOWA_NE

  """
  (637) (637) Asheville, NC
  """
  NUM_637_ASHEVILLE_NC

  """
  (640) (640) Palo Alto, CA
  """
  NUM_640_PALO_ALTO_CA

  """
  (642) (642) Philadelphia, PA
  """
  NUM_642_PHILADELPHIA_PA

  """
  (644) (644) Phoenix, AZ
  """
  NUM_644_PHOENIX_AZ

  """
  (646) (646) Pittsburgh, PA
  """
  NUM_646_PITTSBURGH_PA

  """
  (648) (648) Portland, OR
  """
  NUM_648_PORTLAND_OR

  """
  (649) (649) Northern Arizona HCS
  """
  NUM_649_NORTHERN_ARIZONA_HCS

  """
  (650) (650) Providence, RI
  """
  NUM_650_PROVIDENCE_RI

  """
  (652) (652) Richmond, VA
  """
  NUM_652_RICHMOND_VA

  """
  (653) (653) Roseburg, OR
  """
  NUM_653_ROSEBURG_OR

  """
  (654) (654) Reno, NV
  """
  NUM_654_RENO_NV

  """
  (655) (655) Saginaw, MI
  """
  NUM_655_SAGINAW_MI

  """
  (656) (656) St. Cloud, MN
  """
  NUM_656_ST_CLOUD_MN

  """
  (657A4) (657A4) Poplar Bluff, MO
  """
  NUM_657_A4_POPLAR_BLUFF_MO

  """
  (657A5) (657A5) Marion, IL
  """
  NUM_657_A5_MARION_IL

  """
  (657) (657) St. Louis, MO
  """
  NUM_657_ST_LOUIS_MO

  """
  (658) (658) Salem, VA
  """
  NUM_658_SALEM_VA

  """
  (659) (659) Salisbury, NC
  """
  NUM_659_SALISBURY_NC

  """
  (660) (660) Salt Lake City, UT
  """
  NUM_660_SALT_LAKE_CITY_UT

  """
  (662) (662) San Francisco, CA
  """
  NUM_662_SAN_FRANCISCO_CA

  """
  (663) (663) VA Puget Sound, WA
  """
  NUM_663_VA_PUGET_SOUND_WA

  """
  (664) (664) San Diego, CA
  """
  NUM_664_SAN_DIEGO_CA

  """
  (666) (666) Sheridan, WY
  """
  NUM_666_SHERIDAN_WY

  """
  (667) (667) Shreveport, LA
  """
  NUM_667_SHREVEPORT_LA

  """
  (668) (668) Spokane, WA
  """
  NUM_668_SPOKANE_WA

  """
  (671) (671) San Antonio, TX
  """
  NUM_671_SAN_ANTONIO_TX

  """
  (672) (672) San Juan, PR
  """
  NUM_672_SAN_JUAN_PR

  """
  (673) (673) Tampa, FL
  """
  NUM_673_TAMPA_FL

  """
  (674) (674) Temple, TX
  """
  NUM_674_TEMPLE_TX

  """
  (675) (675) Orlando, FL
  """
  NUM_675_ORLANDO_FL

  """
  (676) (676) Tomah, WI
  """
  NUM_676_TOMAH_WI

  """
  (678) (678) Southern Arizona HCS
  """
  NUM_678_SOUTHERN_ARIZONA_HCS

  """
  (679) (679) Tuscaloosa, AL
  """
  NUM_679_TUSCALOOSA_AL

  """
  (687) (687) Walla Walla, WA
  """
  NUM_687_WALLA_WALLA_WA

  """
  (688) (688) Washington, DC
  """
  NUM_688_WASHINGTON_DC

  """
  (689) (689) VA Connecticut HCS, CT
  """
  NUM_689_VA_CONNECTICUT_HCS_CT

  """
  (691) (691) Greater Los Angeles HCS
  """
  NUM_691_GREATER_LOS_ANGELES_HCS

  """
  (692) (692) White City, OR
  """
  NUM_692_WHITE_CITY_OR

  """
  (693) (693) Wilkes-Barre, PA
  """
  NUM_693_WILKES_BARRE_PA

  """
  (695) (695) Milwaukee, WI
  """
  NUM_695_MILWAUKEE_WI

  """
  (740) (740) VA Texas Valley Coastal Bend HCS
  """
  NUM_740_VA_TEXAS_VALLEY_COASTAL_BEND_HCS

  """
  (756) (756) El Paso, TX
  """
  NUM_756_EL_PASO_TX

  """
  (757) (757) Columbus, OH
  """
  NUM_757_COLUMBUS_OH
}

input VersionedRecordInput {
  id: ID!
  lockVersion: Int
}

"""
W4.3
"""
enum ViralLoadAvailable {
  """
  (1) Available
  """
  AVAILABLE

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) Not available
  """
  NOT_AVAILABLE

  """
  (2) Undetectable
  """
  UNDETECTABLE
}

"""
Autogenerated return type of VoidReferralRequest.
"""
type VoidReferralRequestPayload {
  errors: [ValidationError!]!
  record: ReferralRequest
}

"""
4.11.A
"""
enum WhenDVOccurred {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client prefers not to answer
  """
  CLIENT_PREFERS_NOT_TO_ANSWER

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) One year or more
  """
  ONE_YEAR_OR_MORE

  """
  (3) Six months to one year ago (excluding one year exactly)
  """
  SIX_MONTHS_TO_ONE_YEAR_AGO

  """
  (2) Three to six months ago (excluding six months exactly)
  """
  THREE_TO_SIX_MONTHS_AGO

  """
  (1) Within the past three months
  """
  WITHIN_THE_PAST_THREE_MONTHS
}

"""
R19.A
"""
enum WorkerResponse {
  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (2) Worker does not know
  """
  WORKER_DOES_NOT_KNOW

  """
  (1) Yes
  """
  YES
}

"""
HUD Youth Education Status
"""
type YouthEducationStatus {
  client: Client!
  currentEdStatus: CurrentEdStatus
  currentSchoolAttend: CurrentSchoolAttended
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  enrollment: Enrollment!
  id: ID!
  informationDate: ISO8601Date
  mostRecentEdStatus: MostRecentEdStatus
  user: ApplicationUser
}

type YouthEducationStatusesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [YouthEducationStatus!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}
