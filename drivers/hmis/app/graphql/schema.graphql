"""
Autogenerated input type of AddHouseholdMembersToEnrollment
"""
input AddHouseholdMembersToEnrollmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  confirmed: Boolean
  entryDate: ISO8601Date!
  householdId: ID!
  householdMembers: [EnrollmentHouseholdMemberInput!]!
}

"""
Autogenerated return type of AddHouseholdMembersToEnrollment.
"""
type AddHouseholdMembersToEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollments: [Enrollment!]
  errors: [ValidationError!]!
}

"""
Autogenerated input type of AddRecentItem
"""
input AddRecentItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  itemId: ID!
  itemType: RecentItemType!
}

"""
User account for a user of the system
"""
type ApplicationUser {
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  id: ID!
  name: String!
  recentItems: [OmnisearchResult!]!
}

"""
Custom Assessment
"""
type Assessment {
  access: AssessmentAccess!
  assessmentDate: ISO8601Date!
  client: Client!
  customDataElements: [CustomDataElement!]!
  customForm: CustomForm
  dataCollectionStage: DataCollectionStage
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  disabilityGroup: DisabilityGroup
  enrollment: Enrollment!
  exit: Exit
  healthAndDv: HealthAndDv
  id: ID!
  inProgress: Boolean!
  incomeBenefit: IncomeBenefit
  user: User
}

type AssessmentAccess {
  canDeleteAssessments: Boolean!
  canDeleteEnrollments: Boolean!
  canEditEnrollments: Boolean!
  id: ID!
}

input AssessmentFilterOptions {
  roles: [AssessmentRole!]
}

input AssessmentInput {
  """
  Required if updating an existing assessment
  """
  assessmentId: ID

  """
  Whether warnings have been confirmed
  """
  confirmed: Boolean

  """
  Required if saving a new assessment
  """
  enrollmentId: ID

  """
  Required if saving a new assessment
  """
  formDefinitionId: ID

  """
  Transformed HUD values as JSON
  """
  hudValues: JsonObject

  """
  Validate assessment but don't submit it
  """
  validateOnly: Boolean

  """
  Raw form state as JSON
  """
  values: JsonObject
}

"""
4.19.4
"""
enum AssessmentLevel {
  """
  (1) Crisis Needs Assessment
  """
  CRISIS_NEEDS_ASSESSMENT

  """
  (2) Housing Needs Assessment
  """
  HOUSING_NEEDS_ASSESSMENT

  """
  Invalid Value
  """
  INVALID
}

enum AssessmentRole {
  """
  (ANNUAL) Annual Assessment
  """
  ANNUAL

  """
  (CE) Coordinated Entry
  """
  CE

  """
  (EXIT) Exit Assessment
  """
  EXIT

  """
  (INTAKE) Intake Assessment
  """
  INTAKE

  """
  (POST_EXIT) Post-Exit Assessment
  """
  POST_EXIT

  """
  (UPDATE) Update Assessment
  """
  UPDATE
}

"""
HUD Assessment Sorting Options
"""
enum AssessmentSortOption {
  """
  Assessment Date: Most Recent First
  """
  ASSESSMENT_DATE

  """
  Last Updated: Most Recent First
  """
  DATE_UPDATED
}

"""
4.19.3
"""
enum AssessmentType {
  """
  Invalid Value
  """
  INVALID

  """
  (3) In Person
  """
  IN_PERSON

  """
  (1) Phone
  """
  PHONE

  """
  (2) Virtual
  """
  VIRTUAL
}

type AssessmentsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Assessment!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

enum AuditEventType {
  create
  destroy
  update
}

"""
Value to autofill based on conditional logic
"""
type AutofillValue {
  autofillBehavior: EnableBehavior!

  """
  Whether to perform autofill when displaying a read-only view (defaults to false)
  """
  autofillReadonly: Boolean
  autofillWhen: [EnableWhen!]!

  """
  Link IDs of numeric questions to sum up and set as the value if condition is met
  """
  sumQuestions: [String!]

  """
  Value to autofill if condition is met
  """
  valueBoolean: Boolean

  """
  Value to autofill if condition is met
  """
  valueCode: String

  """
  Value to autofill if condition is met
  """
  valueNumber: Int
}

"""
2.07.6
"""
enum Availability {
  """
  Invalid Value
  """
  INVALID

  """
  (3) Overflow
  """
  OVERFLOW

  """
  (2) Seasonal
  """
  SEASONAL

  """
  (1) Year-round
  """
  YEAR_ROUND
}

"""
A base64 encoded string
"""
scalar Base64

"""
2.07.5
"""
enum BedType {
  """
  (1) Facility-based
  """
  FACILITY_BASED

  """
  Invalid Value
  """
  INVALID

  """
  (3) Other
  """
  OTHER

  """
  (2) Voucher
  """
  VOUCHER
}

enum BoundType {
  MAX
  MIN
}

"""
HUD Coordinated Entry Assessment
"""
type CeAssessment {
  assessmentDate: ISO8601Date!
  assessmentLevel: AssessmentLevel
  assessmentLocation: String!
  assessmentType: AssessmentType
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  enrollment: Enrollment!
  id: ID!
  prioritizationStatus: PrioritizationStatus
  user: User
}

type CeAssessmentsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [CeAssessment!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated input type of ClearMci
"""
input ClearMciInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: MciClearanceInput!
}

"""
Autogenerated return type of ClearMci.
"""
type ClearMciPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  matches: [MciClearanceMatch!]
}

"""
Autogenerated input type of ClearRecentItems
"""
input ClearRecentItemsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
HUD Client
"""
type Client {
  access: ClientAccess!
  addresses: [ClientAddress!]!
  age: Int
  assessments(filters: AssessmentFilterOptions, inProgress: Boolean, limit: Int, offset: Int, sortOrder: AssessmentSortOption): AssessmentsPaginated!
  auditHistory(limit: Int, offset: Int): ClientAuditEventsPaginated!
  contactPoints: [ClientContactPoint!]!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  disabilities(limit: Int, offset: Int): DisabilitiesPaginated!
  disabilityGroups: [DisabilityGroup!]!
  dob: ISO8601Date
  dobDataQuality: DOBDataQuality!
  emailAddresses: [ClientContactPoint!]!
  enrollments(filters: EnrollmentsForClientFilterOptions, limit: Int, offset: Int, sortOrder: EnrollmentSortOption): EnrollmentsPaginated!
  ethnicity: Ethnicity!
  externalIds: [ExternalIdentifier!]!
  files(limit: Int, offset: Int, sortOrder: FileSortOption): FilesPaginated!
  firstName: String
  gender: [Gender!]!
  healthAndDvs(limit: Int, offset: Int): HealthAndDvsPaginated!
  id: ID!
  image: ClientImage
  incomeBenefits(limit: Int, offset: Int): IncomeBenefitsPaginated!
  lastName: String
  middleName: String
  nameDataQuality: NameDataQuality!
  nameSuffix: String
  names: [ClientName!]!
  personalId: String!
  phoneNumbers: [ClientContactPoint!]!
  pronouns: [String!]!
  race: [Race!]!
  services(limit: Int, offset: Int, searchTerm: String, serviceCategory: ID, serviceType: ID, sortOrder: ServiceSortOption): ServicesPaginated!
  ssn: String
  ssnDataQuality: SSNDataQuality!
  user: User
  veteranStatus: NoYesReasonsForMissingData!
}

type ClientAccess {
  canDeleteAssessments: Boolean!
  canDeleteClient: Boolean!
  canDeleteEnrollments: Boolean!
  canEditClient: Boolean!
  canEditEnrollments: Boolean!
  canManageAnyClientFiles: Boolean!
  canManageOwnClientFiles: Boolean!
  canViewAnyConfidentialClientFiles: Boolean!
  canViewAnyNonconfidentialClientFiles: Boolean!
  canViewDob: Boolean!
  canViewEnrollmentDetails: Boolean!
  canViewFullSsn: Boolean!
  canViewPartialSsn: Boolean!
  id: ID!
}

type ClientAddress {
  addressType: ClientAddressType
  city: String
  client: Client!
  country: String
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  district: String
  id: ID!
  line1: String
  line2: String
  notes: String
  postalCode: String
  state: String
  use: ClientAddressUse
  user: User
}

"""
Allowed values for ClientAddress.type
"""
enum ClientAddressType {
  """
  Both
  """
  both

  """
  Physical
  """
  physical

  """
  Postal
  """
  postal
}

"""
Allowed values for ClientAddress.use
"""
enum ClientAddressUse {
  """
  Home
  """
  home

  """
  Mail
  """
  mail

  """
  Old
  """
  old

  """
  Temp
  """
  temp

  """
  Work
  """
  work
}

type ClientAuditEvent {
  createdAt: ISO8601DateTime!
  event: AuditEventType!
  id: ID!
  item: Client!

  """
  Format is { field: { fieldName: "GQL field name", displayName: "Human readable name", values: [old, new] } }
  """
  objectChanges: JsonObject
  user: ApplicationUser
}

type ClientAuditEventsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ClientAuditEvent!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type ClientContactPoint {
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  id: ID!
  notes: String
  system: ClientContactPointSystem
  use: ClientContactPointUse
  user: User
  value: String
}

"""
Allowed values for ClientContactPoint.system
"""
enum ClientContactPointSystem {
  """
  Email
  """
  email

  """
  Phone
  """
  phone

  """
  Url
  """
  url
}

"""
Allowed values for ClientContactPoint.use
"""
enum ClientContactPointUse {
  """
  Home
  """
  home

  """
  Mobile
  """
  mobile

  """
  Old
  """
  old

  """
  Temp
  """
  temp

  """
  Work
  """
  work
}

"""
Client Image
"""
type ClientImage {
  base64: Base64!
  contentType: String!
  id: ID!
}

type ClientName {
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  first: String
  id: ID!
  last: String
  middle: String
  nameDataQuality: NameDataQuality
  notes: String
  primary: Boolean
  suffix: String
  use: ClientNameUse
  user: User
}

"""
Allowed values for ClientName.use
"""
enum ClientNameUse {
  """
  Anonymous
  """
  anonymous

  """
  Maiden
  """
  maiden

  """
  Nickname
  """
  nickname

  """
  Official
  """
  official

  """
  Old
  """
  old

  """
  Temp
  """
  temp

  """
  Usual
  """
  usual
}

"""
HMIS Client search input
"""
input ClientSearchInput {
  """
  Date of birth as format yyyy-mm-dd
  """
  dob: String
  firstName: String

  """
  Client primary key
  """
  id: ID
  lastName: String
  organizations: [ID!]
  personalId: String
  projects: [ID!]

  """
  Last 4 digits of SSN
  """
  ssnSerial: String

  """
  Omnisearch string
  """
  textSearch: String
  warehouseId: String
}

"""
HUD Client Sorting Options
"""
enum ClientSortOption {
  """
  Age: Oldest to Youngest
  """
  AGE_OLDEST_TO_YOUNGEST

  """
  Age: Youngest to Oldest
  """
  AGE_YOUNGEST_TO_OLDEST

  """
  First Name: A-Z
  """
  FIRST_NAME_A_TO_Z

  """
  First Name: Z-A
  """
  FIRST_NAME_Z_TO_A

  """
  Last Name: A-Z
  """
  LAST_NAME_A_TO_Z

  """
  Last Name: Z-A
  """
  LAST_NAME_Z_TO_A
}

type ClientsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Client!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

enum Component {
  """
  Client Address input
  """
  ADDRESS

  """
  Display text as an error alert
  """
  ALERT_ERROR

  """
  Display text as an info alert
  """
  ALERT_INFO

  """
  Display text as a success alert
  """
  ALERT_SUCCESS

  """
  Display text as a warning alert
  """
  ALERT_WARNING

  """
  Render a boolean input item as a checkbox
  """
  CHECKBOX

  """
  Specialized component for rendering disabilities in a table
  """
  DISABILITY_TABLE

  """
  Email address input for ContactPoint
  """
  EMAIL

  """
  Render a group of inputs horizontally
  """
  HORIZONTAL_GROUP

  """
  Render contents in an info box
  """
  INFO_GROUP

  """
  Render a group that contains children of the same type (e.g. all booleans)
  """
  INPUT_GROUP

  """
  MCI linking component
  """
  MCI

  """
  Client Name input
  """
  NAME

  """
  Phone number input for ContactPoint
  """
  PHONE

  """
  Render a choice input item as radio buttons
  """
  RADIO_BUTTONS

  """
  Render a choice input item as vertical radio buttons
  """
  RADIO_BUTTONS_VERTICAL

  """
  SSN input component
  """
  SSN
}

"""
Autogenerated input type of CreateDirectUpload
"""
input CreateDirectUploadInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: DirectUploadInput!
}

"""
Autogenerated input type of CreateEnrollment
"""
input CreateEnrollmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  confirmed: Boolean
  entryDate: ISO8601Date!
  householdMembers: [EnrollmentHouseholdMemberInput!]!
  projectId: ID!
}

"""
Autogenerated return type of CreateEnrollment.
"""
type CreateEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollments: [Enrollment!]
  errors: [ValidationError!]!
}

"""
Autogenerated input type of CreateService
"""
input CreateServiceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: ServiceInput!
}

"""
Autogenerated return type of CreateService.
"""
type CreateServicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  service: Service
}

"""
Autogenerated input type of CreateUnits
"""
input CreateUnitsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: UnitInput!
}

"""
Autogenerated return type of CreateUnits.
"""
type CreateUnitsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  units: [Unit!]
}

type CustomDataElement {
  id: ID!
  key: String!
  label: String!
  repeats: Boolean!
  value: CustomDataElementValue
  values: [CustomDataElementValue!]
}

type CustomDataElementValue {
  dateCreated: ISO8601DateTime!
  dateUpdated: ISO8601DateTime!
  id: ID!
  user: User
  valueBoolean: Boolean
  valueDate: ISO8601Date
  valueFloat: Float
  valueInteger: Int
  valueJson: JsonObject
  valueString: String
  valueText: String
}

"""
CustomForm
"""
type CustomForm {
  assessment: Assessment!
  definition: FormDefinition!
  id: ID!
  values: JsonObject
}

"""
3.03.2
"""
enum DOBDataQuality {
  """
  (2) Approximate or partial DOB reported
  """
  APPROXIMATE_OR_PARTIAL_DOB_REPORTED

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Full DOB reported
  """
  FULL_DOB_REPORTED

  """
  Invalid Value
  """
  INVALID
}

enum DataCollectedAbout {
  ALL_CLIENTS
  ALL_CLIENTS_RECEIVING_SSVF_FINANCIAL_ASSISTANCE
  ALL_CLIENTS_RECEIVING_SSVF_SERVICES
  ALL_VETERANS
  HOH
  HOH_AND_ADULTS
  VETERAN_HOH
}

"""
5.03.1
"""
enum DataCollectionStage {
  """
  (5) Annual assessment
  """
  ANNUAL_ASSESSMENT

  """
  Invalid Value
  """
  INVALID

  """
  (6) Post-exit
  """
  POST_EXIT

  """
  (1) Project entry
  """
  PROJECT_ENTRY

  """
  (3) Project exit
  """
  PROJECT_EXIT

  """
  (2) Update
  """
  UPDATE
}

"""
Autogenerated input type of DeleteAssessment
"""
input DeleteAssessmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteAssessment.
"""
type DeleteAssessmentPayload {
  assessmentId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteClientFile
"""
input DeleteClientFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  fileId: ID!
}

"""
Autogenerated return type of DeleteClientFile.
"""
type DeleteClientFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  file: File
}

"""
Autogenerated input type of DeleteClientImage
"""
input DeleteClientImageInput {
  clientId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteClientImage.
"""
type DeleteClientImagePayload {
  client: Client

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteClient
"""
input DeleteClientInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Whether warnings have been confirmed
  """
  confirmed: Boolean
  id: ID!
}

"""
Autogenerated return type of DeleteClient.
"""
type DeleteClientPayload {
  client: Client

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteEnrollment
"""
input DeleteEnrollmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteEnrollment.
"""
type DeleteEnrollmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollment: Enrollment
  errors: [ValidationError!]!
}

"""
Autogenerated input type of DeleteFunder
"""
input DeleteFunderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteFunder.
"""
type DeleteFunderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  funder: Funder
}

"""
Autogenerated input type of DeleteInventory
"""
input DeleteInventoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteInventory.
"""
type DeleteInventoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  inventory: Inventory
}

"""
Autogenerated input type of DeleteOrganization
"""
input DeleteOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteOrganization.
"""
type DeleteOrganizationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  organization: Organization
}

"""
Autogenerated input type of DeleteProjectCoc
"""
input DeleteProjectCocInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProjectCoc.
"""
type DeleteProjectCocPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  projectCoc: ProjectCoc
}

"""
Autogenerated input type of DeleteProject
"""
input DeleteProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProject.
"""
type DeleteProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  project: Project
}

"""
Autogenerated input type of DeleteService
"""
input DeleteServiceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteService.
"""
type DeleteServicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  service: Service
}

"""
Autogenerated input type of DeleteUnits
"""
input DeleteUnitsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  unitIds: [ID!]!
}

"""
Autogenerated return type of DeleteUnits.
"""
type DeleteUnitsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  unitIds: [ID!]
}

"""
3.12.1
"""
enum Destination {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (24) Deceased
  """
  DECEASED

  """
  (1) Emergency shelter, including hotel or motel paid for with emergency shelter voucher, or RHY-funded Host Home shelter
  """
  EMERGENCY_SHELTER_INCLUDING_HOTEL_OR_MOTEL_PAID_FOR_WITH_EMERGENCY_SHELTER_VOUCHER_OR_RHY_FUNDED_HOST_HOME_SHELTER

  """
  (15) Foster care home or foster care group home
  """
  FOSTER_CARE_HOME_OR_FOSTER_CARE_GROUP_HOME

  """
  (6) Hospital or other residential non-psychiatric medical facility
  """
  HOSPITAL_OR_OTHER_RESIDENTIAL_NON_PSYCHIATRIC_MEDICAL_FACILITY

  """
  (32) Host Home (non-crisis)
  """
  HOST_HOME_NON_CRISIS

  """
  (14) Hotel or motel paid for without emergency shelter voucher
  """
  HOTEL_OR_MOTEL_PAID_FOR_WITHOUT_EMERGENCY_SHELTER_VOUCHER

  """
  Invalid Value
  """
  INVALID

  """
  (7) Jail, prison or juvenile detention facility
  """
  JAIL_PRISON_OR_JUVENILE_DETENTION_FACILITY

  """
  (25) Long-term care facility or nursing home
  """
  LONG_TERM_CARE_FACILITY_OR_NURSING_HOME

  """
  (26) Moved from one HOPWA funded project to HOPWA PH
  """
  MOVED_FROM_ONE_HOPWA_FUNDED_PROJECT_TO_HOPWA_PH

  """
  (27) Moved from one HOPWA funded project to HOPWA TH
  """
  MOVED_FROM_ONE_HOPWA_FUNDED_PROJECT_TO_HOPWA_TH

  """
  (30) No exit interview completed
  """
  NO_EXIT_INTERVIEW_COMPLETED

  """
  (17) Other
  """
  OTHER

  """
  (11) Owned by client, no ongoing housing subsidy
  """
  OWNED_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (21) Owned by client, with ongoing housing subsidy
  """
  OWNED_BY_CLIENT_WITH_ONGOING_HOUSING_SUBSIDY

  """
  (3) Permanent housing (other than RRH) for formerly homeless persons
  """
  PERMANENT_HOUSING_OTHER_THAN_RRH_FOR_FORMERLY_HOMELESS_PERSONS

  """
  (16) Place not meant for habitation (e.g., a vehicle, an abandoned building,
  bus/train/subway station/airport or anywhere outside)
  """
  PLACE_NOT_MEANT_FOR_HABITATION_E_G_A_VEHICLE_AN_ABANDONED_BUILDING_BUS_TRAIN_SUBWAY_STATION_AIRPORT_OR_ANYWHERE_OUTSIDE

  """
  (4) Psychiatric hospital or other psychiatric facility
  """
  PSYCHIATRIC_HOSPITAL_OR_OTHER_PSYCHIATRIC_FACILITY

  """
  (34) Rental by client in a public housing unit
  """
  RENTAL_BY_CLIENT_IN_A_PUBLIC_HOUSING_UNIT

  """
  (10) Rental by client, no ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (28) Rental by client, with GPD TIP housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_GPD_TIP_HOUSING_SUBSIDY

  """
  (33) Rental by client, with HCV voucher (tenant or project based)
  """
  RENTAL_BY_CLIENT_WITH_HCV_VOUCHER_TENANT_OR_PROJECT_BASED

  """
  (20) Rental by client, with other ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_OTHER_ONGOING_HOUSING_SUBSIDY

  """
  (31) Rental by client, with RRH or equivalent subsidy
  """
  RENTAL_BY_CLIENT_WITH_RRH_OR_EQUIVALENT_SUBSIDY

  """
  (19) Rental by client, with VASH housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_VASH_HOUSING_SUBSIDY

  """
  (29) Residential project or halfway house with no homeless criteria
  """
  RESIDENTIAL_PROJECT_OR_HALFWAY_HOUSE_WITH_NO_HOMELESS_CRITERIA

  """
  (18) Safe Haven
  """
  SAFE_HAVEN

  """
  (35) Staying or living in a family member's room, apartment or house
  """
  STAYING_OR_LIVING_IN_A_FAMILY_MEMBER_S_ROOM_APARTMENT_OR_HOUSE

  """
  (36) Staying or living in a friend's room, apartment or house
  """
  STAYING_OR_LIVING_IN_A_FRIEND_S_ROOM_APARTMENT_OR_HOUSE

  """
  (22) Staying or living with family, permanent tenure
  """
  STAYING_OR_LIVING_WITH_FAMILY_PERMANENT_TENURE

  """
  (12) Staying or living with family, temporary tenure (e.g. room, apartment or house)
  """
  STAYING_OR_LIVING_WITH_FAMILY_TEMPORARY_TENURE_E_G_ROOM_APARTMENT_OR_HOUSE

  """
  (23) Staying or living with friends, permanent tenure
  """
  STAYING_OR_LIVING_WITH_FRIENDS_PERMANENT_TENURE

  """
  (13) Staying or living with friends, temporary tenure (e.g. room apartment or house)
  """
  STAYING_OR_LIVING_WITH_FRIENDS_TEMPORARY_TENURE_E_G_ROOM_APARTMENT_OR_HOUSE

  """
  (5) Substance abuse treatment facility or detox center
  """
  SUBSTANCE_ABUSE_TREATMENT_FACILITY_OR_DETOX_CENTER

  """
  (2) Transitional housing for homeless persons (including homeless youth)
  """
  TRANSITIONAL_HOUSING_FOR_HOMELESS_PERSONS_INCLUDING_HOMELESS_YOUTH

  """
  (37) Worker unable to determine
  """
  WORKER_UNABLE_TO_DETERMINE
}

"""
Represents direct upload credentials
"""
type DirectUpload {
  """
  Created blob record ID
  """
  blobId: ID!
  filename: String!

  """
  HTTP request headers (JSON-encoded)
  """
  headers: String!

  """
  Created blob record signed ID
  """
  signedBlobId: ID!

  """
  Upload URL
  """
  url: String!
}

"""
File information required to prepare a direct upload
"""
input DirectUploadInput {
  """
  File size (bytes)
  """
  byteSize: Int!

  """
  MD5 file checksum as base64
  """
  checksum: String!

  """
  File content type
  """
  contentType: String!

  """
  Original file name
  """
  filename: String!
}

type DisabilitiesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Disability!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Disability {
  client: Client!
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  disabilityResponse: DisabilityResponse!
  disabilityType: DisabilityType!
  enrollment: Enrollment!
  id: ID!
  indefiniteAndImpairs: Int
  informationDate: ISO8601Date!
  user: User
}

"""
Group of disability records that were collected at the same time
"""
type DisabilityGroup {
  chronicHealthCondition: NoYesReasonsForMissingData
  chronicHealthConditionIndefiniteAndImpairs: NoYesReasonsForMissingData
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime
  dateUpdated: ISO8601DateTime
  developmentalDisability: NoYesReasonsForMissingData

  """
  Current disabling condition on the linked Enrollment. It may not match up with the disabilities specified in this group.
  """
  disablingCondition: NoYesReasonsForMissingData!
  enrollment: Enrollment!
  hivAids: NoYesReasonsForMissingData

  """
  Concatenated string of Disability record IDs
  """
  id: ID!
  informationDate: ISO8601Date!
  mentalHealthDisorder: NoYesReasonsForMissingData
  mentalHealthDisorderIndefiniteAndImpairs: NoYesReasonsForMissingData
  physicalDisability: NoYesReasonsForMissingData
  physicalDisabilityIndefiniteAndImpairs: NoYesReasonsForMissingData
  substanceUseDisorder: DisabilityResponse
  substanceUseDisorderIndefiniteAndImpairs: NoYesReasonsForMissingData
  user: User
}

"""
4.10.2
"""
enum DisabilityResponse {
  """
  (1) Alcohol use disorder
  """
  ALCOHOL_USE_DISORDER

  """
  (3) Both alcohol and drug use disorders
  """
  BOTH_ALCOHOL_AND_DRUG_USE_DISORDERS

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (2) Drug use disorder
  """
  DRUG_USE_DISORDER

  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO
}

"""
1.3
"""
enum DisabilityType {
  """
  (7) Chronic health condition
  """
  CHRONIC_HEALTH_CONDITION

  """
  (6) Developmental disability
  """
  DEVELOPMENTAL_DISABILITY

  """
  (8) HIV/AIDS
  """
  HIV_AIDS

  """
  Invalid Value
  """
  INVALID

  """
  (9) Mental health disorder
  """
  MENTAL_HEALTH_DISORDER

  """
  (5) Physical disability
  """
  PHYSICAL_DISABILITY

  """
  (10) Substance use disorder
  """
  SUBSTANCE_USE_DISORDER
}

enum DisabledDisplay {
  HIDDEN
  PROTECTED
}

enum EnableBehavior {
  ALL
  ANY
}

enum EnableOperator {
  """
  Use with answerBoolean to specify is the item should be enabled or not.
  """
  ENABLED
  EQUAL

  """
  Use with answerBoolean to specify if an answer should exist or not.
  """
  EXISTS
  GREATER_THAN
  GREATER_THAN_EQUAL

  """
  Whether the value is in the answerCodes array.
  """
  IN
  LESS_THAN
  LESS_THAN_EQUAL
  NOT_EQUAL
}

type EnableWhen {
  """
  If question is boolean type, value for comparison
  """
  answerBoolean: Boolean

  """
  If question is choice type, value for comparison
  """
  answerCode: String

  """
  If question is choice type, and operator is IN, values for comparison
  """
  answerCodes: [String!]

  """
  If question is choice type and has grouped options, value for comparison
  """
  answerGroupCode: String

  """
  If question is numeric, value for comparison
  """
  answerNumber: Int

  """
  The linkId of a question to compare with the question using the operator
  """
  compareQuestion: String

  """
  How to evaluate the question's answer
  """
  operator: EnableOperator!

  """
  The linkId of question that determines whether item is enabled/disabled
  """
  question: String!
}

"""
HUD Enrollment
"""
type Enrollment {
  access: EnrollmentAccess!
  assessments(filters: AssessmentFilterOptions, inProgress: Boolean, limit: Int, offset: Int, sortOrder: AssessmentSortOption): AssessmentsPaginated!
  ceAssessments(limit: Int, offset: Int, sortOrder: AssessmentSortOption): CeAssessmentsPaginated!
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateToStreetEssh: ISO8601Date
  dateUpdated: ISO8601DateTime!
  disabilities(limit: Int, offset: Int): DisabilitiesPaginated!
  disabilityGroups: [DisabilityGroup!]!
  disablingCondition: NoYesReasonsForMissingData
  entryDate: ISO8601Date!
  events(limit: Int, offset: Int, sortOrder: EventSortOption): EventsPaginated!
  exitAssessment: Assessment
  exitDate: ISO8601Date
  files(limit: Int, offset: Int, sortOrder: FileSortOption): FilesPaginated!
  healthAndDvs(limit: Int, offset: Int): HealthAndDvsPaginated!
  household: Household!
  householdSize: Int!
  id: ID!
  inProgress: Boolean!
  incomeBenefits(limit: Int, offset: Int): IncomeBenefitsPaginated!
  intakeAssessment: Assessment
  lengthOfStay: ResidencePriorLengthOfStay
  livingSituation: LivingSituation
  losUnderThreshold: NoYesMissing
  monthsHomelessPastThreeYears: MonthsHomelessPastThreeYears
  previousStreetEssh: NoYesMissing
  project: Project!
  relationshipToHoH: RelationshipToHoH!
  services(limit: Int, offset: Int, searchTerm: String, serviceCategory: ID, serviceType: ID, sortOrder: ServiceSortOption): ServicesPaginated!
  status: EnrollmentStatus!
  timesHomelessPastThreeYears: TimesHomelessPastThreeYears
  user: User
}

type EnrollmentAccess {
  canDeleteEnrollments: Boolean!
  canEditEnrollments: Boolean!
  id: ID!
}

enum EnrollmentFilterOptionStatus {
  """
  Active
  """
  ACTIVE

  """
  Exited
  """
  EXITED

  """
  Incomplete
  """
  INCOMPLETE
}

"""
HMIS Enrollment household member input
"""
input EnrollmentHouseholdMemberInput {
  id: ID!
  relationshipToHoH: RelationshipToHoH!
}

enum EnrollmentLimit {
  NON_WIP_ONLY
  WIP_ONLY
}

"""
HUD Enrollment Sorting Options
"""
enum EnrollmentSortOption {
  """
  Household ID
  """
  HOUSEHOLD_ID

  """
  Most Recent
  """
  MOST_RECENT
}

"""
Status of this enrollment
"""
enum EnrollmentStatus {
  """
  Active
  """
  ACTIVE

  """
  Household Entry Incomplete
  """
  ANY_ENTRY_INCOMPLETE

  """
  Household Exit Incomplete
  """
  ANY_EXIT_INCOMPLETE

  """
  Exited
  """
  EXITED

  """
  Entry Incomplete
  """
  OWN_ENTRY_INCOMPLETE

  """
  Exit Incomplete
  """
  OWN_EXIT_INCOMPLETE
}

input EnrollmentsForClientFilterOptions {
  openOnDate: ISO8601Date
  projectTypes: [ProjectType!]
  statuses: [EnrollmentFilterOptionStatus!]
}

input EnrollmentsForProjectFilterOptions {
  openOnDate: ISO8601Date
  searchTerm: String
  statuses: [EnrollmentFilterOptionStatus!]
}

type EnrollmentsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Enrollment!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
3.05.1
"""
enum Ethnicity {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Hispanic/Latin(a)(o)(x)
  """
  HISPANIC_LATIN_A_O_X

  """
  Invalid Value
  """
  INVALID

  """
  (0) Non-Hispanic/Non-Latin(a)(o)(x)
  """
  NON_HISPANIC_NON_LATIN_A_O_X
}

"""
HUD Event
"""
type Event {
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  enrollment: Enrollment!
  event: EventType!
  eventDate: ISO8601DateTime!
  id: ID!
  locationCrisisOrPhHousing: String
  probSolDivRrResult: NoYesMissing
  referralCaseManageAfter: NoYesMissing
  referralResult: ReferralResult
  resultDate: ISO8601DateTime
  user: User
}

"""
HUD Event Sorting Options
"""
enum EventSortOption {
  EVENT_DATE
}

"""
4.20.2
"""
enum EventType {
  """
  Invalid Value
  """
  INVALID

  """
  (2) Problem Solving/Diversion/Rapid Resolution intervention or service
  """
  PROBLEM_SOLVING_DIVERSION_RAPID_RESOLUTION_INTERVENTION_OR_SERVICE

  """
  (18) Referral to a Housing Stability Voucher
  """
  REFERRAL_TO_A_HOUSING_STABILITY_VOUCHER

  """
  (16) Referral to emergency assistance/flex fund/furniture assistance
  """
  REFERRAL_TO_EMERGENCY_ASSISTANCE_FLEX_FUND_FURNITURE_ASSISTANCE

  """
  (17) Referral to Emergency Housing Voucher (EHV)
  """
  REFERRAL_TO_EMERGENCY_HOUSING_VOUCHER_EHV

  """
  (10) Referral to Emergency Shelter bed opening
  """
  REFERRAL_TO_EMERGENCY_SHELTER_BED_OPENING

  """
  (7) Referral to Housing Navigation project or services
  """
  REFERRAL_TO_HOUSING_NAVIGATION_PROJECT_OR_SERVICES

  """
  (12) Referral to Joint TH-RRH project/unit/resource opening
  """
  REFERRAL_TO_JOINT_TH_RRH_PROJECT_UNIT_RESOURCE_OPENING

  """
  (8) Referral to Non-continuum services: Ineligible for continuum services
  """
  REFERRAL_TO_NON_CONTINUUM_SERVICES_INELIGIBLE_FOR_CONTINUUM_SERVICES

  """
  (9) Referral to Non-continuum services: No availability in continuum services
  """
  REFERRAL_TO_NON_CONTINUUM_SERVICES_NO_AVAILABILITY_IN_CONTINUUM_SERVICES

  """
  (15) Referral to Other PH project/unit/resource opening
  """
  REFERRAL_TO_OTHER_PH_PROJECT_UNIT_RESOURCE_OPENING

  """
  (5) Referral to Post-placement/ follow-up case management
  """
  REFERRAL_TO_POST_PLACEMENT_FOLLOW_UP_CASE_MANAGEMENT

  """
  (1) Referral to Prevention Assistance project
  """
  REFERRAL_TO_PREVENTION_ASSISTANCE_PROJECT

  """
  (14) Referral to PSH project resource opening
  """
  REFERRAL_TO_PSH_PROJECT_RESOURCE_OPENING

  """
  (13) Referral to RRH project resource opening
  """
  REFERRAL_TO_RRH_PROJECT_RESOURCE_OPENING

  """
  (3) Referral to scheduled Coordinated Entry Crisis Needs Assessment
  """
  REFERRAL_TO_SCHEDULED_COORDINATED_ENTRY_CRISIS_NEEDS_ASSESSMENT

  """
  (4) Referral to scheduled Coordinated Entry Housing Needs Assessment
  """
  REFERRAL_TO_SCHEDULED_COORDINATED_ENTRY_HOUSING_NEEDS_ASSESSMENT

  """
  (6) Referral to Street Outreach project or services
  """
  REFERRAL_TO_STREET_OUTREACH_PROJECT_OR_SERVICES

  """
  (11) Referral to Transitional Housing bed/unit opening
  """
  REFERRAL_TO_TRANSITIONAL_HOUSING_BED_UNIT_OPENING
}

type EventsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Event!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Exit {
  client: Client!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  destination: Destination!
  enrollment: Enrollment!
  exitDate: ISO8601Date!
  id: ID!
  otherDestination: String
  user: User
}

"""
External Identifier
"""
type ExternalIdentifier {
  """
  API ID, not the actual identifier value
  """
  id: ID!

  """
  The identifier value
  """
  identifier: ID
  label: String!
  url: String
}

"""
C1.2
"""
enum FeelingFrequency {
  """
  (4) At least every day
  """
  AT_LEAST_EVERY_DAY

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) Not at all
  """
  NOT_AT_ALL

  """
  (1) Once a month
  """
  ONCE_A_MONTH

  """
  (2) Several times a month
  """
  SEVERAL_TIMES_A_MONTH

  """
  (3) Several times a week
  """
  SEVERAL_TIMES_A_WEEK
}

"""
File
"""
type File {
  confidential: Boolean
  contentType: String!
  dateCreated: ISO8601DateTime!
  dateUpdated: ISO8601DateTime!
  effectiveDate: ISO8601Date
  enrollment: Enrollment
  enrollmentId: ID
  expirationDate: ISO8601Date
  fileBlobId: ID
  id: ID!
  name: String!
  ownFile: Boolean!
  redacted: Boolean!
  tags: [String!]!
  updatedBy: ApplicationUser
  uploadedBy: ApplicationUser
  url: String
  user: User
}

"""
File Sorting Options
"""
enum FileSortOption {
  DATE_CREATED
  DATE_UPDATED
}

type FilesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [File!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
FormDefinition
"""
type FormDefinition {
  definition: FormDefinitionJson!
  id: ID!
  identifier: String!
  role: FormRole!
  status: String!
  version: Int!
}

type FormDefinitionJson {
  """
  Nested items
  """
  item: [FormItem!]!
}

input FormInput {
  clientId: ID
  confirmed: Boolean
  enrollmentId: ID
  formDefinitionId: ID!
  hudValues: JsonObject
  organizationId: ID
  projectId: ID
  recordId: ID
  serviceTypeId: ID
  values: JsonObject
}

"""
A question or group of questions
"""
type FormItem {
  """
  Whether this item corresponds to the assessment date. Must be used with DATE
  type. Should be used no more than once per form
  """
  assessmentDate: Boolean

  """
  Value(s) to autofill based on conditional logic
  """
  autofillValues: [AutofillValue!]

  """
  Bounds applied to the input value
  """
  bounds: [ValueBound!]

  """
  Label to use for placeholder and population table
  """
  briefText: String

  """
  Component to use for display/input of this item
  """
  component: Component

  """
  Key of CustomDataElement to save record as. Use record_type to specify type.
  """
  customFieldKey: String

  """
  Include this item only if the Client meets this HUD DataCollectedAbout condition
  """
  dataCollectedAbout: DataCollectedAbout

  """
  How to display item if it is disabled
  """
  disabledDisplay: DisabledDisplay
  enableBehavior: EnableBehavior
  enableWhen: [EnableWhen!]

  """
  Name of the field on the record (or on the query input type). Used for record
  creation/update forms, for assessment population, and for assessment extraction.
  """
  fieldName: String

  """
  Include this item only for the listed funders
  """
  funders: [FundingSource!]

  """
  Helper text for the item
  """
  helperText: String

  """
  Whether the item should always be hidden
  """
  hidden: Boolean

  """
  Initial value(s) when item is first rendered
  """
  initial: [InitialValue!]

  """
  Nested items
  """
  item: [FormItem!]

  """
  Unique identifier for item
  """
  linkId: String!

  """
  Permitted answers, for choice items
  """
  pickListOptions: [PickListOption!]

  """
  Reference to value set of possible answer options
  """
  pickListReference: String

  """
  Whether to allow pre-filling section from recent records. Should only be
  enabled in conjunction with record_type and for top-level group items.
  """
  prefill: Boolean

  """
  Prefix for the item label
  """
  prefix: String

  """
  Exclude this item for the listed project types
  """
  projectTypesExcluded: [ProjectType!]

  """
  Include this item only for the listed project types
  """
  projectTypesIncluded: [ProjectType!]

  """
  Whether human editing is allowed
  """
  readOnly: Boolean

  """
  Text to use for the item when displayed in read-only view
  """
  readonlyText: String

  """
  Record type to use for population and extraction
  """
  recordType: RelatedRecordType

  """
  Whether the item may repeat (for choice types, this means multiple choice)
  """
  repeats: Boolean

  """
  Whether the item must be included in data results
  """
  required: Boolean

  """
  Whether to apply this field to all clients or a single client when bulk creating
  """
  serviceDetailType: ServiceDetailType

  """
  Size of the input element
  """
  size: InputSize

  """
  Primary text for the item
  """
  text: String
  type: ItemType!

  """
  Whether to show a warning if this question is unanswered
  """
  warnIfEmpty: Boolean
}

"""
Form Role
"""
enum FormRole {
  """
  (ANNUAL) Annual Assessment
  """
  ANNUAL

  """
  (CE) Coordinated Entry
  """
  CE

  """
  (CLIENT) Client
  """
  CLIENT

  """
  (CUSTOM) Custom Assessment
  """
  CUSTOM

  """
  (EXIT) Exit Assessment
  """
  EXIT

  """
  (FILE) File
  """
  FILE

  """
  (FUNDER) Funder
  """
  FUNDER

  """
  (INTAKE) Intake Assessment
  """
  INTAKE

  """
  (INVENTORY) Inventory
  """
  INVENTORY

  """
  (ORGANIZATION) Organization
  """
  ORGANIZATION

  """
  (POST_EXIT) Post-Exit Assessment
  """
  POST_EXIT

  """
  (PROJECT) Project
  """
  PROJECT

  """
  (PROJECT_COC) Project CoC
  """
  PROJECT_COC

  """
  (REFERRAL_REQUEST) Referral Request
  """
  REFERRAL_REQUEST

  """
  (SERVICE) Service
  """
  SERVICE

  """
  (UPDATE) Update Assessment
  """
  UPDATE
}

type Funder {
  active: Boolean!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  endDate: ISO8601Date
  funder: FundingSource!
  grantId: String!
  id: ID!
  otherFunder: String
  project: Project!
  startDate: ISO8601Date!
  user: User
}

"""
HUD Funder Sorting Options
"""
enum FunderSortOption {
  START_DATE
}

type FundersPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Funder!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
2.06.1
"""
enum FundingSource {
  """
  (21) HHS: PATH - Street Outreach & Supportive Services Only
  """
  HHS_PATH_STREET_OUTREACH_SUPPORTIVE_SERVICES_ONLY

  """
  (22) HHS: RHY - Basic Center Program (prevention and shelter)
  """
  HHS_RHY_BASIC_CENTER_PROGRAM_PREVENTION_AND_SHELTER

  """
  (26) HHS: RHY - Demonstration Project
  """
  HHS_RHY_DEMONSTRATION_PROJECT

  """
  (23) HHS: RHY - Maternity Group Home for Pregnant and Parenting Youth
  """
  HHS_RHY_MATERNITY_GROUP_HOME_FOR_PREGNANT_AND_PARENTING_YOUTH

  """
  (25) HHS: RHY - Street Outreach Project
  """
  HHS_RHY_STREET_OUTREACH_PROJECT

  """
  (24) HHS: RHY - Transitional Living Program
  """
  HHS_RHY_TRANSITIONAL_LIVING_PROGRAM

  """
  (1) HUD: CoC - Homelessness Prevention (High Performing Communities Only)
  """
  HUD_COC_HOMELESSNESS_PREVENTION_HIGH_PERFORMING_COMMUNITIES_ONLY

  """
  (49) HUD: CoC - Joint Component RRH/PSH
  """
  HUD_COC_JOINT_COMPONENT_RRH_PSH

  """
  (44) HUD: CoC - Joint Component TH/RRH
  """
  HUD_COC_JOINT_COMPONENT_TH_RRH

  """
  (2) HUD: CoC - Permanent Supportive Housing
  """
  HUD_COC_PERMANENT_SUPPORTIVE_HOUSING

  """
  (3) HUD: CoC - Rapid Re-Housing
  """
  HUD_COC_RAPID_RE_HOUSING

  """
  (6) HUD: CoC - Safe Haven
  """
  HUD_COC_SAFE_HAVEN

  """
  (7) HUD: CoC - Single Room Occupancy (SRO)
  """
  HUD_COC_SINGLE_ROOM_OCCUPANCY_SRO

  """
  (4) HUD: CoC - Supportive Services Only
  """
  HUD_COC_SUPPORTIVE_SERVICES_ONLY

  """
  (5) HUD: CoC - Transitional Housing
  """
  HUD_COC_TRANSITIONAL_HOUSING

  """
  (43) HUD: CoC - Youth Homeless Demonstration Program (YHDP)
  """
  HUD_COC_YOUTH_HOMELESS_DEMONSTRATION_PROGRAM_YHDP

  """
  (47) HUD: ESG - CV
  """
  HUD_ESG_CV

  """
  (8) HUD: ESG - Emergency Shelter (operating and/or essential services)
  """
  HUD_ESG_EMERGENCY_SHELTER_OPERATING_AND_OR_ESSENTIAL_SERVICES

  """
  (9) HUD: ESG - Homelessness Prevention
  """
  HUD_ESG_HOMELESSNESS_PREVENTION

  """
  (10) HUD: ESG - Rapid Rehousing
  """
  HUD_ESG_RAPID_REHOUSING

  """
  (53) HUD: ESG - RUSH
  """
  HUD_ESG_RUSH

  """
  (11) HUD: ESG - Street Outreach
  """
  HUD_ESG_STREET_OUTREACH

  """
  (50) HUD: HOME
  """
  HUD_HOME

  """
  (51) HUD: HOME (ARP)
  """
  HUD_HOME_ARP

  """
  (48) HUD: HOPWA - CV
  """
  HUD_HOPWA_CV

  """
  (13) HUD: HOPWA - Hotel/Motel Vouchers
  """
  HUD_HOPWA_HOTEL_MOTEL_VOUCHERS

  """
  (14) HUD: HOPWA - Housing Information
  """
  HUD_HOPWA_HOUSING_INFORMATION

  """
  (15) HUD: HOPWA - Permanent Housing (facility based or TBRA)
  """
  HUD_HOPWA_PERMANENT_HOUSING_FACILITY_BASED_OR_TBRA

  """
  (16) HUD: HOPWA - Permanent Housing Placement
  """
  HUD_HOPWA_PERMANENT_HOUSING_PLACEMENT

  """
  (17) HUD: HOPWA - Short-Term Rent, Mortgage, Utility assistance
  """
  HUD_HOPWA_SHORT_TERM_RENT_MORTGAGE_UTILITY_ASSISTANCE

  """
  (18) HUD: HOPWA - Short-Term Supportive Facility
  """
  HUD_HOPWA_SHORT_TERM_SUPPORTIVE_FACILITY

  """
  (19) HUD: HOPWA - Transitional Housing (facility based or TBRA)
  """
  HUD_HOPWA_TRANSITIONAL_HOUSING_FACILITY_BASED_OR_TBRA

  """
  (20) HUD: HUD/VASH
  """
  HUD_HUD_VASH

  """
  (35) HUD: Pay for Success
  """
  HUD_PAY_FOR_SUCCESS

  """
  (52) HUD: PIH (Emergency Housing Voucher)
  """
  HUD_PIH_EMERGENCY_HOUSING_VOUCHER

  """
  (36) HUD: Public and Indian Housing (PIH) Programs
  """
  HUD_PUBLIC_AND_INDIAN_HOUSING_PIH_PROGRAMS

  """
  (12) HUD: Rural Housing Stability Assistance Program
  """
  HUD_RURAL_HOUSING_STABILITY_ASSISTANCE_PROGRAM

  """
  Invalid Value
  """
  INVALID

  """
  (46) Local or Other Funding Source
  """
  LOCAL_OR_OTHER_FUNDING_SOURCE

  """
  (34) N/A
  """
  N_A

  """
  (30) VA: Community Contract Safe Haven Program
  """
  VA_COMMUNITY_CONTRACT_SAFE_HAVEN_PROGRAM

  """
  (32) VA: Compensated Work Therapy Transitional Residence
  """
  VA_COMPENSATED_WORK_THERAPY_TRANSITIONAL_RESIDENCE

  """
  (27) VA: CRS Contract Residential Services
  """
  VA_CRS_CONTRACT_RESIDENTIAL_SERVICES

  """
  (37) VA: Grant Per Diem - Bridge Housing
  """
  VA_GRANT_PER_DIEM_BRIDGE_HOUSING

  """
  (45) VA: Grant Per Diem - Case Management/Housing Retention
  """
  VA_GRANT_PER_DIEM_CASE_MANAGEMENT_HOUSING_RETENTION

  """
  (40) VA: Grant Per Diem - Clinical Treatment
  """
  VA_GRANT_PER_DIEM_CLINICAL_TREATMENT

  """
  (39) VA: Grant Per Diem - Hospital to Housing
  """
  VA_GRANT_PER_DIEM_HOSPITAL_TO_HOUSING

  """
  (38) VA: Grant Per Diem - Low Demand
  """
  VA_GRANT_PER_DIEM_LOW_DEMAND

  """
  (41) VA: Grant Per Diem - Service Intensive Transitional Housing
  """
  VA_GRANT_PER_DIEM_SERVICE_INTENSIVE_TRANSITIONAL_HOUSING

  """
  (42) VA: Grant Per Diem - Transition in Place
  """
  VA_GRANT_PER_DIEM_TRANSITION_IN_PLACE

  """
  (33) VA: Supportive Services for Veteran Families
  """
  VA_SUPPORTIVE_SERVICES_FOR_VETERAN_FAMILIES
}

"""
HUD Gender (1.7)
"""
enum Gender {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (0) Female
  """
  FEMALE

  """
  (1) Male
  """
  MALE

  """
  (4) A gender other than singularly female or male (e.g., non-binary, genderfluid, agender, culturally specific gender)
  """
  NO_SINGLE_GENDER

  """
  (6) Questioning
  """
  QUESTIONING

  """
  (5) Transgender
  """
  TRANSGENDER
}

"""
2.03.4
"""
enum GeographyType {
  """
  (99) Unknown / data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (3) Rural
  """
  RURAL

  """
  (2) Suburban
  """
  SUBURBAN

  """
  (1) Urban
  """
  URBAN
}

"""
2.02.9
"""
enum HOPWAMedAssistedLivingFac {
  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (2) Non-HOPWA Funded Project
  """
  NON_HOPWA_FUNDED_PROJECT

  """
  (1) Yes
  """
  YES
}

type HealthAndDv {
  bounceBack: WellbeingAgreement
  client: Client!
  currentlyFleeing: NoYesReasonsForMissingData
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  dentalHealthStatus: HealthStatus
  domesticViolenceVictim: NoYesReasonsForMissingData
  dueDate: ISO8601Date
  enrollment: Enrollment!
  feelingFrequency: FeelingFrequency
  generalHealthStatus: HealthStatus
  id: ID!
  informationDate: ISO8601Date!
  lifeValue: WellbeingAgreement
  mentalHealthStatus: HealthStatus
  pregnancyStatus: NoYesReasonsForMissingData
  supportFromOthers: WellbeingAgreement
  user: User
  whenOccurred: WhenDVOccurred
}

type HealthAndDvsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [HealthAndDv!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
R7.1
"""
enum HealthStatus {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Excellent
  """
  EXCELLENT

  """
  (4) Fair
  """
  FAIR

  """
  (3) Good
  """
  GOOD

  """
  Invalid Value
  """
  INVALID

  """
  (5) Poor
  """
  POOR

  """
  (2) Very good
  """
  VERY_GOOD
}

"""
HUD Household
"""
type Household {
  householdClients: [HouseholdClient!]!
  householdSize: Int!
  id: ID!
  shortId: ID!
}

"""
HUD Client within a Household
"""
type HouseholdClient {
  client: Client!
  enrollment: Enrollment!
  id: ID!
  relationshipToHoH: RelationshipToHoH!
}

"""
2.07.4
"""
enum HouseholdType {
  """
  (1) Households without children
  """
  HOUSEHOLDS_WITHOUT_CHILDREN

  """
  (3) Households with at least one adult and one child
  """
  HOUSEHOLDS_WITH_AT_LEAST_ONE_ADULT_AND_ONE_CHILD

  """
  (4) Households with only children
  """
  HOUSEHOLDS_WITH_ONLY_CHILDREN

  """
  Invalid Value
  """
  INVALID
}

type HouseholdsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Household!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
2.02.D
"""
enum HousingType {
  """
  Invalid Value
  """
  INVALID

  """
  (2) Site-based - clustered / multiple sites
  """
  SITE_BASED_CLUSTERED_MULTIPLE_SITES

  """
  (1) Site-based - single site
  """
  SITE_BASED_SINGLE_SITE

  """
  (3) Tenant-based - scattered site
  """
  TENANT_BASED_SCATTERED_SITE
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type IncomeBenefit {
  adap: NoYesReasonsForMissingData
  alimony: NoYesMissing
  alimonyAmount: Float
  benefitsFromAnySource: NoYesReasonsForMissingData
  childSupport: NoYesMissing
  childSupportAmount: Float
  client: Client!
  cobra: NoYesMissing
  connectionWithSoar: NoYesReasonsForMissingData
  dataCollectionStage: DataCollectionStage!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  earned: NoYesMissing
  earnedAmount: Float
  employerProvided: NoYesMissing
  enrollment: Enrollment!
  ga: NoYesMissing
  gaAmount: Float
  hivaidsAssistance: NoYesReasonsForMissingData
  id: ID!
  incomeFromAnySource: NoYesReasonsForMissingData
  indianHealthServices: NoYesMissing
  informationDate: ISO8601Date!
  insuranceFromAnySource: NoYesReasonsForMissingData
  medicaid: NoYesMissing
  medicare: NoYesMissing
  noAdapReason: NoAssistanceReason
  noCobraReason: ReasonNotInsured
  noEmployerProvidedReason: ReasonNotInsured
  noHivaidsAssistanceReason: NoAssistanceReason
  noIndianHealthServicesReason: ReasonNotInsured
  noMedicaidReason: ReasonNotInsured
  noMedicareReason: ReasonNotInsured
  noPrivatePayReason: ReasonNotInsured
  noRyanWhiteReason: NoAssistanceReason
  noSchipReason: ReasonNotInsured
  noStateHealthInsReason: ReasonNotInsured
  noVaMedReason: ReasonNotInsured
  otherBenefitsSource: NoYesMissing
  otherBenefitsSourceIdentify: String
  otherIncomeAmount: Float
  otherIncomeSource: NoYesMissing
  otherIncomeSourceIdentify: String
  otherInsurance: NoYesMissing
  otherInsuranceIdentify: String
  otherTanf: NoYesMissing
  pension: NoYesMissing
  pensionAmount: Float
  privateDisability: NoYesMissing
  privateDisabilityAmount: Float
  privatePay: NoYesMissing
  ryanWhiteMedDent: NoYesReasonsForMissingData
  schip: NoYesMissing
  snap: NoYesMissing
  socSecRetirement: NoYesMissing
  socSecRetirementAmount: Float
  ssdi: NoYesMissing
  ssdiAmount: Float
  ssi: NoYesMissing
  ssiAmount: Float
  stateHealthIns: NoYesMissing
  tanf: NoYesMissing
  tanfAmount: Float
  tanfChildCare: NoYesMissing
  tanfTransportation: NoYesMissing
  totalMonthlyIncome: String
  unemployment: NoYesMissing
  unemploymentAmount: Float
  user: User
  vaDisabilityNonService: NoYesMissing
  vaDisabilityNonServiceAmount: Float
  vaDisabilityService: NoYesMissing
  vaDisabilityServiceAmount: Float
  vaMedicalServices: NoYesMissing
  wic: NoYesMissing
  workersComp: NoYesMissing
  workersCompAmount: Float
}

type IncomeBenefitsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [IncomeBenefit!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

enum InitialBehavior {
  """
  When loading the form, only set the specified initial value if there is no existing value.
  """
  IF_EMPTY

  """
  When loading the form, always overwrite the existing value with specified initial value.
  """
  OVERWRITE
}

"""
Initial value when item is first rendered
"""
type InitialValue {
  initialBehavior: InitialBehavior!

  """
  Boolean to set as initial value
  """
  valueBoolean: Boolean

  """
  Code to set as initial value
  """
  valueCode: String

  """
  Name of local variable to use as initial value if present. Variable type should match item type.
  """
  valueLocalConstant: String

  """
  Number to set as initial value
  """
  valueNumber: Int
}

enum InputSize {
  LARGE
  MEDIUM
  SMALL
  XSMALL
}

type InventoriesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Inventory!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Inventory {
  active: Boolean!
  availability: Availability
  bedInventory: Int!
  chBedInventory: Int
  chVetBedInventory: Int
  chYouthBedInventory: Int
  cocCode: String!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  esBedType: BedType
  householdType: HouseholdType!
  id: ID!
  inventoryEndDate: ISO8601Date
  inventoryStartDate: ISO8601Date!
  otherBedInventory: Int
  project: Project!
  unitInventory: Int!
  user: User
  vetBedInventory: Int
  youthBedInventory: Int
  youthVetBedInventory: Int
}

enum InventoryBedType {
  """
  Chronic
  """
  CHRONIC

  """
  Chronic Veteran
  """
  CHRONIC_VETERAN

  """
  Chronic Youth
  """
  CHRONIC_YOUTH

  """
  Other
  """
  OTHER

  """
  Veteran
  """
  VETERAN

  """
  Youth
  """
  YOUTH

  """
  Youth Veteran
  """
  YOUTH_VETERAN
}

"""
HUD Inventory Sorting Options
"""
enum InventorySortOption {
  START_DATE
}

enum ItemType {
  BOOLEAN
  CHOICE
  CURRENCY
  DATE
  DISPLAY
  FILE
  GROUP
  IMAGE
  INTEGER
  OBJECT
  OPEN_CHOICE
  STRING
  TEXT
}

"""
Arbitrary JSON Type
"""
scalar JsonObject

"""
3.12.1
"""
enum LivingSituation {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (24) Deceased
  """
  DECEASED

  """
  (1) Emergency shelter, including hotel or motel paid for with emergency shelter voucher, or RHY-funded Host Home shelter
  """
  EMERGENCY_SHELTER_INCLUDING_HOTEL_OR_MOTEL_PAID_FOR_WITH_EMERGENCY_SHELTER_VOUCHER_OR_RHY_FUNDED_HOST_HOME_SHELTER

  """
  (15) Foster care home or foster care group home
  """
  FOSTER_CARE_HOME_OR_FOSTER_CARE_GROUP_HOME

  """
  (6) Hospital or other residential non-psychiatric medical facility
  """
  HOSPITAL_OR_OTHER_RESIDENTIAL_NON_PSYCHIATRIC_MEDICAL_FACILITY

  """
  (32) Host Home (non-crisis)
  """
  HOST_HOME_NON_CRISIS

  """
  (14) Hotel or motel paid for without emergency shelter voucher
  """
  HOTEL_OR_MOTEL_PAID_FOR_WITHOUT_EMERGENCY_SHELTER_VOUCHER

  """
  (27) Interim Housing
  """
  INTERIM_HOUSING

  """
  Invalid Value
  """
  INVALID

  """
  (7) Jail, prison or juvenile detention facility
  """
  JAIL_PRISON_OR_JUVENILE_DETENTION_FACILITY

  """
  (25) Long-term care facility or nursing home
  """
  LONG_TERM_CARE_FACILITY_OR_NURSING_HOME

  """
  (26) Moved from one HOPWA funded project to HOPWA PH
  """
  MOVED_FROM_ONE_HOPWA_FUNDED_PROJECT_TO_HOPWA_PH

  """
  (30) No exit interview completed
  """
  NO_EXIT_INTERVIEW_COMPLETED

  """
  (17) Other
  """
  OTHER

  """
  (11) Owned by client, no ongoing housing subsidy
  """
  OWNED_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (21) Owned by client, with ongoing housing subsidy
  """
  OWNED_BY_CLIENT_WITH_ONGOING_HOUSING_SUBSIDY

  """
  (3) Permanent housing (other than RRH) for formerly homeless persons
  """
  PERMANENT_HOUSING_OTHER_THAN_RRH_FOR_FORMERLY_HOMELESS_PERSONS

  """
  (16) Place not meant for habitation (e.g., a vehicle, an abandoned building,
  bus/train/subway station/airport or anywhere outside)
  """
  PLACE_NOT_MEANT_FOR_HABITATION_E_G_A_VEHICLE_AN_ABANDONED_BUILDING_BUS_TRAIN_SUBWAY_STATION_AIRPORT_OR_ANYWHERE_OUTSIDE

  """
  (4) Psychiatric hospital or other psychiatric facility
  """
  PSYCHIATRIC_HOSPITAL_OR_OTHER_PSYCHIATRIC_FACILITY

  """
  (34) Rental by client in a public housing unit
  """
  RENTAL_BY_CLIENT_IN_A_PUBLIC_HOUSING_UNIT

  """
  (10) Rental by client, no ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_NO_ONGOING_HOUSING_SUBSIDY

  """
  (28) Rental by client, with GPD TIP housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_GPD_TIP_HOUSING_SUBSIDY

  """
  (33) Rental by client, with HCV voucher (tenant or project based)
  """
  RENTAL_BY_CLIENT_WITH_HCV_VOUCHER_TENANT_OR_PROJECT_BASED

  """
  (20) Rental by client, with other ongoing housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_OTHER_ONGOING_HOUSING_SUBSIDY

  """
  (31) Rental by client, with RRH or equivalent subsidy
  """
  RENTAL_BY_CLIENT_WITH_RRH_OR_EQUIVALENT_SUBSIDY

  """
  (19) Rental by client, with VASH housing subsidy
  """
  RENTAL_BY_CLIENT_WITH_VASH_HOUSING_SUBSIDY

  """
  (29) Residential project or halfway house with no homeless criteria
  """
  RESIDENTIAL_PROJECT_OR_HALFWAY_HOUSE_WITH_NO_HOMELESS_CRITERIA

  """
  (18) Safe Haven
  """
  SAFE_HAVEN

  """
  (35) Staying or living in a family member's room, apartment or house
  """
  STAYING_OR_LIVING_IN_A_FAMILY_MEMBER_S_ROOM_APARTMENT_OR_HOUSE

  """
  (36) Staying or living in a friend's room, apartment or house
  """
  STAYING_OR_LIVING_IN_A_FRIEND_S_ROOM_APARTMENT_OR_HOUSE

  """
  (22) Staying or living with family, permanent tenure
  """
  STAYING_OR_LIVING_WITH_FAMILY_PERMANENT_TENURE

  """
  (12) Staying or living with family, temporary tenure (e.g. room, apartment or house)
  """
  STAYING_OR_LIVING_WITH_FAMILY_TEMPORARY_TENURE_E_G_ROOM_APARTMENT_OR_HOUSE

  """
  (23) Staying or living with friends, permanent tenure
  """
  STAYING_OR_LIVING_WITH_FRIENDS_PERMANENT_TENURE

  """
  (13) Staying or living with friends, temporary tenure (e.g. room apartment or house)
  """
  STAYING_OR_LIVING_WITH_FRIENDS_TEMPORARY_TENURE_E_G_ROOM_APARTMENT_OR_HOUSE

  """
  (5) Substance abuse treatment facility or detox center
  """
  SUBSTANCE_ABUSE_TREATMENT_FACILITY_OR_DETOX_CENTER

  """
  (2) Transitional housing for homeless persons (including homeless youth)
  """
  TRANSITIONAL_HOUSING_FOR_HOMELESS_PERSONS_INCLUDING_HOMELESS_YOUTH

  """
  (37) Worker unable to determine
  """
  WORKER_UNABLE_TO_DETERMINE
}

input MciClearanceInput {
  dob: ISO8601Date!
  firstName: String!
  gender: [Gender!]
  lastName: String!
  middleName: String
  ssn: String
}

type MciClearanceMatch {
  age: Int!
  dob: ISO8601Date!

  """
  ID of existing Client that has the same MCI ID
  """
  existingClientId: ID
  firstName: String!
  gender: [Gender!]!
  id: ID!
  lastName: String!
  mciId: String!
  middleName: String
  nameSuffix: String
  score: Int!
  ssn: String
}

"""
3.917.5
"""
enum MonthsHomelessPastThreeYears {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (113) More than 12 months
  """
  MORE_THAN_12_MONTHS

  """
  (101) 1
  """
  NUM_1

  """
  (110) 10
  """
  NUM_10

  """
  (111) 11
  """
  NUM_11

  """
  (112) 12
  """
  NUM_12

  """
  (102) 2
  """
  NUM_2

  """
  (103) 3
  """
  NUM_3

  """
  (104) 4
  """
  NUM_4

  """
  (105) 5
  """
  NUM_5

  """
  (106) 6
  """
  NUM_6

  """
  (107) 7
  """
  NUM_7

  """
  (108) 8
  """
  NUM_8

  """
  (109) 9
  """
  NUM_9
}

type Mutation {
  addHouseholdMembersToEnrollment(
    """
    Parameters for AddHouseholdMembersToEnrollment
    """
    input: AddHouseholdMembersToEnrollmentInput!
  ): AddHouseholdMembersToEnrollmentPayload
  addRecentItem(
    """
    Parameters for AddRecentItem
    """
    input: AddRecentItemInput!
  ): ApplicationUser

  """
  Perform MCI clearance and return matches
  """
  clearMci(
    """
    Parameters for ClearMci
    """
    input: ClearMciInput!
  ): ClearMciPayload
  clearRecentItems(
    """
    Parameters for ClearRecentItems
    """
    input: ClearRecentItemsInput!
  ): ApplicationUser
  createDirectUpload(
    """
    Parameters for CreateDirectUpload
    """
    input: CreateDirectUploadInput!
  ): DirectUpload
  createEnrollment(
    """
    Parameters for CreateEnrollment
    """
    input: CreateEnrollmentInput!
  ): CreateEnrollmentPayload
  createService(
    """
    Parameters for CreateService
    """
    input: CreateServiceInput!
  ): CreateServicePayload
  createUnits(
    """
    Parameters for CreateUnits
    """
    input: CreateUnitsInput!
  ): CreateUnitsPayload
  deleteAssessment(
    """
    Parameters for DeleteAssessment
    """
    input: DeleteAssessmentInput!
  ): DeleteAssessmentPayload
  deleteClient(
    """
    Parameters for DeleteClient
    """
    input: DeleteClientInput!
  ): DeleteClientPayload
  deleteClientFile(
    """
    Parameters for DeleteClientFile
    """
    input: DeleteClientFileInput!
  ): DeleteClientFilePayload
  deleteClientImage(
    """
    Parameters for DeleteClientImage
    """
    input: DeleteClientImageInput!
  ): DeleteClientImagePayload
  deleteEnrollment(
    """
    Parameters for DeleteEnrollment
    """
    input: DeleteEnrollmentInput!
  ): DeleteEnrollmentPayload
  deleteFunder(
    """
    Parameters for DeleteFunder
    """
    input: DeleteFunderInput!
  ): DeleteFunderPayload
  deleteInventory(
    """
    Parameters for DeleteInventory
    """
    input: DeleteInventoryInput!
  ): DeleteInventoryPayload
  deleteOrganization(
    """
    Parameters for DeleteOrganization
    """
    input: DeleteOrganizationInput!
  ): DeleteOrganizationPayload
  deleteProject(
    """
    Parameters for DeleteProject
    """
    input: DeleteProjectInput!
  ): DeleteProjectPayload
  deleteProjectCoc(
    """
    Parameters for DeleteProjectCoc
    """
    input: DeleteProjectCocInput!
  ): DeleteProjectCocPayload
  deleteService(
    """
    Parameters for DeleteService
    """
    input: DeleteServiceInput!
  ): DeleteServicePayload
  deleteUnits(
    """
    Parameters for DeleteUnits
    """
    input: DeleteUnitsInput!
  ): DeleteUnitsPayload

  """
  Create/Save assessment as work-in-progress
  """
  saveAssessment(
    """
    Parameters for SaveAssessment
    """
    input: SaveAssessmentInput!
  ): SaveAssessmentPayload

  """
  Create/Submit assessment, and create/update related HUD records
  """
  submitAssessment(
    """
    Parameters for SubmitAssessment
    """
    input: SubmitAssessmentInput!
  ): SubmitAssessmentPayload

  """
  Submit a form to create/update HUD record(s)
  """
  submitForm(
    """
    Parameters for SubmitForm
    """
    input: SubmitFormInput!
  ): SubmitFormPayload

  """
  Submit multiple assessments in a household
  """
  submitHouseholdAssessments(
    """
    Parameters for SubmitHouseholdAssessments
    """
    input: SubmitHouseholdAssessmentsInput!
  ): SubmitHouseholdAssessmentsPayload
  updateClientImage(
    """
    Parameters for UpdateClientImage
    """
    input: UpdateClientImageInput!
  ): UpdateClientImagePayload
  updateRelationshipToHoH(
    """
    Parameters for UpdateRelationshipToHoH
    """
    input: UpdateRelationshipToHoHInput!
  ): UpdateRelationshipToHoHPayload
  updateService(
    """
    Parameters for UpdateService
    """
    input: UpdateServiceInput!
  ): UpdateServicePayload
  updateUnits(
    """
    Parameters for UpdateUnits
    """
    input: UpdateUnitsInput!
  ): UpdateUnitsPayload

  """
  Void a referral request
  """
  voidReferralRequest(referralRequestId: ID!): VoidReferralRequestPayload
}

"""
3.01.5
"""
enum NameDataQuality {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Full name reported
  """
  FULL_NAME_REPORTED

  """
  Invalid Value
  """
  INVALID

  """
  (2) Partial, street name, or code name reported
  """
  PARTIAL_STREET_NAME_OR_CODE_NAME_REPORTED
}

"""
W3
"""
enum NoAssistanceReason {
  """
  (2) Applied; client not eligible
  """
  APPLIED_CLIENT_NOT_ELIGIBLE

  """
  (1) Applied; decision pending
  """
  APPLIED_DECISION_PENDING

  """
  (3) Client did not apply
  """
  CLIENT_DID_NOT_APPLY

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (4) Insurance type not applicable for this client
  """
  INSURANCE_TYPE_NOT_APPLICABLE_FOR_THIS_CLIENT

  """
  Invalid Value
  """
  INVALID
}

"""
1.7
"""
enum NoYesMissing {
  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (1) Yes
  """
  YES
}

"""
1.8
"""
enum NoYesReasonsForMissingData {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (0) No
  """
  NO

  """
  (1) Yes
  """
  YES
}

"""
Results from client/project omnisearch
"""
union OmnisearchResult = Client | Project

type Organization {
  access: OrganizationAccess!
  contactInformation: String
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  description: String
  hudId: ID!
  id: ID!
  organizationName: String!
  projects(limit: Int, offset: Int, projectTypes: [ProjectType!], searchTerm: String, sortOrder: ProjectSortOption): ProjectsPaginated!
  user: User
  victimServiceProvider: NoYesMissing!
}

type OrganizationAccess {
  canDeleteOrganization: Boolean!
  canEditOrganization: Boolean!
  id: ID!
}

"""
HUD Organization Sorting Options
"""
enum OrganizationSortOption {
  NAME
}

type OrganizationsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Organization!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
P2.A
"""
enum PATHReferralOutcome {
  """
  (1) Attained
  """
  ATTAINED

  """
  Invalid Value
  """
  INVALID

  """
  (2) Not attained
  """
  NOT_ATTAINED

  """
  (3) Unknown
  """
  UNKNOWN
}

type PickListOption {
  """
  Code for the option
  """
  code: String!

  """
  Code for group that option belongs to, if grouped
  """
  groupCode: String

  """
  Label for group that option belongs to, if grouped
  """
  groupLabel: String

  """
  Whether option is selected by default
  """
  initialSelected: Boolean

  """
  Label for the option
  """
  label: String

  """
  Secondary label, such as project type or CoC code
  """
  secondaryLabel: String
}

enum PickListType {
  AVAILABLE_FILE_TYPES
  AVAILABLE_SERVICE_TYPES

  """
  Unoccupied units in the specified project
  """
  AVAILABLE_UNITS

  """
  Unit types that have unoccupied units in the specified project
  """
  AVAILABLE_UNIT_TYPES

  """
  All Enrollments, including WIP and exited, for the client.
  """
  CLIENT_ENROLLMENTS
  COC
  CURRENT_LIVING_SITUATION
  DESTINATION

  """
  Projects that the User can enroll Clients in
  """
  ENROLLABLE_PROJECTS
  GEOCODE

  """
  All Organizations that the User can see
  """
  ORGANIZATION
  PRIOR_LIVING_SITUATION

  """
  All Projects that the User can see
  """
  PROJECT
  REFERRAL_OUTCOME
  SERVICE_TYPE
  STATE
  SUB_TYPE_PROVIDED_3
  SUB_TYPE_PROVIDED_4
  SUB_TYPE_PROVIDED_5

  """
  Units in the specified project
  """
  UNITS

  """
  Unit types. If project is specified, limited to unit types in the project.
  """
  UNIT_TYPES
}

"""
4.19.7
"""
enum PrioritizationStatus {
  """
  Invalid Value
  """
  INVALID

  """
  (2) Not placed on prioritization list
  """
  NOT_PLACED_ON_PRIORITIZATION_LIST

  """
  (1) Placed on prioritization list
  """
  PLACED_ON_PRIORITIZATION_LIST
}

type Project {
  HMISParticipatingProject: NoYesMissing
  HOPWAMedAssistedLivingFac: HOPWAMedAssistedLivingFac
  access: ProjectAccess!
  active: Boolean!
  contactInformation: String
  continuumProject: NoYesMissing
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  description: String
  enrollments(filters: EnrollmentsForProjectFilterOptions, limit: Int, offset: Int, sortOrder: EnrollmentSortOption): EnrollmentsPaginated!
  funders(limit: Int, offset: Int, sortOrder: FunderSortOption): FundersPaginated!
  households(enrollmentLimit: EnrollmentLimit, limit: Int, offset: Int, openOnDate: ISO8601Date, searchTerm: String, sortOrder: EnrollmentSortOption): HouseholdsPaginated!
  housingType: HousingType
  hudId: ID!
  id: ID!
  incomingReferralPostings(limit: Int, offset: Int): ReferralPostingsPaginated!
  inventories(limit: Int, offset: Int, sortOrder: InventorySortOption): InventoriesPaginated!
  operatingEndDate: ISO8601Date
  operatingStartDate: ISO8601Date!
  organization: Organization!
  projectCocs(limit: Int, offset: Int): ProjectCocsPaginated!
  projectName: String!
  projectType: ProjectType
  referralRequests(limit: Int, offset: Int): ReferralRequestsPaginated!
  residentialAffiliation: NoYesMissing
  targetPopulation: TargetPopulation
  trackingMethod: TrackingMethod
  units(active: Boolean, limit: Int, occupied: Boolean, offset: Int): UnitsPaginated!
  user: User
}

type ProjectAccess {
  canDeleteAssessments: Boolean!
  canDeleteEnrollments: Boolean!
  canDeleteProject: Boolean!
  canEditEnrollments: Boolean!
  canEditProjectDetails: Boolean!
  canEnrollClients: Boolean!
  canManageDeniedReferrals: Boolean!
  canManageIncomingReferrals: Boolean!
  canManageInventory: Boolean!
  canManageOutgoingReferrals: Boolean!
  canViewDob: Boolean!
  canViewEnrollmentDetails: Boolean!
  canViewFullSsn: Boolean!
  canViewPartialSsn: Boolean!
  id: ID!
}

type ProjectCoc {
  address1: String
  address2: String
  city: String
  cocCode: String!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  geocode: String!
  geographyType: GeographyType
  id: ID!
  project: Project!
  state: String
  user: User
  zip: String
}

type ProjectCocsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ProjectCoc!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
HUD Project Sorting Options
"""
enum ProjectSortOption {
  NAME
  ORGANIZATION_AND_NAME
}

"""
HUD Project Types
"""
enum ProjectType {
  """
  Coordinated Entry
  """
  CE

  """
  Day Shelter
  """
  DAY_SHELTER

  """
  Emergency Shelter
  """
  ES

  """
  Invalid Value
  """
  INVALID

  """
  Permanent Housing Only
  """
  OPH

  """
  Other
  """
  OTHER

  """
  Permanent Housing
  """
  PH

  """
  Homelessness Prevention
  """
  PREVENTION

  """
  Permanent Supportive Housing
  """
  PSH

  """
  Rapid Re-Housing
  """
  RRH

  """
  Services Only
  """
  SERVICES_ONLY

  """
  Safe Haven
  """
  SH

  """
  Street Outreach
  """
  SO

  """
  Transitional Housing
  """
  TH
}

type ProjectsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Project!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type Query {
  access: QueryAccess!

  """
  Assessment lookup
  """
  assessment(id: ID!): Assessment

  """
  Client lookup
  """
  client(id: ID!): Client

  """
  Client omnisearch
  """
  clientOmniSearch(
    limit: Int
    offset: Int
    sortOrder: ClientSortOption

    """
    Omnisearch string
    """
    textSearch: String!
  ): ClientsPaginated!

  """
  Search for clients
  """
  clientSearch(input: ClientSearchInput!, limit: Int, offset: Int, sortOrder: ClientSortOption): ClientsPaginated!
  currentUser: ApplicationUser

  """
  Enrollment lookup
  """
  enrollment(id: ID!): Enrollment
  file(id: ID!): File

  """
  Funder lookup
  """
  funder(id: ID!): Funder

  """
  Get most relevant/recent form definition for the specified Role and project (optionally)
  """
  getFormDefinition(enrollmentId: ID, projectId: ID, role: FormRole!): FormDefinition

  """
  Get most relevant form definition for the specified service type
  """
  getServiceFormDefinition(projectId: ID!, serviceTypeId: ID!): FormDefinition

  """
  Inventory lookup
  """
  inventory(id: ID!): Inventory

  """
  Organization lookup
  """
  organization(id: ID!): Organization
  organizations(limit: Int, offset: Int, sortOrder: OrganizationSortOption): OrganizationsPaginated!

  """
  Get list of options for pick list
  """
  pickList(pickListType: PickListType!, relationId: ID): [PickListOption!]!

  """
  Project lookup
  """
  project(id: ID!): Project

  """
  Project CoC lookup
  """
  projectCoc(id: ID!): ProjectCoc
  projects(limit: Int, offset: Int, projectTypes: [ProjectType!], searchTerm: String, sortOrder: ProjectSortOption): ProjectsPaginated!

  """
  Service lookup
  """
  service(id: ID!): Service

  """
  Service type lookup
  """
  serviceType(id: ID!): ServiceType
}

type QueryAccess {
  canAdministerHmis: Boolean!
  canAuditClients: Boolean!
  canDeleteAssessments: Boolean!
  canDeleteAssignedProjectData: Boolean!
  canDeleteClients: Boolean!
  canDeleteEnrollments: Boolean!
  canDeleteOrganization: Boolean!
  canDeleteProject: Boolean!
  canEditClients: Boolean!
  canEditEnrollments: Boolean!
  canEditOrganization: Boolean!
  canEditProjectDetails: Boolean!
  canEnrollClients: Boolean!
  canManageAnyClientFiles: Boolean!
  canManageDeniedReferrals: Boolean!
  canManageIncomingReferrals: Boolean!
  canManageInventory: Boolean!
  canManageOutgoingReferrals: Boolean!
  canManageOwnClientFiles: Boolean!
  canViewAnyConfidentialClientFiles: Boolean!
  canViewAnyNonconfidentialClientFiles: Boolean!
  canViewClients: Boolean!
  canViewDob: Boolean!
  canViewEnrollmentDetails: Boolean!
  canViewFullSsn: Boolean!
  canViewPartialSsn: Boolean!
  id: ID!
}

"""
HUD Race (1.7)
"""
enum Race {
  """
  (AmIndAKNative) American Indian, Alaska Native, or Indigenous
  """
  AM_IND_AK_NATIVE

  """
  (Asian) Asian or Asian American
  """
  ASIAN

  """
  (BlackAfAmerican) Black, African American, or African
  """
  BLACK_AF_AMERICAN

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (NativeHIPacific) Native Hawaiian or Pacific Islander
  """
  NATIVE_HI_PACIFIC

  """
  (White) White
  """
  WHITE
}

"""
4.04.A
"""
enum ReasonNotInsured {
  """
  (2) Applied; client not eligible
  """
  APPLIED_CLIENT_NOT_ELIGIBLE

  """
  (1) Applied; decision pending
  """
  APPLIED_DECISION_PENDING

  """
  (3) Client did not apply
  """
  CLIENT_DID_NOT_APPLY

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (4) Insurance type N/A for this client
  """
  INSURANCE_TYPE_N_A_FOR_THIS_CLIENT

  """
  Invalid Value
  """
  INVALID
}

"""
Types allowed for recent items
"""
enum RecentItemType {
  Client
  Project
}

"""
1.4
"""
enum RecordType {
  """
  (200) Bed Night
  """
  BED_NIGHT

  """
  (12) Contact 12
  """
  CONTACT_12

  """
  (13) Contact 13
  """
  CONTACT_13

  """
  (151) HOPWA Financial Assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE

  """
  (143) HOPWA Service
  """
  HOPWA_SERVICE

  """
  (210) HUD-VASH OTH Voucher Tracking
  """
  HUD_VASH_OTH_VOUCHER_TRACKING

  """
  Invalid Value
  """
  INVALID

  """
  (300) Moving On Assistance
  """
  MOVING_ON_ASSISTANCE

  """
  (161) PATH Referral
  """
  PATH_REFERRAL

  """
  (141) PATH Service
  """
  PATH_SERVICE

  """
  (162) RHY Referral
  """
  RHY_REFERRAL

  """
  (142) RHY Service Connections
  """
  RHY_SERVICE_CONNECTIONS

  """
  (152) SSVF Financial Assistance
  """
  SSVF_FINANCIAL_ASSISTANCE

  """
  (144) SSVF Service
  """
  SSVF_SERVICE
}

type ReferralPosting {
  assignedDate: ISO8601Date!
  chronic: Boolean
  denialNote: String
  denialReason: String
  hohName: String!
  householdSize: Int!
  id: ID!
  needsWheelchairAccessibleUnit: Boolean
  postingIdentifier: ID
  referralDate: ISO8601Date!
  referralIdentifier: ID
  referralNotes: String
  referralRequest: ReferralRequest
  referralResult: ReferralResult
  referredBy: String!
  referredFrom: String!
  resourceCoordinatorNotes: String
  score: Int
  status: ReferralPostingStatus!
  statusNote: String
  statusNoteUpdatedAt: ISO8601Date
  statusNoteUpdatedBy: String
  statusUpdatedAt: ISO8601Date
  statusUpdatedBy: String
}

"""
Referral Posting Status
"""
enum ReferralPostingStatus {
  """
  Accepted By Other Program
  """
  accepted_by_other_program_status

  """
  Accepted Pending
  """
  accepted_pending_status

  """
  Accepted
  """
  accepted_status

  """
  Assigned
  """
  assigned_status

  """
  Assigned To Other Program
  """
  assigned_to_other_program_status

  """
  Closed
  """
  closed_status

  """
  Denied Pending
  """
  denied_pending_status

  """
  Denied
  """
  denied_status

  """
  New
  """
  new_status

  """
  Not Selected
  """
  not_selected_status

  """
  Void
  """
  void_status
}

type ReferralPostingsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ReferralPosting!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

type ReferralRequest {
  id: ID!
  neededBy: String!
  requestedOn: String!
  requestorEmail: String!
  requestorName: String!
  requestorPhone: String!
  unitType: UnitTypeObject!
}

type ReferralRequestsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [ReferralRequest!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
4.20.D
"""
enum ReferralResult {
  """
  Invalid Value
  """
  INVALID

  """
  (1) Successful referral: client accepted
  """
  SUCCESSFUL_REFERRAL_CLIENT_ACCEPTED

  """
  (2) Unsuccessful referral: client rejected
  """
  UNSUCCESSFUL_REFERRAL_CLIENT_REJECTED

  """
  (3) Unsuccessful referral: provider rejected
  """
  UNSUCCESSFUL_REFERRAL_PROVIDER_REJECTED
}

"""
Related record type for a group of questions in an assessment
"""
enum RelatedRecordType {
  """
  CurrentLivingSituation
  """
  CURRENT_LIVING_SITUATION

  """
  DisabilityGroup
  """
  DISABILITY_GROUP

  """
  ExmploymentEducation
  """
  EMPLOYMENT_EDUCATION

  """
  Enrollment
  """
  ENROLLMENT

  """
  EnrollmentCoc
  """
  ENROLLMENT_COC

  """
  Exit
  """
  EXIT

  """
  HealthAndDv
  """
  HEALTH_AND_DV

  """
  IncomeBenefit
  """
  INCOME_BENEFIT

  """
  YouthEducationStatus
  """
  YOUTH_EDUCATION_STATUS
}

"""
3.15.1
"""
enum RelationshipToHoH {
  """
  (2) Child
  """
  CHILD

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) Other relative
  """
  OTHER_RELATIVE

  """
  (1) Self (head of household)
  """
  SELF_HEAD_OF_HOUSEHOLD

  """
  (3) Spouse or partner
  """
  SPOUSE_OR_PARTNER

  """
  (5) Unrelated household member
  """
  UNRELATED_HOUSEHOLD_MEMBER
}

"""
3.917.2
"""
enum ResidencePriorLengthOfStay {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) 90 days or more but less than one year
  """
  NUM_90_DAYS_OR_MORE_BUT_LESS_THAN_ONE_YEAR

  """
  (3) One month or more, but less than 90 days
  """
  ONE_MONTH_OR_MORE_BUT_LESS_THAN_90_DAYS

  """
  (10) One night or less
  """
  ONE_NIGHT_OR_LESS

  """
  (2) One week or more, but less than one month
  """
  ONE_WEEK_OR_MORE_BUT_LESS_THAN_ONE_MONTH

  """
  (5) One year or longer
  """
  ONE_YEAR_OR_LONGER

  """
  (11) Two to six nights
  """
  TWO_TO_SIX_NIGHTS
}

"""
3.02.2
"""
enum SSNDataQuality {
  """
  (2) Approximate or partial SSN reported
  """
  APPROXIMATE_OR_PARTIAL_SSN_REPORTED

  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (1) Full SSN reported
  """
  FULL_SSN_REPORTED

  """
  Invalid Value
  """
  INVALID
}

"""
Autogenerated input type of SaveAssessment
"""
input SaveAssessmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: AssessmentInput!
}

"""
Autogenerated return type of SaveAssessment.
"""
type SaveAssessmentPayload {
  assessment: Assessment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
HUD or Custom Service rendered
"""
type Service {
  FAAmount: Float
  client: Client!
  customDataElements: [CustomDataElement!]!
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateProvided: ISO8601Date!
  dateUpdated: ISO8601DateTime!
  enrollment: Enrollment!
  id: ID!
  movingOnOtherType: String
  otherTypeProvided: String
  recordType: RecordType
  referralOutcome: PATHReferralOutcome
  subTypeProvided: ServiceSubTypeProvided
  typeProvided: ServiceTypeProvided
  user: User
}

enum ServiceDetailType {
  BULK
  CLIENT
}

"""
HUD Service Input
"""
input ServiceInput {
  FAAmount: Float
  dateProvided: ISO8601Date
  enrollmentId: ID
  movingOnOtherType: String
  otherTypeProvided: String
  recordType: RecordType
  referralOutcome: PATHReferralOutcome
  subTypeProvided: ServiceSubTypeProvided
  typeProvided: ServiceTypeProvided
}

"""
HMIS Service Sorting Options
"""
enum ServiceSortOption {
  DATE_PROVIDED
}

"""
HUD Service TypeProvided:SubTypeProvided aggregate (V2.A, V2.B, V2.C)
"""
enum ServiceSubTypeProvided {
  """
  Invalid Value
  """
  INVALID

  """
  (12) Child care
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__CHILD_CARE

  """
  (2) Daily living services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__DAILY_LIVING_SERVICES

  """
  (6) Fiduciary and representative payee services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__FIDUCIARY_AND_REPRESENTATIVE_PAYEE_SERVICES

  """
  (1) Health care services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__HEALTH_CARE_SERVICES

  """
  (13) Housing counseling
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__HOUSING_COUNSELING

  """
  (5) Income support services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__INCOME_SUPPORT_SERVICES

  """
  (7) Legal services - child support
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_CHILD_SUPPORT

  """
  (8) Legal services - eviction prevention
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_EVICTION_PREVENTION

  """
  (11) Legal services - other
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OTHER

  """
  (9) Legal services - outstanding fines and penalties
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OUTSTANDING_FINES_AND_PENALTIES

  """
  (10) Legal services - restore / acquire driver's license
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_RESTORE_ACQUIRE_DRIVER_S_LICENSE

  """
  (3) Personal financial planning services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__PERSONAL_FINANCIAL_PLANNING_SERVICES

  """
  (4) Transportation services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS__TRANSPORTATION_SERVICES

  """
  (3) Educational assistance
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__EDUCATIONAL_ASSISTANCE

  """
  (2) Employment and training services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (4) Health care services
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__HEALTH_CARE_SERVICES

  """
  (1) VA vocational and rehabilitation counseling
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS__VA_VOCATIONAL_AND_REHABILITATION_COUNSELING

  """
  (10) Child care
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__CHILD_CARE

  """
  (4) Fiduciary and representative payee services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__FIDUCIARY_AND_REPRESENTATIVE_PAYEE_SERVICES

  """
  (11) Housing counseling
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__HOUSING_COUNSELING

  """
  (3) Income support services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__INCOME_SUPPORT_SERVICES

  """
  (5) Legal services - child support
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_CHILD_SUPPORT

  """
  (6) Legal services - eviction prevention
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_EVICTION_PREVENTION

  """
  (9) Legal services - other
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OTHER

  """
  (7) Legal services - outstanding fines and penalties
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_OUTSTANDING_FINES_AND_PENALTIES

  """
  (8) Legal services - restore / acquire driver's license
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__LEGAL_SERVICES_RESTORE_ACQUIRE_DRIVER_S_LICENSE

  """
  (1) Personal financial planning services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__PERSONAL_FINANCIAL_PLANNING_SERVICES

  """
  (2) Transportation services
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS__TRANSPORTATION_SERVICES
}

type ServiceType {
  category: String!
  dateCreated: ISO8601DateTime!
  dateUpdated: ISO8601DateTime!
  hudRecordType: RecordType
  hudTypeProvided: ServiceTypeProvided
  id: ID!
  name: String!
  user: User
}

"""
HUD Service RecordType:TypeProvided aggregate (P1.2, R14.2, W1.2, V2.2, W2.3, V3.3, P2.2, 4.14, V8.1, C2.2)
"""
enum ServiceTypeProvided {
  """
  (200) BedNight
  """
  BED_NIGHT__BED_NIGHT

  """
  (7) Mortgage assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE__MORTGAGE_ASSISTANCE

  """
  (1) Rental assistance
  """
  HOPWA_FINANCIAL_ASSISTANCE__RENTAL_ASSISTANCE

  """
  (2) Security deposits
  """
  HOPWA_FINANCIAL_ASSISTANCE__SECURITY_DEPOSITS

  """
  (3) Utility deposits
  """
  HOPWA_FINANCIAL_ASSISTANCE__UTILITY_DEPOSITS

  """
  (4) Utility payments
  """
  HOPWA_FINANCIAL_ASSISTANCE__UTILITY_PAYMENTS

  """
  (1) Adult day care and personal assistance
  """
  HOPWA_SERVICE__ADULT_DAY_CARE_AND_PERSONAL_ASSISTANCE

  """
  (2) Case management
  """
  HOPWA_SERVICE__CASE_MANAGEMENT

  """
  (3) Child care
  """
  HOPWA_SERVICE__CHILD_CARE

  """
  (4) Criminal justice/legal services
  """
  HOPWA_SERVICE__CRIMINAL_JUSTICE_LEGAL_SERVICES

  """
  (5) Education
  """
  HOPWA_SERVICE__EDUCATION

  """
  (6) Employment and training services
  """
  HOPWA_SERVICE__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (7) Food/meals/nutritional services
  """
  HOPWA_SERVICE__FOOD_MEALS_NUTRITIONAL_SERVICES

  """
  (8) Health/medical care
  """
  HOPWA_SERVICE__HEALTH_MEDICAL_CARE

  """
  (9) Life skills training
  """
  HOPWA_SERVICE__LIFE_SKILLS_TRAINING

  """
  (10) Mental health care/counseling
  """
  HOPWA_SERVICE__MENTAL_HEALTH_CARE_COUNSELING

  """
  (14) Other HOPWA funded service
  """
  HOPWA_SERVICE__OTHER_HOPWA_FUNDED_SERVICE

  """
  (11) Outreach and/or engagement
  """
  HOPWA_SERVICE__OUTREACH_AND_OR_ENGAGEMENT

  """
  (12) Substance abuse services/treatment
  """
  HOPWA_SERVICE__SUBSTANCE_ABUSE_SERVICES_TREATMENT

  """
  (13) Transportation
  """
  HOPWA_SERVICE__TRANSPORTATION

  """
  (12) Other
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__OTHER

  """
  (1) Referral package forwarded to PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__REFERRAL_PACKAGE_FORWARDED_TO_PHA

  """
  (10) Veteran exited - family maintained the voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_FAMILY_MAINTAINED_THE_VOUCHER

  """
  (11) Veteran exited - prior to ever receiving a voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_PRIOR_TO_EVER_RECEIVING_A_VOUCHER

  """
  (9) Veteran exited - voucher was returned
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VETERAN_EXITED_VOUCHER_WAS_RETURNED

  """
  (2) Voucher denied by PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_DENIED_BY_PHA

  """
  (5) Voucher in use - veteran moved into housing
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_IN_USE_VETERAN_MOVED_INTO_HOUSING

  """
  (3) Voucher issued by PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_ISSUED_BY_PHA

  """
  (4) Voucher revoked or expired
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_REVOKED_OR_EXPIRED

  """
  (7) Voucher was administratively absorbed by new PHA
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_ADMINISTRATIVELY_ABSORBED_BY_NEW_PHA

  """
  (8) Voucher was converted to Housing Choice Voucher
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_CONVERTED_TO_HOUSING_CHOICE_VOUCHER

  """
  (6) Voucher was ported locally
  """
  HUD_VASH_OTH_VOUCHER_TRACKING__VOUCHER_WAS_PORTED_LOCALLY

  """
  Invalid Value
  """
  INVALID

  """
  (2) Financial assistance for Moving On (e.g., security deposit, moving expenses)
  """
  MOVING_ON_ASSISTANCE__FINANCIAL_ASSISTANCE_FOR_MOVING_ON_E_G_SECURITY_DEPOSIT_MOVING_EXPENSES

  """
  (4) Housing referral/placement
  """
  MOVING_ON_ASSISTANCE__HOUSING_REFERRAL_PLACEMENT

  """
  (3) Non-financial assistance for Moving On (e.g., housing navigation, transition support)
  """
  MOVING_ON_ASSISTANCE__NON_FINANCIAL_ASSISTANCE_FOR_MOVING_ON_E_G_HOUSING_NAVIGATION_TRANSITION_SUPPORT

  """
  (5) Other
  """
  MOVING_ON_ASSISTANCE__OTHER

  """
  (1) Subsidized housing application assistance
  """
  MOVING_ON_ASSISTANCE__SUBSIDIZED_HOUSING_APPLICATION_ASSISTANCE

  """
  (1) Community mental health
  """
  PATH_REFERRAL__COMMUNITY_MENTAL_HEALTH

  """
  (5) Educational services
  """
  PATH_REFERRAL__EDUCATIONAL_SERVICES

  """
  (9) Employment assistance
  """
  PATH_REFERRAL__EMPLOYMENT_ASSISTANCE

  """
  (6) Housing services
  """
  PATH_REFERRAL__HOUSING_SERVICES

  """
  (8) Income assistance
  """
  PATH_REFERRAL__INCOME_ASSISTANCE

  """
  (4) Job training
  """
  PATH_REFERRAL__JOB_TRAINING

  """
  (10) Medical insurance
  """
  PATH_REFERRAL__MEDICAL_INSURANCE

  """
  (7) Permanent housing
  """
  PATH_REFERRAL__PERMANENT_HOUSING

  """
  (3) Primary health/dental care
  """
  PATH_REFERRAL__PRIMARY_HEALTH_DENTAL_CARE

  """
  (2) Substance use treatment
  """
  PATH_REFERRAL__SUBSTANCE_USE_TREATMENT

  """
  (11) Temporary housing
  """
  PATH_REFERRAL__TEMPORARY_HOUSING

  """
  (6) Case management
  """
  PATH_SERVICE__CASE_MANAGEMENT

  """
  (14) Clinical assessment
  """
  PATH_SERVICE__CLINICAL_ASSESSMENT

  """
  (4) Community mental health
  """
  PATH_SERVICE__COMMUNITY_MENTAL_HEALTH

  """
  (3) Habilitation/rehabilitation
  """
  PATH_SERVICE__HABILITATION_REHABILITATION

  """
  (10) Housing eligibility determination
  """
  PATH_SERVICE__HOUSING_ELIGIBILITY_DETERMINATION

  """
  (8) Housing minor renovation
  """
  PATH_SERVICE__HOUSING_MINOR_RENOVATION

  """
  (9) Housing moving assistance
  """
  PATH_SERVICE__HOUSING_MOVING_ASSISTANCE

  """
  (12) One-time rent for eviction prevention
  """
  PATH_SERVICE__ONE_TIME_RENT_FOR_EVICTION_PREVENTION

  """
  (7) Residential supportive services
  """
  PATH_SERVICE__RESIDENTIAL_SUPPORTIVE_SERVICES

  """
  (1) Re-engagement
  """
  PATH_SERVICE__RE_ENGAGEMENT

  """
  (2) Screening
  """
  PATH_SERVICE__SCREENING

  """
  (11) Security deposits
  """
  PATH_SERVICE__SECURITY_DEPOSITS

  """
  (5) Substance use treatment
  """
  PATH_SERVICE__SUBSTANCE_USE_TREATMENT

  """
  (2) Community service/service learning (CSL)
  """
  RHY_SERVICE_CONNECTIONS__COMMUNITY_SERVICE_SERVICE_LEARNING_CSL

  """
  (7) Criminal justice /legal services
  """
  RHY_SERVICE_CONNECTIONS__CRIMINAL_JUSTICE_LEGAL_SERVICES

  """
  (5) Education
  """
  RHY_SERVICE_CONNECTIONS__EDUCATION

  """
  (6) Employment and training services
  """
  RHY_SERVICE_CONNECTIONS__EMPLOYMENT_AND_TRAINING_SERVICES

  """
  (14) Health/medical care
  """
  RHY_SERVICE_CONNECTIONS__HEALTH_MEDICAL_CARE

  """
  (26) Home-based Services
  """
  RHY_SERVICE_CONNECTIONS__HOME_BASED_SERVICES

  """
  (8) Life skills training
  """
  RHY_SERVICE_CONNECTIONS__LIFE_SKILLS_TRAINING

  """
  (10) Parenting education for youth with children
  """
  RHY_SERVICE_CONNECTIONS__PARENTING_EDUCATION_FOR_YOUTH_WITH_CHILDREN

  """
  (12) Post-natal care
  """
  RHY_SERVICE_CONNECTIONS__POST_NATAL_CARE

  """
  (27) Post-natal newborn care (wellness exams; immunizations)
  """
  RHY_SERVICE_CONNECTIONS__POST_NATAL_NEWBORN_CARE_WELLNESS_EXAMS_IMMUNIZATIONS

  """
  (13) Pre-natal care
  """
  RHY_SERVICE_CONNECTIONS__PRE_NATAL_CARE

  """
  (28) STD Testing
  """
  RHY_SERVICE_CONNECTIONS__STD_TESTING

  """
  (29) Street-based Services
  """
  RHY_SERVICE_CONNECTIONS__STREET_BASED_SERVICES

  """
  (18) Substance use disorder/Prevention Services
  """
  RHY_SERVICE_CONNECTIONS__SUBSTANCE_USE_DISORDER_PREVENTION_SERVICES

  """
  (17) Substance use disorder treatment
  """
  RHY_SERVICE_CONNECTIONS__SUBSTANCE_USE_DISORDER_TREATMENT

  """
  (10) Child care
  """
  SSVF_FINANCIAL_ASSISTANCE__CHILD_CARE

  """
  (14) Emergency housing assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__EMERGENCY_HOUSING_ASSISTANCE

  """
  (15) Extended Shallow Subsidy - Rental Assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__EXTENDED_SHALLOW_SUBSIDY_RENTAL_ASSISTANCE

  """
  (16) Food Assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__FOOD_ASSISTANCE

  """
  (12) General housing stability assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__GENERAL_HOUSING_STABILITY_ASSISTANCE

  """
  (11) General housing stability assistance - emergency supplies
  """
  SSVF_FINANCIAL_ASSISTANCE__GENERAL_HOUSING_STABILITY_ASSISTANCE_EMERGENCY_SUPPLIES

  """
  (5) Moving costs
  """
  SSVF_FINANCIAL_ASSISTANCE__MOVING_COSTS

  """
  (1) Rental assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__RENTAL_ASSISTANCE

  """
  (2) Security deposit
  """
  SSVF_FINANCIAL_ASSISTANCE__SECURITY_DEPOSIT

  """
  (8) Transportation services: tokens/vouchers
  """
  SSVF_FINANCIAL_ASSISTANCE__TRANSPORTATION_SERVICES_TOKENS_VOUCHERS

  """
  (9) Transportation services: vehicle repair/maintenance
  """
  SSVF_FINANCIAL_ASSISTANCE__TRANSPORTATION_SERVICES_VEHICLE_REPAIR_MAINTENANCE

  """
  (3) Utility deposit
  """
  SSVF_FINANCIAL_ASSISTANCE__UTILITY_DEPOSIT

  """
  (4) Utility fee payment assistance
  """
  SSVF_FINANCIAL_ASSISTANCE__UTILITY_FEE_PAYMENT_ASSISTANCE

  """
  (4) Assistance obtaining/coordinating other public benefits
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_COORDINATING_OTHER_PUBLIC_BENEFITS

  """
  (3) Assistance obtaining VA benefits
  """
  SSVF_SERVICE__ASSISTANCE_OBTAINING_VA_BENEFITS

  """
  (2) Case management services
  """
  SSVF_SERVICE__CASE_MANAGEMENT_SERVICES

  """
  (5) Direct provision of other public benefits
  """
  SSVF_SERVICE__DIRECT_PROVISION_OF_OTHER_PUBLIC_BENEFITS

  """
  (6) Other (non-TFA) supportive service approved by VA
  """
  SSVF_SERVICE__OTHER_NON_TFA_SUPPORTIVE_SERVICE_APPROVED_BY_VA

  """
  (1) Outreach services
  """
  SSVF_SERVICE__OUTREACH_SERVICES
}

type ServicesPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Service!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated input type of SubmitAssessment
"""
input SubmitAssessmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: AssessmentInput!
}

"""
Autogenerated return type of SubmitAssessment.
"""
type SubmitAssessmentPayload {
  assessment: Assessment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of SubmitForm
"""
input SubmitFormInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  input: FormInput!
}

"""
Autogenerated return type of SubmitForm.
"""
type SubmitFormPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  record: SubmitFormResult
}

"""
Union type of allowed records for form submission response
"""
union SubmitFormResult = Client | File | Funder | Inventory | Organization | Project | ProjectCoc | ReferralRequest | Service

"""
Autogenerated input type of SubmitHouseholdAssessments
"""
input SubmitHouseholdAssessmentsInput {
  assessmentIds: [ID!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Whether warnings have been confirmed
  """
  confirmed: Boolean

  """
  Validate assessments but don't submit them
  """
  validateOnly: Boolean
}

"""
Autogenerated return type of SubmitHouseholdAssessments.
"""
type SubmitHouseholdAssessmentsPayload {
  assessments: [Assessment!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
2.02.8
"""
enum TargetPopulation {
  """
  (1) Domestic violence victims
  """
  DOMESTIC_VIOLENCE_VICTIMS

  """
  Invalid Value
  """
  INVALID

  """
  (4) Not applicable
  """
  NOT_APPLICABLE

  """
  (3) Persons with HIV/AIDS
  """
  PERSONS_WITH_HIV_AIDS
}

"""
3.917.4
"""
enum TimesHomelessPastThreeYears {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  (4) Four or more times
  """
  FOUR_OR_MORE_TIMES

  """
  Invalid Value
  """
  INVALID

  """
  (1) One time
  """
  ONE_TIME

  """
  (3) Three times
  """
  THREE_TIMES

  """
  (2) Two times
  """
  TWO_TIMES
}

"""
2.02.C
"""
enum TrackingMethod {
  """
  (0) Entry/Exit Date
  """
  ENTRY_EXIT_DATE

  """
  Invalid Value
  """
  INVALID

  """
  (3) Night-by-Night
  """
  NIGHT_BY_NIGHT
}

type Unit {
  dateCreated: ISO8601DateTime!
  dateUpdated: ISO8601DateTime!
  endDate: ISO8601Date
  id: ID!
  name: String
  project: Project
  startDate: ISO8601Date!
  unitSize: Int
  unitType: UnitTypeObject
  user: User!
}

input UnitInput {
  """
  Number of units to create
  """
  count: Int

  """
  Prefix for unit names
  """
  prefix: String
  projectId: ID!
  unitTypeId: ID
}

type UnitTypeObject {
  bedType: InventoryBedType
  dateCreated: ISO8601DateTime!
  dateUpdated: ISO8601DateTime!
  description: String
  id: ID!
  unitSize: Int
}

type UnitsPaginated {
  hasMoreAfter: Boolean!
  hasMoreBefore: Boolean!
  limit: Int!
  nodes: [Unit!]!
  nodesCount: Int!
  offset: Int!
  pagesCount: Int!
}

"""
Autogenerated input type of UpdateClientImage
"""
input UpdateClientImageInput {
  clientId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  imageBlobId: ID!
}

"""
Autogenerated return type of UpdateClientImage.
"""
type UpdateClientImagePayload {
  client: Client

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
}

"""
Autogenerated input type of UpdateRelationshipToHoH
"""
input UpdateRelationshipToHoHInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Whether user has confirmed the action
  """
  confirmed: Boolean
  enrollmentId: ID!
  relationshipToHoH: RelationshipToHoH!
}

"""
Autogenerated return type of UpdateRelationshipToHoH.
"""
type UpdateRelationshipToHoHPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enrollment: Enrollment
  errors: [ValidationError!]!
}

"""
Autogenerated input type of UpdateService
"""
input UpdateServiceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  input: ServiceInput!
}

"""
Autogenerated return type of UpdateService.
"""
type UpdateServicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  service: Service
}

"""
Autogenerated input type of UpdateUnits
"""
input UpdateUnitsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String
  projectId: ID!
  unitIds: [ID!]!
}

"""
Autogenerated return type of UpdateUnits.
"""
type UpdateUnitsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [ValidationError!]!
  units: [Unit!]!
}

"""
HUD User
"""
type User {
  dateCreated: ISO8601DateTime!
  dateDeleted: ISO8601DateTime
  dateUpdated: ISO8601DateTime!
  id: ID!
  name: String!
}

type ValidationError {
  attribute: String!
  data: JsonObject
  fullMessage: String!

  """
  Unique ID for this error
  """
  id: String

  """
  Link ID of form item if this error is linked to a specific item
  """
  linkId: String
  message: String!
  readableAttribute: String

  """
  ID of the AR record this error pertains to
  """
  recordId: ID
  section: String
  severity: ValidationSeverity!
  type: ValidationType!
}

enum ValidationSeverity {
  error
  warning
}

enum ValidationType {
  data_not_collected
  information
  invalid
  not_allowed
  not_found
  out_of_range
  required
  server_error
}

"""
Bound applied to the response value. The bound may or may not be dependent on another questions answer.
"""
type ValueBound {
  """
  Unique identifier for this bound
  """
  id: String

  """
  Value to offset the comparison value. Can be positive or negative. If date, offset is applied as number of days.
  """
  offset: Int

  """
  Link ID of dependent question, if this items value should be compared to another items value
  """
  question: String

  """
  Severity of bound. If error, user will be unable to submit a value that does not meet this condition.
  """
  severity: ValidationSeverity!
  type: BoundType!
  valueDate: ISO8601Date
  valueNumber: Int
}

"""
Autogenerated return type of VoidReferralRequest.
"""
type VoidReferralRequestPayload {
  errors: [ValidationError!]!
  record: ReferralRequest
}

"""
C1.1
"""
enum WellbeingAgreement {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (2) Neither agree nor disagree
  """
  NEITHER_AGREE_NOR_DISAGREE

  """
  (3) Somewhat agree
  """
  SOMEWHAT_AGREE

  """
  (1) Somewhat disagree
  """
  SOMEWHAT_DISAGREE

  """
  (4) Strongly agree
  """
  STRONGLY_AGREE

  """
  (0) Strongly disagree
  """
  STRONGLY_DISAGREE
}

"""
4.11.A
"""
enum WhenDVOccurred {
  """
  (8) Client doesn't know
  """
  CLIENT_DOESN_T_KNOW

  """
  (9) Client refused
  """
  CLIENT_REFUSED

  """
  (99) Data not collected
  """
  DATA_NOT_COLLECTED

  """
  Invalid Value
  """
  INVALID

  """
  (4) One year or more
  """
  ONE_YEAR_OR_MORE

  """
  (3) Six months to one year ago (excluding one year exactly)
  """
  SIX_MONTHS_TO_ONE_YEAR_AGO_EXCLUDING_ONE_YEAR_EXACTLY

  """
  (2) Three to six months ago (excluding six months exactly)
  """
  THREE_TO_SIX_MONTHS_AGO_EXCLUDING_SIX_MONTHS_EXACTLY

  """
  (1) Within the past three months
  """
  WITHIN_THE_PAST_THREE_MONTHS
}
