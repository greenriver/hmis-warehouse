wb = xlsx_package.workbook
wb_styles = wb.styles
header_style = wb_styles.add_style({ sz: 14 })
th_style = wb_styles.add_style(
  {
    bg_color: 'f2f2f2',
    b: true,
    border: { style: :thin, color: 'FFFFFF', edges: [:bottom, :top] },
  },
)
wb_styles.add_style(
  {
    border: { style: :thin, color: 'FFFFFF', edges: [:bottom, :top] },
  },
)
wb.add_worksheet(name: @report.title) do |sheet|
  sheet.add_row(['Organization', 'Project', 'Item', 'Replaces', 'With', 'When', 'URL'], style: th_style)
  @report.data.each do |organization_name, projects|
    projects.each do |project_name, data|
      data[:projects].each do |object|
        object.import_overrides.each do |override|
          sheet.add_row([organization_name, project_name, override.file_name, override.replaces_column, override.describe_with, override.describe_when, project_url(data[:project])])
        end
      end

      data[:inventories].each do |object|
        object.import_overrides.each do |override|
          sheet.add_row([organization_name, project_name, override.file_name, override.replaces_column, override.describe_with, override.describe_when, project_url(data[:project])])
        end
      end

      data[:project_cocs].each do |object|
        object.import_overrides.each do |override|
          sheet.add_row([organization_name, project_name, override.file_name, override.replaces_column, override.describe_with, override.describe_when, project_url(data[:project])])
        end
      end

      data[:funders].each do |object|
        object.import_overrides.each do |override|
          sheet.add_row([organization_name, project_name, override.file_name, override.replaces_column, override.describe_with, override.describe_when, project_url(data[:project])])
        end
      end

      data[:affiliations].each do |object|
        object.import_overrides.each do |override|
          sheet.add_row([organization_name, project_name, override.file_name, override.replaces_column, override.describe_with, override.describe_when, project_url(data[:project])])
        end
      end
    end
  end
end
@report.manual_data.each do |title, data|
  wb.add_worksheet(name: title) do |sheet|
    headers_added = false
    hmis_fields = []
    data.each do |organization_name, projects|
      projects.each do |project_name, objects|
        objects.each do |object|
          unless headers_added
            hmis_fields = object.class.hmis_configuration(version: '2022').keys
            sheet.add_row(['Organization', 'Project'] + hmis_fields + ['URL'])
            headers_added = true
          end
          sheet.add_row([organization_name, project_name, *object.values_at(*hmis_fields), project_url(object.project.id)])
        end
      end
    end
  end
end
