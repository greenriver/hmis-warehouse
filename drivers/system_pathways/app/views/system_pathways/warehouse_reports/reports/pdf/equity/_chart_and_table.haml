- document_chart_name = "equity#{key.camelize}"
#equity-controller.equity.mt-4{ data: { controller: 'chart-loader', chart: "document.#{document_chart_name}" }}
  - url = URI(@report.chart_data_path('equity'))
  .d-flex.mb-6
    - chart_header = "#{@pathways_chart.client_word} by "
    %h3
      = chart_header
      %span{ data: { 'chart-loader-target' => 'header' }} #{label}

    - url.query = show_filter.for_params.merge(demographic_breakdown: key).to_query
    - data = { action: 'click->chart-loader#loadChartData', 'chart-loader-target' => 'changer', 'menu-item' => key, 'table-name' => "Table - #{chart_header} #{label}" }
    - classes = ['hide', 'jChartLoaderItemEquity']
    = link_to(label, url.to_s, data: data, class: classes)
  %div{id: "equity-chart-#{key}-wrapper", data: { 'chart-loader-target' => 'wrapper' }}
    .mb-6{id: "equity-chart-#{key}", data: { 'chart-loader-target' => 'chart' }}
    %div{id: "equity-table-#{key}", data: { 'chart-loader-target' => 'table' }}

  = content_for :page_js do
    :javascript
      document['#{document_chart_name}'] = bb.generate({
        data: {
          columns: [],
          type: 'bar',
          x: 'x',
          groups: [],
          labels: {
            format: function(v, id, i, j) {
              if (v == 0) return '';
              if (! id) return v;

              let numbers = d3.map(this.data(), d => d.values[i].value);
              let total = numbers.reduce((partialSum, a) => partialSum + a, 0);
              let percentage = v/total;
              //console.log(i,j, d3.map(j, el => el.getBBox().width)[i])
              if (percentage < 0.15) {
                return '';
              }
              return d3.format('.0%')(percentage);
            },
            centered: true,
          }
        },
        legend: {
          position: "right"
        },
        tooltip: {
          order: '', // Enforce group order
          format: {
            value: (value, ratio, id, index) => d3.format(",")(value),
          },
          contents: (d, defaultTitleFormat, defaultValueFormat, color) => {
            const tooltip_title = defaultTitleFormat(d[0].x)
            let total_count = 0
            $(d).each(i => {
              const row = d[i];
              if (row != null) {
                total_count += row.value;
              }
            });
            let html = "<table class='bb-tooltip'>"
            html += "<thead>"
            html += `<tr><th colspan='3'>${tooltip_title}</th></tr>`
            html += "<tr><th></th><th>Clients</th><th>Percent</th></tr>"
            html += "</thead>"
            html += "<tbody>"
            $(d).each(i => {
              const row = d[i];
              if (row != null) {
                const bg_color = color(row.id);
                html += `<tr class='bb-tooltip-name-'>`;
                const box = `<td class='name'><svg><rect style='fill:${bg_color}' width='10' height='10'></rect></svg>${row.name}</td>`;
                const value = `<td>${d3.format(",")(row.value)}</td>`;
                const percent = `<td>${d3.format(".0%")(row.value / total_count)}</td>`;
                html += box;
                html += value;
                html += percent;
                return html += "</tr>";
              }
            });
            html += "</tbody>";
            html += "<tfoot>";
            html += `<tr><th>Total</th><th>${d3.format(",")(total_count)}</th><th></th></tr>`;
            html += "</tfoot>";
            html += '</table>';
            return html;

          }

        },
        bindto: '#equity-chart-#{key}',
        size: {
          height: 100,
        },
        bar: {
          padding: 5,
        },
        axis: {
          rotated: true,
          x: {
            type: 'category'
          }
        },
        grid: {
          x: {
            show: true
          }
        }
      });
