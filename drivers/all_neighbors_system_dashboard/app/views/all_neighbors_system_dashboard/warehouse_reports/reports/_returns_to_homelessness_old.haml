- if params[:fake].present? && Rails.env.development?
  - start_date = (DateTime.current - 3.years).beginning_of_month
  - end_date = DateTime.current.beginning_of_month
  - all_data = AllNeighborsSystemDashboard::FakeReturnsToHomelessness.new(start_date, end_date)
- else
  - all_data = AllNeighborsSystemDashboard::ReturnsToHomelessness.new(@report)

- chart_data = all_data.stacked_data
- stacked_ids = chart_data.map { |d| chart_id(tab[:id], "stacked_#{d[:id]}") }

%h2{class: css_namespace('all', 'tab_name')}= tab[:name]
.border.my-7.p-4
  %h4.mt-0 Select Universe
  .row.align-items-center
    .col-xs-12.col-md-8
      .d-flex
        -# .pr-6= render 'select_filter', tab: tab, name: 'project_type', label: 'Project Type', options: all_data.project_types_with_data
        -# = render 'select_filter', tab: tab, name: 'count_level', label: 'Count Level', options: all_data.count_levels

    -# .col-xs-12.col-md-4
    -#   = render 'date_range_filter', tab: tab, name: 'date_range', label: 'Date Range', start_date: start_date.strftime("%b %Y"), end_date: end_date.strftime("%b %Y")
.mb-7= render 'filter_labels', tab: tab, labels: ['project_type', 'count_level', 'date_range']

.border.my-7
  .pt-6.px-5.border-bottom
    .d-flex.justify-content-between
      %h3 Returns to Homelessness within 12 months
      %small * after exiting to permanent destination
    %div{id: chart_id(tab[:id], 'bar')}
- if false # Disabled
  - table_id = table_id(tab[:id], 'returns_to_homelessness')
  .p-4.border-top
    = link_to "javascript:void(0)", data: {toggle: 'collapse', target: "##{table_id}"}, role: 'button', aria: {expanded: 'false', controls: table_id}, class: "d-flex justify-content-between align-items-center w-100 #{css_namespace(tab[:id], 'table_toggle')}" do
      %span Table - Return to Homelessness by Cohort Year
      %i.icon-angle-down
  .collapse{id: table_id}
    .border-top
      = render 'returns_to_homelessness_table', data: all_data.bars, id: table_id
- if false # Removed demographic charts for now
  = render 'stacked_charts', data: chart_data, group: 'Racial Composition', filter_label: 'none', filter: 'demographics', filter_data: all_data.demographics, show_chart_titles: true, hint: '* Exited to permanent destinations', tab: tab, legend_padding: '150px', description: false


- content_for :page_js do
  :javascript
    $(document).ready(function() {
      console.debug('Returns To Homelessness -----------------')
      var data = #{chart_data.to_json.html_safe}
      var barData = #{all_data.bars.to_json.html_safe}
      var stackedIds = #{stacked_ids.to_json.html_safe}
      console.debug(data, barData, stackedIds)

      var charts = data.map(function(d, i) {
        return {
          chart: AllNeighborsSystemDashboardRTHStack,
          data: d,
          selector: '#'+stackedIds[i],
          options: {
            legend: data.length === i+1 ? {selector: '#'+stackedIds[i]+'_legend'} : false,
          }
        }
      })

      var filterConfig = [
        {
          name: 'projectType',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'project_type')}'
        },
        {
          name: 'countLevel',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'count_level')}'
        },
        {
          name: 'dateRange',
          type: 'dateRange',
          selector: '##{filter_id(tab[:id], 'date_range')} input'
        }
      ]

      var labelConfig = [
        {
          name: 'projectType',
          selector: '.#{filter_label_id(tab[:id], 'project_type')}'
        },
        {
          name: 'countLevel',
          selector: '.#{filter_label_id(tab[:id], 'count_level')}'
        },
        {
          name: 'dateRange',
          selector: '.#{filter_label_id(tab[:id], 'date_range')}'
        },
      ]

      var filters = new AllNeighborsSystemDashboardFilters(filterConfig, charts, labelConfig)
      filters.test()
    })
