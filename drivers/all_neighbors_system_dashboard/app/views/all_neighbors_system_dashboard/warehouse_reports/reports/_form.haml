- url = polymorphic_path(@report.report_path_array)
- alert = 'Included projects are limited by selected CoCs, and selected Funding Sources.'


= simple_form_for @filter, as: :filters, url: url, data: { controller: 'filter-projects' } do |f|
  - content_for :filters_col_full do
    .row.mb-4
      .col-sm-3
        = f.input :start, as: :date_picker, label: 'Start Date', required: true
      .col-sm-3
        = f.input :end, as: :date_picker, label: 'End Date', required: true
      .col-sm-6
        -#= f.input :coc_codes, collection: @filter.coc_code_options_for_select(user: current_user), as: :select_two, input_html: {multiple: true, placeholder: 'Choose CoCs', data: {'filter-projects-target' => 'cocCodes', 'action': 'change->filter-projects#update'}}, label: 'CoC Codes', required: true
    = render 'hud_reports/project_filter', f: f, api_projects_parameters: { project_types: @filter.default_project_type_codes }, alert: alert, show_organization_picker: true

    %h2= _('Additional Report Details')
    .row
      .col-sm-6
        = f.input :secondary_project_group_ids, as: :select_two, collection: @filter.project_groups_options_for_select(user: current_user), input_html: { multiple: true, data: {placeholder: 'Choose Project Groups' }}, include_blank: false, label: _('Tracked Project Groups')
      .col-sm-6
        = f.input :secondary_project_ids, collection: [], as: :grouped_select_two, group_method: :last, input_html: { multiple: true, placeholder: 'Choose Projects', data: { 'filter-projects-target' => 'projects', action: 'change->filter-projects#update', 'collection-path' => api_projects_path(selected_project_ids: @filter.secondary_project_ids, project_types: [:ca]) } }, label: _('Associated CE Projects')

    %h2 Limits
    .row.mt-4
      - @sections.in_groups(2).each do |sections|
        .col-md-6
          - sections.compact.each do |section|
            - next unless section
            - data = {'funding_sources': {'filter-projects-target' => 'funderIds', 'action': 'change->filter-projects#update'}}
            .form-filters-section-prs1
              = render 'filters/filter_controls/section_form_fields',
                section: section, f: f, data: data
  - content_for :filter_actions do
    = f.submit 'Queue Report', class: ['btn', 'btn-primary'], data: { 'filter-projects-target' => 'submitButton' }

  = render 'warehouse_reports/filters', f:f
