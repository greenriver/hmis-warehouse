- if params[:fake].present? && Rails.env.development?
  - start_date = (DateTime.current - 3.years).beginning_of_month
  - end_date = DateTime.current.beginning_of_month
  - all_data = AllNeighborsSystemDashboard::FakeReturnsToHomelessness.new(start_date, end_date)
- else
  - all_data = AllNeighborsSystemDashboard::ReturnsToHomelessness.new(@report)
  - start_date = @report.filter.start_date
  - end_date = @report.filter.end_date
- returns_data = all_data.returns_data
- debug = params[:debug].present? || Rails.env.development?

%h2{class: css_namespace('all', 'tab_name')}= tab[:name]
.border.my-7.p-4
  %h4.mt-0 Select Universe
  .row.align-items-center
    .col-xs-12.col-md-8
      .d-flex
        .pr-6= render 'select_filter', tab: tab, name: 'project_type', label: 'Project Type', options: all_data.project_types_with_data
        .pr-6= render 'select_filter', tab: tab, name: 'count_level', label: 'Count Level', options: all_data.count_levels
        = render 'select_filter', tab: tab, name: 'demographics', label: 'Demographics', options: ['All'] + all_data.demographics

    .col-xs-12.col-md-4
      = render 'date_range_filter', tab: tab, name: 'date_range', label: 'Date Range', start_date: start_date.strftime("%b %Y"), end_date: end_date.strftime("%b %Y")
.mb-7= render 'filter_labels', tab: tab, labels: ['project_type', 'count_level', 'date_range']

- if debug
  .well
    = link_to 'Debug page ->', debug_all_neighbors_system_dashboard_warehouse_reports_report_path(@report, {project_type: 'All', count_level: 'Individuals', group: 'monthly_counts'})

.border.my-7
  .pt-6.px-5.border-bottom
    .d-flex.justify-content-between
      %h3 Returns to Homelessness within 12 months
      %small * after exiting to permanent destination
    %div{id: chart_id(tab[:id], 'bar')}
-# = debug returns_data
-# = console

-# = render 'donuts', tab: tab, donut_data: returns_data, filter_label: 'date_range'

.mb-12.pb-12


- content_for :page_js do
  :javascript
    $(document).ready(function() {
      console.debug('Returns To Homelessness -----------------')
      var data = #{returns_data.to_json.html_safe}

      var chart_selector = "#{chart_id(tab[:id], 'bar')}";
      console.debug(data, chart_selector)

      var charts = [
        {
          chart: AllNeighborsSystemDashboardRTHStack,
          data: data,
          selector: '#' + chart_selector,
          options: {
            legend: {selector: '#'+ chart_selector +'_legend'},
          }
        }
      ]

      var filterConfig = [
        {
          name: 'projectType',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'project_type')}'
        },
        {
          name: 'countLevel',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'count_level')}'
        },
        {
          name: 'demographics',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'demographics')}'
        },
        {
          name: 'dateRange',
          type: 'dateRange',
          selector: '##{filter_id(tab[:id], 'date_range')} input'
        }
      ]

      var labelConfig = [
        {
          name: 'projectType',
          selector: '.#{filter_label_id(tab[:id], 'project_type')}'
        },
        {
          name: 'countLevel',
          selector: '.#{filter_label_id(tab[:id], 'count_level')}'
        },
        {
          name: 'demographics',
          selector: '.#{filter_label_id(tab[:id], 'demographic')}'
        },
        {
          name: 'dateRange',
          selector: '.#{filter_label_id(tab[:id], 'date_range')}'
        },
      ]

      var filters = new AllNeighborsSystemDashboardFilters(filterConfig, charts, labelConfig)
      filters.test()


    })
