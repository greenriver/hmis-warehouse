- all_data = AllNeighborsSystemDashboard::ReturnsToHomelessness.new(@report)

- chart_data = all_data.stacked_data
- stacked_ids = chart_data.map { |d| chart_id(tab[:id], "stacked_#{d[:id]}") }

%h2{class: css_namespace('all', 'tab_name')} Returns To Homelessness
.border.my-7
  .p-4.border-bottom
    .d-flex.justify-content-between
      %h3 Returns to Homelessness
      %small * after exiting to permanent destination
    %div{id: chart_id(tab[:id], 'bar')}
  
  - table_id = table_id(tab[:id], 'returns_to_homelessness')
  .p-4.border-top
    = link_to "##{table_id}", data: {toggle: 'collapse'}, role: 'button', aria: {expanded: 'false', controls: table_id}, class: 'd-flex justify-content-between align-items-center w-100' do
      %span Table - Return to Homelessness by Cohort Year
      %i.icon-angle-down
  .collapse{id: table_id}
    .border-top
      = render 'returns_to_homelessness_table', data: all_data.bars, id: table_id

.my-7
  .row.justify-content-between
    .col-xs-12.col-md-9
      %h3 Racial Composition
    .col-xs-12.col-md-3
      .d-flex.justify-content-end
        = render 'select_filter', tab: tab, name: 'demographics', label: 'Demographics', options: all_data.demographics

- chart_data.each_with_index do |d, i|
  .d-flex.justify-content-between
    %h4= d[:title]
    - if i == 0
      %small * Exited to permanent destinations
  %div{id: chart_id(tab[:id], "stacked_#{d[:id]}"), style: 'height:200px;width:100%;'}

- content_for :page_js do
  :javascript
    $(document).ready(function() {
      console.log('Returns To Homelessness -----------------')
      var data = #{chart_data.to_json.html_safe}
      var barData = #{all_data.bars.to_json.html_safe}
      var stackedIds = #{stacked_ids.to_json.html_safe}
      
      var bar = new AllNeighborsSystemDashboarBar(
        barData,
        {},
        '##{chart_id(tab[:id], 'bar')}',
        {}
      )
      bar.draw()

      var charts = data.map(function(d, i) {
        return {
          chart: AllNeighborsSystemDashboardStack, 
          data: d,
          selector: '#'+stackedIds[i],
          options: {
            normalize: true, 
            rotated: true,
            showX: false,
          }
        }
      })

      var filterConfig = [
        {
          name: 'demographics',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'demographics')}'
        },
      ]

      var filters = new AllNeighborsSystemDashboardFilters(filterConfig, charts)
      filters.test()
    })