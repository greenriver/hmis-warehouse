- if params[:fake].present? && Rails.env.development?
  - start_date = (DateTime.current - 3.years).beginning_of_month
  - end_date = DateTime.current.beginning_of_month
  - all_data = AllNeighborsSystemDashboard::FakeHousingTotalPlacementsData.new(start_date, end_date)
- else
  - all_data = AllNeighborsSystemDashboard::HousingTotalPlacementsData.new(@report)
  - start_date = @report.filter.start_date
  - end_date = @report.filter.end_date
- total_data = all_data.line_data
- donut_data = all_data.donut_data
- donut_ids = donut_data.map { |d| chart_id(tab[:id], d[:id]) }
- donut_filter_label_ids = donut_data.map { |d| filter_label_id(tab[:id], d[:id]) }
- stacked_data = all_data.stacked_data

%h2{class: css_namespace('all', 'tab_name')}= tab[:name]
.border.my-7.p-4
  %h4.mt-0 Select Universe
  .row.align-items-center
    .col-xs-12.col-md-8
      .d-flex
        .pr-6= render 'select_filter', tab: tab, name: 'project_type', label: 'Project Type', options: all_data.project_types_with_data
        = render 'select_filter', tab: tab, name: 'count_level', label: 'Count Level', options: all_data.count_levels

    .col-xs-12.col-md-4
      = render 'date_range_filter', tab: tab, name: 'date_range', label: 'Date Range', start_date: start_date.strftime("%b %Y"), end_date: end_date.strftime("%b %Y")
.mb-7= render 'filter_labels', tab: tab, labels: ['project_type', 'count_level', 'date_range']

.border.p-6.mb-7
  %h3.mb-6 Total Placements
  %div{id: chart_id(tab[:id], 'total_placements'), style: 'height:400px;'}
  .mt-5.d-flex.justify-content-center
    %div{id: "#{chart_id(tab[:id], 'total_placements')}_legend"}
    %div
      (
      %span{class: filter_label_id(tab[:id], 'date_range')}
      )

= render 'donuts', tab: tab, donut_data: donut_data, filter_label: 'date_range'

= render 'stacked_charts', data: [stacked_data], group: 'Racial Composition', filter_label: 'date_range', filter: false, filter_data: [], show_chart_titles: false, hint: false, tab: tab, legend_padding: '200px'

- content_for :page_js do
  :javascript
    $(document).ready(function() {
      console.log('Housing Placement -----------------')
      var totalData = #{total_data.to_json.html_safe}
      var donutData = #{donut_data.to_json.html_safe}
      var donutIds = #{donut_ids.to_json.html_safe}
      var donutFilterLabelIds = #{donut_filter_label_ids.to_json.html_safe}
      var stackedData = #{stacked_data.to_json.html_safe}
      var stackedId = '##{chart_id(tab[:id], "stacked_#{stacked_data[:id]}")}'

      var charts = [
        {
          chart: AllNeighborsSystemDashboardLine,
          data: totalData,
          selector: '##{chart_id(tab[:id], 'total_placements')}',
          options: {
            legend: {selector: '##{chart_id(tab[:id], 'total_placements')}_legend'}
          }
        },
        {
          chart: AllNeighborsSystemDashboardStack,
          data: stackedData,
          selector: stackedId,
          options: {
            legend: {selector: stackedId+'_legend'},
          }
        }
      ].concat(donutData.map(function(d, i) {
        return {
          chart: AllNeighborsSystemDashboardDonut,
          data: d,
          selector: '#'+donutIds[i],
          options: {
            countLevelLabelSelector: '#'+donutFilterLabelIds[i],
            legend: {
              selector: '#'+donutIds[i]+'_legend'
            }
          }
        }
      }))

      var filterConfig = [
        {
          name: 'projectType',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'project_type')}'
        },
        {
          name: 'countLevel',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'count_level')}'
        },
        {
          name: 'dateRange',
          type: 'dateRange',
          selector: '##{filter_id(tab[:id], 'date_range')} input'
        }
      ]

      var labelConfig = [
        {
          name: 'projectType',
          selector: '.#{filter_label_id(tab[:id], 'project_type')}'
        },
        {
          name: 'countLevel',
          selector: '.#{filter_label_id(tab[:id], 'count_level')}'
        },
        {
          name: 'dateRange',
          selector: '.#{filter_label_id(tab[:id], 'date_range')}'
        },
      ]

      var filters = new AllNeighborsSystemDashboardFilters(filterConfig, charts, labelConfig)
      filters.test()


    })
