- start_date = (DateTime.current - 3.years).beginning_of_month
- end_date = DateTime.current.beginning_of_month
- all_data = AllNeighborsSystemDashboard::FakeTimeToObtainHousing.new(start_date, end_date)

- line_data = all_data.line_data
- scatter_data = all_data.scatter_data

- chart_data = all_data.stacked_data

%h2{class: css_namespace('all', 'tab_name')}= tab[:name]
.border.my-7.p-4
  %h4.mt-0 Select Universe
  .row.align-items-center
    .col-xs-12.col-md-8
      .d-flex
        .pr-6= render render_path('select_filter'), tab: tab, name: 'project_type', label: 'Project Type', options: all_data.project_types
        .pr-6= render render_path('select_filter'), tab: tab, name: 'household_type', label: 'Household Type', options: ['All'] + all_data.household_types
        = render render_path('select_filter'), tab: tab, name: 'demographics', label: 'Demographics', options: all_data.demographics


    .col-xs-12.col-md-4
      = render 'quarter_range_filter', tab: tab, name: 'quarter_range', label: 'Date Range', quarters: all_data.quarter_range
.mb-7
  %h5.mt-0 Time Period
  %div{id: chart_id(tab[:id], 'quarters')}

.mb-7= render render_path('filter_labels'), tab: tab, labels: ['project_type', 'household_type', 'demographics', 'quarter_range']
.border.my-7
  .py-6.px-5.border-bottom
    .d-flex.justify-content-between.align-items-center.pb-6
      %h3= line_data[:title]
    %div{id: chart_id(tab[:id], 'id_to_move_in')}
    .d-flex.justify-content-center{id: legend_id(tab[:id], 'id_to_move_in')}
  .p-4.border-top
    - table_id = table_id(tab[:id], 'id_to_move_in')
    = link_to "javascript:void(0)", data: {toggle: 'collapse', target: "##{table_id}"}, role: 'button', aria: {expanded: 'false', controls: table_id}, class: "d-flex justify-content-between align-items-center w-100 #{css_namespace('internal', 'table_toggle')}" do
      %span Insights - Household Average Days
      %i.icon-angle-down
  .collapse{id: table_id}
    .p-4.border-top{id: filter_label_id(tab[:id], 'id_to_move_in')}

.border.my-7
  .py-6.px-5.border-bottom
    .d-flex.justify-content-between.align-items-center.pb-6
      %h3= scatter_data[:title]
      %small
        Total Households Moved-In:
        %strong{id: chart_id(tab[:id], 'scatter', 'total-households')}
    %div{id: chart_id(tab[:id], 'scatter')}
    .d-flex.justify-content-center{id: legend_id(tab[:id], 'scatter')}
  .p-4.border-top
    - table_id = table_id(tab[:id], 'scatter')
    = link_to "javascript:void(0)", data: {toggle: 'collapse', target: "##{table_id}"}, role: 'button', aria: {expanded: 'false', controls: table_id}, class: "d-flex justify-content-between align-items-center w-100 #{css_namespace('internal', 'table_toggle')}" do
      %span Table - Average Days from Referral to Move-In by Project
      %i.icon-angle-down
  .collapse{id: table_id}
    .p-4.border-top{id: filter_label_id(tab[:id], 'scatter')}
%h3
  Household Average Days from Identification to Housing by
  %span{class: filter_label_id(tab[:id], 'demographic')} Race
.border.p-4
  .d-flex.justify-content-between.align-items-center
    %small Mouse over chart below for more details
    .d-flex{id: legend_id(tab[:id], 'stacked')}
.d-flex.mt-5
  .pr-8{style: 'flex: 0 0 auto;width: 300px;text-align:right;'}
    %strong{class: filter_label_id(tab[:id], 'demographic')}
  %strong Average Days From ID to Housing
%div{id: chart_id(tab[:id], 'stacked')}



- content_for :page_js do
  :javascript
    $(document).ready(function() {
      console.debug('Internal Time To Obtain Housing -----------------')
      var quarterData = #{all_data.quarter_range.to_json.html_safe}
      var data = #{chart_data.to_json.html_safe}
      var lineData = #{line_data.to_json.html_safe}
      var lineId = '##{chart_id(tab[:id], 'id_to_move_in')}'
      var scatterData = #{scatter_data.to_json.html_safe}
      var chartId = '##{chart_id(tab[:id], 'stacked')}'
      var charts = [
        {
          chart: AllNeighborsSystemDashboardQuarters,
          data: quarterData,
          selector: '##{chart_id(tab[:id], 'quarters')}',
          options: {}
        },
        {
          chart: AllNeighborsSystemDashboardTTOHStack,
          data: data,
          selector: chartId,
          options: {
            legend: {selector: '##{legend_id(tab[:id], 'stacked')}'},
          }
        },
        {
          chart: AllNeighborsSystemDashboardStackedLineByQuarter,
          data: lineData,
          selector: lineId,
          options: {
            legend: {selector: '##{legend_id(tab[:id], 'id_to_move_in')}'},
            insights: {selector: '##{filter_label_id(tab[:id], 'id_to_move_in')}'}
          }
        },
        {
          chart: AllNeighborsSystemDashboardScatter,
          data: scatterData,
          selector: '##{chart_id(tab[:id], 'scatter')}',
          options: {
            legend: {selector: '##{legend_id(tab[:id], 'scatter')}'},
            total: {selector: '##{chart_id(tab[:id], 'scatter', 'total-households')}'},
            insights: {selector: '##{filter_label_id(tab[:id], 'scatter')}'}
          }
        }
      ]

      var filterConfig = [
        {
          name: 'projectType',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'project_type')}'
        },
        {
          name: 'householdType',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'household_type')}'
        },
        {
          name: 'demographics',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'demographics')}'
        },
        {
          name: 'quarterRange',
          type: 'quarterRange',
          selector: '##{filter_id(tab[:id], 'quarter_range')} select',
          data: quarterData,
        }
      ]

      var labelConfig = [
        {
          name: 'projectType',
          selector: '.#{filter_label_id(tab[:id], 'project_type')}'
        },
        {
          name: 'householdType',
          selector: '.#{filter_label_id(tab[:id], 'household_type')}'
        },
        {
          name: 'demographics',
          selector: '.#{filter_label_id(tab[:id], 'demographic')}'
        },
        {
          name: 'quarterRange',
          selector: '.#{filter_label_id(tab[:id], 'quarter_range')}'
        },
      ]

      var filters = new AllNeighborsSystemDashboardFilters(filterConfig, charts, labelConfig)
      filters.test()
    })
