- start_date = (DateTime.current - 3.years).beginning_of_month
- end_date = DateTime.current.beginning_of_month
- all_data = AllNeighborsSystemDashboard::FakeTimeToObtainHousing.new(start_date, end_date)

- chart_data = all_data.stacked_data

%h2{class: css_namespace('all', 'tab_name')}= tab[:name]
.border.my-7.p-4
  %h4.mt-0 Select Universe
  .row.align-items-center
    .col-xs-12.col-md-8
      .d-flex
        .pr-6= render 'select_filter', tab: tab, name: 'project_type', label: 'Project Type', options: all_data.project_types
        .pr-6= render 'select_filter', tab: tab, name: 'household_type', label: 'Household Type', options: ['All'] + all_data.household_types
        = render 'select_filter', tab: tab, name: 'demographics', label: 'Demographics', options: all_data.demographics

         
    .col-xs-12.col-md-4
      = render 'date_range_filter', tab: tab, name: 'date_range', label: 'Date Range', start_date: start_date.strftime("%b %Y"), end_date: end_date.strftime("%b %Y")

.mb-7= render 'filter_labels', tab: tab, labels: ['project_type', 'household_type', 'demographics', 'date_range']

.row.align-items-stretch.mb-7
  .col-xs-12.col-md-3.mb-4
    .h-100.d-flex.align-items-center
      %div
        %h2 Overall Time to Obtain Housing
        %span{class: filter_label_id(tab[:id], 'date_range')}

  - all_data.overall_data.each do |key, value|
    .col-xs-12.col-md-3.mb-4
      .card.h-100.text-center.px-4.py-3{class: css_namespace(tab[:id], 'card')}
        %span= value[:value]
        %h3= value[:name]
  
%h3 
  Household Average Days form Idendification to Housing by 
  %span{class: filter_label_id(tab[:id], 'demographic')} Race
.border.p-4
  .d-flex.justify-content-between.align-items-center
    %small Mouse over chart below for more details
    .d-flex{id: "#{chart_id(tab[:id], "stacked")}_legend"}
.d-flex.mt-5
  .pr-8{style: 'flex: 0 0 auto;width: 300px;text-align:right;'}
    %strong{class: filter_label_id(tab[:id], 'demographic')}
  %strong Average Days From ID to Housing
%div{id: chart_id(tab[:id], 'stacked')}

- content_for :page_js do
  :javascript
    $(document).ready(function() {
      console.log('Time To Obtain Housing -----------------')
      var data = #{chart_data.to_json.html_safe}
      var chartId = '##{chart_id(tab[:id], 'stacked')}'
      var charts = [
        {
          chart: AllNeighborsSystemDashboardTTOHStack, 
          data: data,
          selector: chartId,
          options: {
            legend: {selector: chartId+'_legend'},
          }
        },
      ]

      var filterConfig = [
        {
          name: 'projectType',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'project_type')}'
        },
        {
          name: 'householdType',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'household_type')}'
        },
        {
          name: 'demographics',
          type: 'select',
          selector: '##{filter_id(tab[:id], 'demographics')}'
        },
        {
          name: 'dateRange',
          type: 'dateRange',
          selector: '##{filter_id(tab[:id], 'date_range')} input'
        }
      ]

      var labelConfig = [
        {
          name: 'projectType',
          selector: '.#{filter_label_id(tab[:id], 'project_type')}'
        },
        {
          name: 'householdType',
          selector: '.#{filter_label_id(tab[:id], 'household_type')}'
        },
        {
          name: 'demographics',
          selector: '.#{filter_label_id(tab[:id], 'demographic')}'
        },
        {
          name: 'dateRange',
          selector: '.#{filter_label_id(tab[:id], 'date_range')}'
        },
      ]

      var filters = new AllNeighborsSystemDashboardFilters(filterConfig, charts, labelConfig)
      filters.test()
    })

