- result = @report.result_for(key)
- all_projects_class_name = "jAppProjectChart_#{key}"
.p-4.mb-4{ class: "performance-measurement--highlight-light-#{@report.highlight_id(category)}" }
  %h2 Project Level
%h4 Project Comparison #{@report.filter.date_range_words}
.c-chart--vertical-bar.mb-6{ class: all_projects_class_name, data: { chart: result.data_for_projects_bar(current_user).to_json, include_percent: result.primary_unit.starts_with?('%').to_s }}
- my_projects = @report.my_projects(current_user, key)
- if my_projects.present?
  .well.no-break
    %h3 My Projects
    %hr
    - my_projects.each do |project_id, result|
      - next unless result.hud_project

      .page-break-avoid
        %h3.mb-4= result.hud_project.name(current_user, include_project_type: true)
        = render 'performance_measurement/warehouse_reports/reports/details_row', key: key, result: result, class_name: "jProjectLevelPerformance_#{key}_#{project_id}", show_label_detail: result.percentage?
- other_projects = @report.other_projects(current_user, key)
- if other_projects.present?
  .well.no-break
    %h3 Other Projects
    %hr
    - other_projects.each do |project_id, result|
      - next unless result.hud_project

      .page-break-avoid
        %h3.mb-4= result.hud_project.name(current_user, include_project_type: true)
        = render 'performance_measurement/warehouse_reports/reports/details_row', key: key, result: result, class_name: "jProjectLevelPerformance_#{key}_#{project_id}", show_label_detail: result.percentage?

= content_for :page_js do
  :javascript
    $(document).ready(function(){
      var all_project_data = $('.#{all_projects_class_name}').data('chart');
      var all_project_height = 35 * all_project_data.columns[0].length;
      var max = Math.max(...all_project_data.columns[1].slice(1));
      var include_percent = $('.#{all_projects_class_name}').data('includePercent');
      all_project_data.labels['format'] = function (v, id, i, texts) {
        if(v < max * 0.15) {
          return '';
        }
        if(include_percent) {
          return d3.format(".0%")(v / 100)
        } else {
          return d3.format(',')(v)
        }
      }
      var all_project_chart = bb.generate({
        data: all_project_data,
        size: { height: all_project_height },
        legend: { show: false },
        bindto: '.#{all_projects_class_name}',
        legend: {
          show: false,
        },
        axis: {
          width: 150,
          rotated: true,
          y: {
            max: max,
            min: 0,
            padding: {
              bottom: 0,
            },
            outer: false,
            tick: {
              rotate: -35,
              autorotate: true,
              format: function(x) { return `${d3.format('d')(x)}${include_percent ? '%' : ''}`},
            },
          },
          x: {
            type: 'category',
            outer: false,
            tick: {
              rotate: -35,
              autorotate: true,
              fit: true,
              culling: false,
              width: 300,
            },
          },
        },
        grid: {
          y: {
            show: true,
          },
        },
        bar: {
          width: 20,
          padding: 5,
        },
        padding: {
          left: 300,
          top: 0,
        },
      });

    });
