#chart{style: "width:100%;height:#{data[:chart_height]}px;"}
.row.mt-6#legend

= content_for :page_js do
  :javascript
    $(document).ready(function() {
      console.log('equity analysis chart')
      var fakeRaceData = #{data[:data].to_json.html_safe}
      console.log('fakeRaceData', fakeRaceData)

      var pattern = function(fill) {
        var pattern = d3.select(document.createElementNS(d3.namespaces.svg, "pattern"))
            .attr("patternUnits", "userSpaceOnUse")
            .attr("width", "6")
            .attr("height", "10")
            .attr('x', '0')
            .attr('y', '0')
        
        pattern.append('rect')
          .attr('width', '6')
          .attr('height', '10')
          .attr('fill', 'white')
          .attr('x', '0')
          .attr('y', '0')
          
        pattern.append('rect')
          .attr('width', '6')
          .attr('height', '10')
          .attr('fill', fill)
          .style('opacity', 0.5)
          .attr('x', '0')
          .attr('y', '0')

        pattern.append('line')
          .attr('x1', 0)
          .attr('y1', 0)
          .attr('x2', 0)
          .attr('y2', 10)
          .style('stroke', 'white')
          .style('stroke-width', '3')

        return pattern.node()
      }

      var chartConfig = {
        data: {
          x: 'x',
          columns: fakeRaceData.columns,
          type: "bar",
          color: function(color, d) {
            // sometimes d is data object and sometimes d is data object id ????
            // I think when this is called to build the custom legend d is just the id string
            // d is the object when this is called to draw the chart bars
            var isComparison = d.id ? d.id.includes('Comparison Period') : d.includes('Comparison Period')
            if(isComparison) {
              return color
            } else {
              return d.id ? fakeRaceData.colors[d.id] : fakeRaceData.colors[d]
            }
          }

        },
        color: {
          tiles: function() {
            return fakeRaceData.ordered_keys.map(function(key, i) {
              var fill = fakeRaceData.colors[key]
              return pattern(fill) 
            }) 
          }
        },
        bar: {
          width: {
            ratio: 0.6,
            max: 10,
          },
          padding: 3,
        },
        axis: {
          rotated: true,
          x: {
            type: 'category',
          },
        },
        grid: {
          y: {
            show: true,
          },
        },
        bindto: '#chart',
        legend: {
          contents: {
            bindto: '#legend',
            template: function(title, color) {
              var swatch = `<svg class="chart-legend-item-swatch-prs1 " viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"><rect width="10" height="10" fill="${color}"/></svg>`;
              return `<div class="col-xs-12 col-md-6 d-flex align-items-center pb-2">${swatch}<div class="chart-legend-item-label-prs1">${title}</div></div>`;
            }
          }
        }
      }
      var chart = bb.generate(chartConfig)
    });