version: '3.8'

x-app: &app
  image: hmis-warehouse:3.6
  build:
    context: .
    args:
      RUBY_VERSION: 3.1.4
      BUNDLER_VERSION: '2.4.10'
      USER_ID: ${USER_ID:-1001}
      GROUP_ID: ${GROUP_ID:-1001}
  environment: &env
    AWS_REGION: ${AWS_REGION:-us-east-1}
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
    AWS_SECURITY_TOKEN: ${AWS_SECURITY_TOKEN:-}
    AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN:-}
    NODE_ENV: ${NODE_ENV:-development}
    BOOTSNAP_CACHE_DIR: /bundle/bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    CHROMEDRIVER_VERSION: 79.0.3945.36
    GROVER_NO_SANDBOX: 'true'
    BUNDLE_FORCE_RUBY_PLATFORM: 'true'
  env_file:
    - .env.development.local
    - .env.local
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache_alpine:/app/tmp/cache
    - bundle_alpine:/bundle
    - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    - /etc/ssl/certs:/etc/ssl/certs
    - node_modules_alpine:/node_modules

services:
  shell:
    <<: *backend
    profiles:
      - manual
    command: /bin/bash
    depends_on:
      - db
      - redis

  spec:
    <<: *backend
    profiles:
      - manual
    command: /bin/bash
    entrypoint: '/usr/bin/spec.entrypoint.sh'
    depends_on:
      - db
      - redis
      - minio
    env_file:
      - .env.local
      - .env.test

  console:
    <<: *backend
    profiles:
      - manual
    # entrypoint: ''
    stdin_open: true
    tty: true
    command: bundle exec rails console
    depends_on:
      - db
      - redis
      - mailhog
      - minio

  dj:
    <<: *backend
    command: ./bin/rake jobs:work
    entrypoint: ''
    depends_on:
      - db
      - redis
      - minio

  web:
    <<: *backend
    container_name: hmis-warehouse-web
    stdin_open: true
    tty: true
    command: bundle exec rails server -b 0.0.0.0
    labels:
      - "traefik.http.routers.op.rule=Host(`open-path-warehouse.127.0.0.1.nip.io`)"
      - "traefik.http.routers.op.tls=true"
      - "traefik.http.services.op.loadbalancer.server.port=3000"
    ports:
      - "3000"
      - "9394"
    expose:
      - "3000"
      - "9394"
    environment:
      <<: *env
      VIRTUAL_HOST: ${FQDN:-hmis-warehouse.dev.test}
      VIRTUAL_PORT: 3000
    depends_on:
      - db
      - redis
      - mailhog
      - minio

  db:
    image: postgis/postgis:12-3.1-alpine
    container_name: hmis-warehouse-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore
      PGPASSWORD: postgres
      PGUSER: postgres
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - 5432
    expose:
      - 5432

  redis:
    container_name: hmis-warehouse-redis
    image: redis:alpine
    volumes:
      - redis:/data
    expose:
      - 6379

  mailhog:
    image: mailhog/mailhog:latest
    environment:
      VIRTUAL_HOST: mail.${FQDN:-hmis-warehouse.dev.test}
      VIRTUAL_PORT: 8025
    expose:
      - 8025
      - 1025

  sftp:
    container_name: hmis-warehouse-sftp
    image: justinhimself/sftp
    volumes:
      - ./tmp/sftp_spec:/home/user/sftp
      - ./spec/support/sftp.conf:/etc/sftp/users.conf:ro

  # See config/storage.yml for setup
  minio:
    container_name: s3
    image: minio/minio
    volumes:
      - ~/minio/data:/data
      - ~/.minio/certs:/certs
    hostname: s3.dev.test
    environment:
      MINIO_ACCESS_KEY: local_access_key
      MINIO_SECRET_KEY: local_secret_key
      MINIO_ROOT_USER: local_access_key
      MINIO_ROOT_PASSWORD: local_secret_key
    ports:
      - 9000:9000
      - 9001:9001 # enable for UI access
    command: server --certs-dir /certs /data

volumes:
  bundle_alpine:
  node_modules_alpine:
  rails_cache_alpine:
  dbdata:
  redis:

networks:
  default:
    name: nginx-proxy
    external: true
