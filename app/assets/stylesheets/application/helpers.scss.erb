@import './_tools/constants';
@import './_settings/*';
@import './_tools/functions';
@import './_tools/color_calculations';
@import './_tools/mixins/_index';
@import 'bootstrap/variables';
<%
  # NOTE: This needs to come last as it overrides existing variables.
  sheet = Rails.root.join('app', 'assets', 'stylesheets', 'application', '_custom', "#{ENV['CLIENT']}.scss")
  if ENV['CLIENT'].present? && File.exist?(sheet)
%>
@import "./_custom/<%=ENV['CLIENT']%>";
<% end %>
<%
  # TODO: disabling this for now, we need a better mechanism to precompile sinc the database isn't available at precompilation time
  if false
    # If we've defined further overrides in the theme
    theme = Rails.cache.fetch('active_theme', expires_in: 1.minutes) do
      GrdaWarehouse::Theme.find_by(client: ENV['CLIENT'])
    end
    if theme
      sheet = Rails.root.join(theme.scss_file_path, theme.scss_file_name)
      if File.exist?(sheet)
%>
@import "./_custom/theme/<%=theme.scss_file_name%>";
<%
      end
    end
  end
%>
<%
  sheet = Rails.root.join('app', 'assets', 'stylesheets', 'application', '_custom', 'env', "#{ENV['RAILS_ENV']}.scss")
  if ENV['RAILS_ENV'].present? && File.exist?(sheet)
%>
@import "./_custom/env/<%=ENV['RAILS_ENV']%>";
<% end %>
