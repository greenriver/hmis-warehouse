- title = 'Delayed Jobs'
- content_for :title, title
%h1= content_for(:title)
= render partial: 'menus/admin_tabs'

- if @jobs.any?
  %p Showing #{pluralize(@jobs.count, 'job')}
  .card.table-responsive
    %table.table.table-striped.mb-0
      %thead
        %th Job
        %th Queue
        %th Priority
        %th Last error
        %th
        %th
      %tbody
        - @jobs.each do |job|
          %tr
            %td
              %strong= job.id
              %br
              = job.name.split(' ').first
              - user_id = if job.payload_object.respond_to?(:job_data) && job.payload_object.respond_to?(:job_data).try(:[], 'arguments').try(:first).is_a?(Hash) then job.payload_object.job_data['arguments'].first.try(:[], 'user_id') else 'unknown' end
              - arguments = if job.payload_object.respond_to?(:job_data) then job.payload_object.job_data.try(:[], 'arguments').try(:first) else nil end
              - detail = if arguments.is_a?(Hash) then arguments.try(:[], 'report_class') else arguments end
              - if user_id
                %br
                %strong Run by user id:
                = user_id
              - if detail
                %br
                = detail
              %br
              %strong Run after:
              = job.run_at
              - if job.locked_by
                %br
                %span.icon-cog.text-success
                %strong Locked by
                = job.locked_by
                at
                = job.locked_at
              - if job.failed_at
                %br
                %span.icon-cancel-circled.text-danger
                %strong Failed:
                = job.failed_at
            %td= job.queue
            %td= job.priority
            %td
              .div{style: 'max-height: 200px; overflow-y: scroll;'}= job.last_error
            %td
              = link_to admin_delayed_job_path(job), method: :patch, class: 'btn btn-sm btn-info', data: { confirm: 'Are you sure you want to re-queue this job?'} do
                %i.icon-settings_backup_restore
                .nobr
                  Re-queue
            %td
              = link_to admin_delayed_job_path(job), method: :delete, class: 'btn btn-sm btn-danger', data: { confirm: 'Are you sure you want to DELETE this job?, there is no going back.'} do
                %i.icon-cross
                Delete

- else
  %p No current jobs.
