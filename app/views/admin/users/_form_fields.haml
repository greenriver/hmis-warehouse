- user = f.object
.row
  .col-sm-6
    %h3 User Information
    - providers = user.oauth_identities.map(&:provider_name).sort.uniq
    - if providers.any?
      .alert.alert-info
        = "Sign-in provided by #{providers.to_sentence}. Changes made here to personal information may be overwritten on the user's next login."
    .form-inputs.well
      .row
        .col-sm-10
          = f.input :first_name, required: true
      .row
        .col-sm-10
          = f.input :last_name, required: true
      .row
        .col-sm-8
          = f.input :email, as: :email, required: true
      .row
        .col-sm-4
          = f.input :phone
      - if user.show_credentials?
        .row
          .col-sm-10
            = f.input :credentials, label: 'Credentials', collection: @user.credential_options, as: :select_two, input_html: { data: {tags: true} }, hint: 'Add a new credential type by typing the name and hitting enter.'
      .row
        .col-sm-10
          = f.input :agency_id, collection: @agencies, label_method: :name, value_method: :id, include_blank: true, as: :select_two, required: true
      .row
        .col-sm-10
          = f.input :exclude_from_directory
      .row
        .col-sm-10
          = f.input :exclude_phone_from_directory
      -# Allow skipping email invite for new users if OKTA is enabled. The first time they log in with okta, the account will get linked.
      - if ENV['OKTA_DOMAIN'].present? && @user.new_record?
        .row
          .col-sm-10
            = f.input :skip_invitation, as: :boolean, label: 'Skip email invitation'
      - if @user.two_factor_enabled?
        .row
          .col-sm-8
            %p This user has enabled Two-Factor authentication.  If this is preventing login, you can turn it off below.  Before you do, you should ensure the request is coming from the actual user.  Once off, the user will need to re-enable it.
            = f.input :otp_required_for_login, as: :select_two, label: 'Require two-factor authentication', include_blank: false, input_html: {class: [:j2Fa]}

  .col-sm-6
    .form--checkbox-groups
      %h3 Notifications
      .well
        %p Which notifications should this user receive?
        - if ENV['OKTA_DOMAIN'].present?
          = f.input :notify_on_new_account, label: 'New account creation by an external system'
        = f.input :receive_file_upload_notifications, label: 'File uploads'
        - if can_edit_vspdat? # you can only assign this if you can also edit them
          = f.input :notify_on_vispdat_completed, label: "VI-SPDAT submissions", as: :boolean
        - if GrdaWarehouse::DataSource.authoritative.exists?
          = f.input :notify_on_client_added, label: "Authoritative clients added", as: :boolean
        = f.input :notify_on_anomaly_identified, label: "Anomalies identified"
        - if GrdaWarehouse::Config.get(:request_account_available)
          = f.input :receive_account_request_notifications, label: 'Account requests', as: :boolean
    .form--expiration
      %h3 Account Life-cycle
      .well
        = f.input :expired_at, as: :date_picker, label: 'Account Expiration Date', hint: 'If an expiration date is present, the user will not be able to login after that date.  Active accounts should be blank.'
    - if @user.training_required?
      .form--user-training
        %h3 User Training
        .well
          %p
            Course Progress:
            %i #{@user.training_status}
          - unless @user.last_training_completed.present?
            = f.input :training_completed, label: 'Check to OVERRIDE course completion requirement'

= render '/users/user_viewable_entities', f: f, roles: Role.editable.order(:name)
