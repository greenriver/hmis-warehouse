= simple_form_for @available_file_tag, as: :available_file_tag, url: @form_url do |f|
  - if @available_file_tag.errors.any?
    #error_explanation
      %h2= "#{pluralize(@available_file_tag.errors.count, "error")} prohibited this available_file_tag from being saved:"
      %ul
        - @available_file_tag.errors.full_messages.each do |msg|
          %li= msg

  = f.input :name
  = f.input :group
  = f.input :included_info, label: 'Includes'
  = f.input :weight
  = f.input :note
  = f.input :document_ready, label: 'Required for document ready?', input_html: { class: :jDocumentReady }
  = f.input :required_for, collection: GrdaWarehouse::AvailableFileTag.available_required_for_options, include_blank: 'Everyone', input_html: { class: [:jDocumentReadyDependent] }, as: :select_two
  = f.input :notification_trigger, label: 'Should this generate a notification?'
  = f.input :verified_homeless_history, label: 'Does this constitute a verified homeless history?'
  = f.input :ce_self_report_certification, label: 'Does this constitute a self-reported homelessness certification?'
  = f.input :consent_form, label: 'Does this constitute a consent form?', input_html: { class: :jConsentForm }
  = f.input :full_release, label: 'Is this a FULL release form?', hint: 'This should be left blank for partial releases', input_html: { class: :jConsentFormDependent }
  = f.input :coc_available, label: 'Should this document type allow specification of CoC?', input_html: { class: :jConsentFormDependent }
  = f.input :requires_effective_date, label: 'Does this require an effective or signed-on date?'
  = f.input :requires_expiration_date, label: 'Does this require an expiration date?'
  .actions
    = f.submit 'Save', class: 'btn btn-primary'

= content_for :page_js do
  :javascript
    $('.jDocumentReady').on('change', function(e){
      var dependent = $('.jDocumentReadyDependent').closest('.form-group')
      if($(this).is(':checked')) {
        dependent.removeClass('hidden');
      } else {
        dependent.addClass('hidden');
      }
    });
    $('.jDocumentReady').trigger('change');
    $('.jConsentForm').on('change', function(e){
      var dependent = $('.jConsentFormDependent').closest('.form-group')
      if($(this).is(':checked')) {
        dependent.removeClass('hidden');
      } else {
        dependent.addClass('hidden');
      }
    });
    $('.jConsentForm').trigger('change');
