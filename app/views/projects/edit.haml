= render 'project_breadcrumbs'
- content_for :title, "Edit #{@project.name} at #{@project.organization.name}"
%h1= content_for :title
= simple_form_for @project, as: :project, url: project_path(@project) do |f|
  .row
    .col-sm-6
      = f.input :act_as_project_type, collection: ::HUD.project_types.invert, include_blank: "Use Actual Project Type: #{HUD.project_type(@project.ProjectType)} (#{@project.ProjectType})", as: :select_two
      = f.input :active_homeless_status_override, label: 'Consider enrolled clients as actively homeless for CAS and Cohorts?', hint: 'Active state does not require this to have a homeless project type'
      = f.input :include_in_days_homeless_override, label: 'Include in verified additional days calculations?'
      = f.input :extrapolate_contacts, label: 'Should service records for this project be extrapolated to cover the month of contact?'
      = f.input :operating_start_date_override, as: :date_picker, label: "Override the operating start date, currently: #{@project.OperatingStartDate&.to_date || 'unset'}"
      = f.input :operating_end_date_override, as: :date_picker, label: "Override the operating end date, currently: #{@project.OperatingEndDate&.to_date || 'unset'}"
      = f.input :confidential, label: 'Confidential?', hint: @project.confidential_hint
      = f.input :uses_move_in_date, label: 'Uses move-in-date?'
      = f.input :hud_continuum_funded, collection: {'Yes'=>true, 'No'=>false}, label: 'Continuum project?', include_blank: "Use actual ContinuumProject: #{yes_no(@project.ContinuumProject == 1, include_icon: false)}", as: :select_two
      = f.input :hmis_participating_project_override, collection: HUD.yes_no_missing_options.invert, include_blank: "Use actual HMISParticipatingProject: #{HUD.no_yes_missing(@project.HMISParticipatingProject) || 'unset'}", as: :select_two, label: 'HMIS Participating Project Override'
      = f.input :housing_type_override, label: 'Housing Type Override', input_html: { value: @project.housing_type_override}, collection: HUD.housing_types.invert, include_blank: "Use actual Housing Type: #{HUD.housing_type(@project.HousingType) || 'unset'}", as: :select_two
      = f.input :tracking_method_override, label: 'Tracking Method Override', input_html: { value: @project.tracking_method_override}, collection: HUD.tracking_methods.select{|k,_| k.present?}.invert, include_blank: "Use actual Tracking Method: #{HUD.tracking_method(@project.TrackingMethod) || 'unset'}", as: :select_two
      = f.input :target_population_override, label: 'Target Population Override', input_html: { value: @project.target_population_override}, collection: HUD.target_populations.invert, include_blank: "Use actual Target Population: #{HUD.target_population(@project.TargetPopulation) || 'unset'}", as: :select_two
      .form-actions
        = f.submit 'Save', class: ['btn', 'btn-primary', 'ml-auto']
