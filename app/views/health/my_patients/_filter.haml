- if @active_filter
  - filter_class = 'client__filter-active'
- else
  - filter_class = 'client__filter'

.dropdown.o-filtration{class: filter_class}
  %button.btn.btn-secondary.dropdown-toggle{data: {toggle: 'dropdown'}}
    Filter
    %span.caret

  .o-filtration__container.dropdown-menu.dropdown-menu-left.options
    .o-filtration__header
      %h3.client__filter-header Patient Filter
    = form_tag(nil, method: :get) do
      %label Status
      -# preserve search for filtering
      - if params[:q] && params[:q][:full_text_search]
        = hidden_field_tag 'q[full_text_search]', params[:q][:full_text_search]
      .radio
        - active = params[:filter].blank? || params[:filter][:population] == 'all'
        %label{class: "#{active ? :active : ''}"}
          %input{type: :radio, name: 'filter[population]', value: :all, autocomplete: :off, checked: active}
          All
      .radio
        - active = params[:filter].present? && params[:filter][:population] == 'not_engaged'
        %label{class: "#{active ? :active : ''}"}
          %input{type: :radio, name: 'filter[population]', value: :not_engaged, autocomplete: :off, checked: active}
          Not engaged
      .radio
        - active = params[:filter].present? && params[:filter][:population] == 'no_activities'
        %label{class: "#{active ? :active : ''}"}
          %input{type: :radio, name: 'filter[population]', value: :no_activities, autocomplete: :off, checked: active}
          0 Recent Qualifying Activities
      .radio
        - active = params[:filter].present? && params[:filter][:population] == 'engagement_ending'
        %label{class: "#{active ? :active : ''}"}
          %input{type: :radio, name: 'filter[population]', value: :engagement_ending, autocomplete: :off, checked: active}
          Engagement Period Ending

      - selection_candidates = [current_user] + current_user.care_coordinators
      - options = options_from_collection_for_select(selection_candidates.uniq, :id, :name, params.dig(:filter, :user))
      = render 'inputs/select', field_name: 'filter[user]', label: 'Care Coordinator', options: options, html_options: { include_blank: 'All', style: 'width: 100%;' }

      - selection_candidates = [current_user] + User.nurse_care_managers.to_a
      - options = options_from_collection_for_select(selection_candidates.uniq, :id, :name, params.dig(:filter, :nurse_care_manager_id))
      = render 'inputs/select', field_name: 'filter[nurse_care_manager_id]', label: 'Nurse Care Manager', options: options, html_options: { include_blank: 'All', style: 'width: 100%;' }

      .o-filtration__actions.form__actions
        = link_to health_my_patients_path, class:'btn btn-secondary' do
          %span.icon-cross.icon-inline
          Clear Filters
        %button.btn.btn-primary.ml-auto{type: :submit}
          %span.icon-filter.icon-inline.mr-1
          Filter



= content_for :page_js do
  :javascript
    $('.dropdown-toggle').click(function(event){
      $(event.currentTarget).blur()
    })
