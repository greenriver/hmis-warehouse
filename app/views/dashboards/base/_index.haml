- @show_census = false
= render 'index_title'
- unless GrdaWarehouse::Config.get(:multi_coc_installation)
  = render 'housed_overall'
- if @html
  = render 'report_picker'
- else
  = render 'report_options'

.rollup{data: {partial: :overview}}
  %p.well.text-center.jRemoveWhenComplete Loading...
.rollup{data: {partial: :censuses}}
  %p.well.text-center.jRemoveWhenComplete Loading...
.rollup{data: {partial: :entry}}
  %p.well.text-center.jRemoveWhenComplete Loading...
.rollup{data: {partial: :exit}}
  %p.well.text-center.jRemoveWhenComplete Loading...

= render 'download'
= render 'computation_description'

-# load in all the bits of aggregate statistics via ajax
= content_for :page_js do
  :javascript
    var section_path = "#{request.path}/section/";
    var sections = new App.Sections.Loader($('.rollup'), section_path, {filters: #{report_params.to_json.html_safe}});

-# From exit.haml
= content_for :page_js do
  - if can_see_client_details?
    - support_link = "#{warehouse_reports_client_details_exits_path(filter: support_filter.merge({ start: 'START_DATE', end: 'END_DATE', ph: 'true' }))}"
  :javascript
    var support_link = '#{support_link}'

    new App.Dashboards.Clients.Exits('.jHoused', '#{@report.sub_population_title}', support_link, {remote: true});

-# From entry.haml
= content_for :page_js do
  - if can_see_client_details?
    - entry_support_link = "#{polymorphic_path([:warehouse_reports, :first_time_homeless_index], filter:  support_filter.merge({start: 'START_DATE', end: 'END_DATE'}))}"
    - re_entry_support_link = "#{polymorphic_path([:warehouse_reports, :re_entry, :index], filter:  support_filter.merge({start: 'START_DATE', end: 'END_DATE'}))}"
  :javascript
    var entry_support_link = '#{entry_support_link}'

    new App.Dashboards.Clients.Entered('.jEntry', '#{@report.sub_population_title}', entry_support_link, {remote: true});

    var re_entry_support_link = '#{re_entry_support_link}'

    new App.Dashboards.Clients.EntryReEntry('.jEntryReEntry', '#{@report.sub_population_title}', entry_support_link, re_entry_support_link, {remote: true});

    new App.Dashboards.Clients.Entered('.jReEntry', '#{@report.sub_population_title}', re_entry_support_link, {remote: true});

-# From census.haml
= content_for :page_js do
  :javascript
    new App.Dashboards.Clients.Census('.jMonthlyCensus', '#{@report.sub_population_title}', '', {remote: true});
