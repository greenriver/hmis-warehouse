-# disabled in favor of new menu system
- if can_see_admin_menu? && false
  %ul.nav.nav-tabs
    - if can_edit_users?
      - on_user_pages = current_page?(admin_users_path) || current_page?(admin_inactive_users_path) || current_page?(admin_account_requests_path)
      %li.nav-item{role: 'presentation', class: ('active' if on_user_pages)}
        = link_to 'Users', admin_users_path, class: 'nav-link'
    - if can_edit_roles?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_roles_path))}
        = link_to 'Roles', admin_roles_path, class: 'nav-link'
    - if can_edit_collections?
      -# TODO: START_ACL remove after acl transition
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_groups_path))}
        = link_to 'Groups', admin_groups_path, class: 'nav-link'
      -# END_ACL
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_collections_path))}
        = link_to 'Collections', admin_collections_path, class: 'nav-link'
    - if can_edit_users?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_user_groups_path))}
        = link_to 'User Groups', admin_user_groups_path, class: 'nav-link'
    - if can_edit_users?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_access_controls_path))}
        = link_to 'Access Controls', admin_access_controls_path, class: 'nav-link'
    - if can_edit_users?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_agencies_path))}
        = link_to 'Agencies', admin_agencies_path, class: 'nav-link'
    - if can_edit_users?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_consent_limits_path))}
        = link_to 'CoCs for Consent', admin_consent_limits_path, class: 'nav-link'
    - if can_manage_config?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_configs_path))}
        = link_to 'Site Config', admin_configs_path, class: 'nav-link'
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_translation_keys_path))}
        = link_to 'Translations', admin_translation_keys_path, class: 'nav-link'
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_links_path))}
        = link_to 'Links', admin_links_path, class: 'nav-link'
    - if can_edit_theme?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(edit_admin_theme_path))}
        = link_to 'Theme', edit_admin_theme_path, class: 'nav-link'
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(edit_admin_color_path))}
        = link_to 'Colors', edit_admin_color_path, class: 'nav-link'
    - if can_manage_auto_client_de_duplication?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_de_duplication_index_path))}
        = link_to 'Client De-Duplication', admin_de_duplication_index_path, class: 'nav-link'
    - if can_view_imports?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_dashboard_imports_path))}
        = link_to 'Imports', admin_dashboard_imports_path, class: 'nav-link'
    - if can_add_administrative_event?
      %li.nav-item{role: 'presentation', class: ('active' if current_page?(admin_administrative_events_path))}
        = link_to 'Administrative Events', admin_administrative_events_path, class: 'nav-link'
    - if can_edit_warehouse_alerts?
      %li.nav-item{role: 'presentation', class: ('active' if controller_name == "warehouse_alerts")}
        = link_to 'Warehouse Alerts', admin_warehouse_alerts_path, class: 'nav-link'
    - if can_add_administrative_event?
      %li.nav-item{role: 'presentation', class: ('active' if controller_name == "delayed_jobs")}
        = link_to 'Delayed Jobs', admin_delayed_jobs_path, class: 'nav-link'
    - if can_manage_assessments? && GrdaWarehouse::Config.get(:eto_api_available)
      %li.nav-item{role: 'presentation', class: ('active' if controller_name == "assessments")}
        = link_to 'TouchPoints', admin_eto_api_assessments_path, class: 'nav-link'
    - if can_manage_sessions?
      %li.nav-item{role: 'presentation', class: ('active' if controller_name == "sessions")}
        = link_to 'Sessions', admin_sessions_path, class: 'nav-link'
    - if can_manage_inbound_api_configurations?
      %li.nav-item{role: 'presentation', class: ('active' if controller_name == 'inbound_api_configurations')}
        = link_to 'Inbound APIs', admin_inbound_api_configurations_path, class: 'nav-link'
    - if can_manage_config?
      %li.nav-item{role: 'presentation', class: ('active' if controller_name == 'idunno')}
        = link_to 'Oauth', oauth_applications_path, class: 'nav-link'
