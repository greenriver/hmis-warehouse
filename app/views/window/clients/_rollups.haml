:css
  .rollup {
    margin: 1em 0 0 0;
  }
  .rollup-container:empty:after {
    content: 'loading...';
  }
       
.row
  .col-sm-12
    .rollup{data: {partial: :demographics}}
      %h3 Demographics
.row
  - if GrdaWarehouse::Config.get(:eto_api_available)
    .col-sm-6
      .rollup{data: {partial: :contact_information}}
        %h3 Contact Information
  .col-sm-6
    .client__current-enrollments
      %h3 Current Program Enrollments
      = render 'window/clients/ongoing_enrollments'
- if GrdaWarehouse::Config.get(:eto_api_available)
  .row
    .col-sm-6
      .rollup{data: {partial: 'case_manager'}}
        %h3 Case Manager
    .col-sm-6
      .rollup{data: {partial: :assessments_without_data}}
        %h3 Assessments
.row
  .col-sm-12
    .rollup{data: {partial: :residential_enrollments}}
      %h3 Residential Enrollments
    - if @client.signed_consent_form_fully?
      .rollup{data: {partial: :other_enrollments}}
        %h3 Other Enrollments
.row
  .col-sm-6
    - if @client.signed_consent_form_fully?
      .rollup{data: {partial: 'services_full'}}
        %h3 Services &mdash; Full Bed Register

-# load in al the bits of aggregate statistics via ajax
= content_for :page_js do
  - source_clients = @client.source_clients.preload(:data_source, :organizations, enrollments: [:project])
  :javascript
    var rollupPath = #{window_client_rollup_path(@client).to_json};
    var clients = #{source_clients.each_with_index.map{ |c, i| [ c.id, [ i, c.uuid, c.data_source.short_name, c.organizations.map{ |o| o.name unless source_clients.joins(enrollments: :project).where(Project: {OrganizationID: o.OrganizationID, data_source_id: o.data_source_id}).where(Project: {confidential: true}).any?}.to_sentence] ] }.to_h.to_json};
    var manyClients = #{source_clients.many?.to_json};
    var high = #{@client.source_clients.size + 1};
    var rollups = new App.Rollups.Loader($('.rollup'), rollupPath, manyClients, clients, high);
    rollups.collapsible('.jAssessmentTypeToggle');
