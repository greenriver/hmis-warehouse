- content_for :title,  Translation.translate('Data Sources')
- if can_manage_some_ad_hoc_ds?
  %ul.nav.nav-tabs
    %li.nav-item.active
      = link_to Translation.translate('HMIS Data Sources'), data_sources_path, class: 'nav-link'
    %li.nav-item
      = link_to Translation.translate('Ad-Hoc Data Sources'), ad_hoc_data_sources_path, class: 'nav-link'

.row
  .col-sm-8
    %h1= content_for :title
  - if can_edit_data_sources?
    .col-sm-4.text-right.mb-4
      = link_to new_data_source_path, class: 'btn btn-primary' do
        %span.icon-plus
        Add Data Source
= render 'common/pagination_top', item_name: 'data source'
.table-responsive
  %table.table.table-striped
    %thead
      %tr
        %th Name
        %th Short Name
        %th Client Records
        %th Project Count
        - if hmis_enabled?
          %th
            HMIS
        %th
          Visible in Window
        %th Authoritative?
        %th Last Import Run
        %th
        %th
    %tbody
      %tr
        %td Warehouse
        %td
          .destination-sqr Warehouse
        %td= number_with_delimiter(GrdaWarehouse::Hud::Client.destination.count)
        - span = 6
        - span = 7 if hmis_enabled?
        %td{colspan: span}
      - @data_sources.each do |data_source|
        - most_recently_completed = data_source.last_imported_at
        %tr
          %td= link_to data_source.name, data_source_path(data_source)
          %td
            .ds{class: "ds-color-#{data_source.id}"}= data_source.short_name
          %td= number_with_delimiter(@client_counts[data_source.id])
          %td= number_with_delimiter(@project_counts[data_source.id])
          - if hmis_enabled?
            %td.text-center
              - if data_source.hmis?
                = link_to "https://#{data_source.hmis}" do
                  %i.icon-link-ext
          %td.text-center
            = checkmark(data_source.visible_in_window)
          %td.text-center= checkmark(data_source.authoritative)
          %td
            = most_recently_completed
            - if data_source.unprocessed_enrollment_count.positive?
              .mt-2
                %em
                  Enrollments remaining to process: #{data_source.unprocessed_enrollment_count}
          %td
            -# NOTE: this will only show the data source as stalled if the files were brought in by the system user
            - if most_recently_completed.present?
              - stall_date = data_source.stalled_since?(most_recently_completed)
              - if stall_date
                .label.label-warning
                  same file since: #{stall_date}
            - if data_source.import_paused
              .label.label-info
                import paused
          %td
            - if can_delete_data_sources?
              = link_to data_source_path(data_source), method: :delete, data: {confirm: "Deleting the #{data_source.name} Data Source will delete ALL associated data. Do you want to proceed?"}, class: 'btn btn-sm btn-danger btn-icon-only' do
                %span.icon-cross
= render 'common/pagination_bottom', item_name: 'data source'
