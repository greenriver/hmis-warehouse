- wrapper = if @readonly then :readonly else SimpleForm.default_wrapper end
= simple_form_for(@data_source, url: data_source_path(@data_source), wrapper: wrapper) do |f|
  .c-card--flush.mb-5
    %table.table.table-sm
      %tr
        %th.pl-2 Last Import Run
        %td= @data_source.last_imported_at
      %tr
        %th.pl-2 Date Span
        %td
          - if data_span = @data_source.data_span
            = "#{data_span[:start_date]} - #{data_span[:end_date]}"
      -if ! @data_source.authoritative? && @data_source.uploads.any? && can_view_imports?
        %tr
          %th.pl-2 Uploads
          %td
            = link_to data_source_uploads_path(@data_source) do
              View
      - if @data_source.non_hmis_uploads.any? && current_user.can_upload_dashboard_extras?
        %tr
          %th.pl-2 Dashboard Extras Uploads
          %td
            = link_to 'View', data_source_non_hmis_uploads_path(@data_source)
      - if can_edit_data_sources?
        %tr
          %th.pl-2
            HMIS Export SourceID
          %td
            = f.input :source_id, label: false
        %tr
          %th.pl-2
            Visible in the Window into the Warehouse?
          %td
            = f.input :visible_in_window, label: false
        %tr
          %th.pl-2
            Does the Personal ID column contain a UUID?
          %td
            = f.input :munged_personal_id, as: :boolean, label: false, hint: 'Converts 5011A79B04E34BB99D5A002A3E079C61 to 5011A79B-04E3-4BB9-9D5A-002A3E079C61'
        %tr
          %th.pl-2
            Import Paused?
          %td
            = f.input :import_paused, label: false
        - if @data_source.authoritative?
          %tr
            %th.pl-2 After Create Path
            %td= @data_source.after_create_path
          %tr
            %th.pl-2 Authoritative Type
            %td= GrdaWarehouse::DataSource.authoritative_types.invert[@data_source.authoritative_type&.to_sym] || 'blank'
        %tr
          %th.pl-2 Service Scanning Enabled?
          %td= f.input :service_scannable, label: false
      %tr
        %th.pl-2 Viewable by the following users, regardless of visibility in window
        %td= @data_source.users.joins(:roles).where(roles: {can_see_clients_in_window_for_assigned_data_sources: true}).diet.distinct.map(&:name).join(', ')
    .text-right.m-2.mb-4
      - if can_edit_data_sources?
        = f.button :submit, value: 'Save Data Source', class: 'btn btn-primary'