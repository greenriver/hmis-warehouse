- # The 2018 LSA will no longer run after 2020 HMIS spec changes.  Remove the form
- if false # @show_missing_data
  .alert.alert-warning
    The LSA report requires some project descriptors.  The following projects are missing either Project HousingType, Geography Geocode, or Geography GeographyType, or have an invalid Funder.
  %table.table.table-sm
    %thead
      %tr
        %th Project
        %th Project Type
        %th Operating Start Date
        %th HousingType
        %th Geocode
        %th GeographyType
        %th Funder
    %tbody
      - @missing_projects.each do |project|
        %tr
          %td= link_to project[:project], edit_project_path(project[:id])
          %th= ::HUD.project_type_brief project[:project_type]
          %td= yes_no(! @missing_data[:missing_operating_start_date].include?(project))
          %td= yes_no(! @missing_data[:missing_housing_type].include?(project))
          %td= yes_no(! @missing_data[:missing_geocode].include?(project))
          %td= yes_no(! @missing_data[:missing_geography_type].include?(project))
          %td= yes_no(! @missing_data[:invalid_funders].include?(project))
- # The 2018 LSA will no longer run after 2020 HMIS spec changes.  Remove the form
- if false
  = simple_form_for :report_result do |f|
    - year = if Date.current.month >= 10 then Date.current.year else Date.current.year - 1 end
    %h3 Queue Report
    .slab
      = f.error_notification
      .row.mb-2
        .col-sm-4
          = f.input :project_id, collection: Reports::Lsa::Fy2018::Base.available_projects.viewable_by(current_user), required: false, input_html: {name: 'report_result[options][project_id][]', multiple: true}, as: :select_two
          = f.input :project_group_ids, collection: GrdaWarehouse::ProjectGroup.viewable_by(current_user), required: false, label: 'Project Groups', input_html: { name: 'report_result[options][project_group_ids][]', multiple: true }, as: :select_two
          = f.input :data_source_id, collection: Reports::Lsa::Fy2018::Base.available_data_sources.viewable_by(current_user), required: false, input_html: {name: 'report_result[options][data_source_id]'}, as: :select_two
        .col-sm-4
          = f.input :coc_code, collection: GrdaWarehouse::Hud::ProjectCoc.viewable_by(current_user).distinct.pluck(:CoCCode).compact, selected: GrdaWarehouse::Config.get(:site_coc_codes), input_html: {name: 'report_result[options][coc_code]'}, hint: GrdaWarehouse::Config.get(:site_coc_codes), required: true, as: :select_two
        .col-sm-4
          .form-group
            %label.control-lable.string
              %abbr{data: {original_title: "required"}} *
              Start Date
            = f.input :report_start, as: :date_picker, input_html: {name: 'report_result[options][report_start]', value: Date.new(year-1,10,1)}, label: false
          .form-group
            %label.control-lable.string.required
              %abbr{data: {original_title: "required"}} *
              End Date
            = f.input :report_end, as: :date_picker, input_html: {name: 'report_result[options][report_end]', value: Date.new(year,9,30).to_date, class: 'form-control jStart'}, label: false
      .row
        .col-sm-12.margin-bottom-12
          .form-actions
            = f.button :button, class: 'btn btn-primary pull-right' do
              %span.icon-plus
              Queue Report Run