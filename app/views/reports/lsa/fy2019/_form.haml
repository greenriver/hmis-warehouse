- if @show_missing_data
  .alert.alert-warning
    The LSA report requires some project descriptors.  The following projects are missing either Project HousingType, Geography Geocode, or Geography GeographyType, or have an invalid Funder.
  .well.p-0
    %table.table
      %thead
        %tr
          %th Project
          %th Project Type
          %th Operating Start Date
          %th HousingType
          %th CoC Code
          %th Geocode
          %th GeographyType
          %th Funder
          %th Zipcode
          %th Inventory Start Date
      %tbody
        - @missing_projects.each do |project|
          %tr
            %td= link_to project[:project], project_path(project[:id])
            %th= ::HUD.project_type_brief project[:project_type]
            %td= yes_no(! @missing_data[:missing_operating_start_date].include?(project))
            %td= yes_no(! @missing_data[:missing_housing_type].include?(project))
            %td= yes_no(! @missing_data[:missing_coc_codes].include?(project))
            %td= yes_no(! @missing_data[:missing_geocode].include?(project))
            %td= yes_no(! @missing_data[:missing_geography_type].include?(project))
            %td= yes_no(! @missing_data[:invalid_funders].include?(project))
            %td= yes_no(! @missing_data[:missing_zip].include?(project))
            %td= yes_no(! @missing_data[:missing_inventory_start_dates].include?(project))
%h3 LSA-Specific Data Quality Reports
.well
  %p The LSA reports on data quality issues, the following reports should assist in tracking down the details.
  %ul
    %li= link_to 'Missing CoC Codes', warehouse_reports_hud_missing_coc_codes_path
    %li= link_to 'Incorrect Head of Household Counts', warehouse_reports_hud_not_one_hohs_path
    %li= link_to 'Incorrect Move-in Dates', warehouse_reports_hud_incorrect_move_in_dates_path
    %li= link_to 'Clients Enrolled in Multiple Projects of the Same Type', warehouse_reports_double_enrollments_path
%h3 Queue Report
= simple_form_for :report_result do |f|
  - year = if Date.current.month >= 10 then Date.current.year else Date.current.year - 1 end
  - content_for :filters_col_full do
    .row
      .col-sm-6
        = f.input :project_id, collection: Reports::Lsa::Fy2019::Base.available_projects(user: current_user), required: false, as: :grouped_select, group_method: :last, input_html: {name: 'report_result[options][project_id][]', multiple: true, class: :select2}
        = f.input :project_group_ids, collection: GrdaWarehouse::ProjectGroup.viewable_by(current_user), required: false, label: 'Project Groups', input_html: { name: 'report_result[options][project_group_ids][]', multiple: true, class: :select2 }
        = f.input :data_source_id, collection: Reports::Lsa::Fy2019::Base.available_data_sources.viewable_by(current_user), required: false, input_html: {name: 'report_result[options][data_source_id]', class: :select2}
      .col-sm-3
        = f.input :coc_code, collection: GrdaWarehouse::Hud::ProjectCoc.viewable_by(current_user).distinct.pluck(:CoCCode).compact, selected: GrdaWarehouse::Config.get(:site_coc_codes), input_html: {name: 'report_result[options][coc_code]', class: :select2}, hint: GrdaWarehouse::Config.get(:site_coc_codes), required: true
      .col-sm-3
        = f.input :report_start, as: :date_picker, input_html: {name: 'report_result[options][report_start]', value: Date.new(year-1,10,1)}, label: 'Start Date'
        = f.input :report_end, as: :date_picker, input_html: {name: 'report_result[options][report_end]', value: Date.new(year,9,30).to_date, class: 'form-control jStart'}, label: 'End Date'

  - content_for :filter_actions do
    = f.button :button, class: 'btn btn-primary pull-right' do
      %span.icon-plus
      Queue Report Run

  = render 'warehouse_reports/filters', f:f, submit_button: nil
