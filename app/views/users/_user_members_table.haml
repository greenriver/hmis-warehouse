- user_ids = if defined?(users_lambda)
  - users_lambda.call(item)
- else
  - item.users.active.distinct.pluck(:id)
- user_count = user_ids.count
- if user_count.zero?
  .mt-6
    %p
      %em= item.name
      is currently empty. You can delete it if you like:
    = link_to path_to_delete_item, method: :delete, data: {confirm: "Would you really like to delete #{item.name}?"}, class: 'btn btn-danger btn-sm' do
      %span.icon-cross
      Delete #{item.name}

- if path_to_add_users
  = simple_form_for :user_members, url: path_to_add_users do |f|
    .d-flex.mt-6
      .mr-4.w-50
        = f.input :user_ids, collection: User.not_system.active.where.not(id: item.user_ids), as: :select_two, input_html: { multiple: true }, label: 'Users to Add'
      .ml-4
        = f.button :submit, 'Add Users', class: 'btn btn-secondary mt-no-label'

%h3.mt-4.mb-4
  = pluralize(user_count, 'User')
  have some level of access to
  %em= item.name

- if user_count.positive?
  .users.table-responsive
    %table.table.table-striped
      %thead
        %tr
          %th Name
          %th Email
          %th
      %tbody
        - User.where(id: user_ids).each do |user|
          %tr
            %td= link_to_if can_edit_users?, user.name, edit_admin_user_path(user)
            %td= user.email
            %td.d-flex
              - if delete_user_lambda
                = link_to delete_user_lambda.call(user), class: 'btn btn-sm btn-danger ml-auto', method: :delete, data: { confirm: "Are you sure you want to remove #{user.name} from #{item.name}?" } do
                  %i.icon-cross
                  Remove User
- else
  .none-found No users
