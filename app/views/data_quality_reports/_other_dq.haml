- if @report&.report.try(:[], 'incorrect_dob').present?
  - incorrect_counts = @report.report.with_indifferent_access[:incorrect_dob]
  - no_service_counts = @report.report.with_indifferent_access[:missing_nights]
  - service_after_close_counts = @report.report.with_indifferent_access[:service_after_close]
  - individual_at_family = @report.report.with_indifferent_access[:individuals_at_family_projects]
  - family_at_individual = @report.report.with_indifferent_access[:families_at_individual_projects]
  - enrollments_missing_service = @report.report.with_indifferent_access[:enrollments_with_no_service]
  .row
    .col-sm-4
      %h3 Other Data Quality Measures
  .well.overflow-scroll
    %table.table.data-quality__table
      %thead
        %tr
          %th Project Name
          %th Project Type
          %th.data-quality__odd-columns DOB on or after entry date
          %th No service in the final month of enrollment
          %th.data-quality__odd-columns Service after exit
          %th Individuals at a Family Project
          %th.data-quality__odd-columns Families at an Individual Project
          %th Enrollments with no Service
      %tbody
        - @report.projects.each do |project|
          - p_type = ::HudUtility2024.project_type_brief(project.ProjectType)
          - p_class = "client__service_type_#{p_type}"
          %tr
            %td
              = project.name(current_user)
            %td.text-center
              %span{class: "client__service_type_#{project.ProjectType}"}
                .enrollment__project_type{class: p_class}
                  %em.service-type__program-type= p_type
            - if incorrect_counts.present?
              %td.text-center.data-quality__odd-columns
                - measure = incorrect_counts[project.id.to_s]
                - key = "incorrect_dob_#{project.id}"
                - if measure > 0
                  = link_to polymorphic_path(support_path, {key: key}), data: {loads_in_pjax_modal: true} do
                    = measure
                - else
                  = measure
            - if no_service_counts.present?
              %td.text-center
                - measure = no_service_counts[project.id.to_s]
                - key = "missing_nights_#{project.id}"
                - if measure > 0
                  = link_to polymorphic_path(support_path, {key: key}), data: {loads_in_pjax_modal: true} do
                    = measure
                - else
                  = measure
            - if service_after_close_counts.present?
              %td.text-center.data-quality__odd-columns
                - measure = service_after_close_counts[project.id.to_s]
                - key = "service_after_close_#{project.id}"
                - if measure > 0
                  = link_to polymorphic_path(support_path, {key: key}), data: {loads_in_pjax_modal: true} do
                    = measure
                - else
                  = measure
            - if individual_at_family.present?
              %td.text-center
                - measure = individual_at_family[project.id.to_s]
                - key = "individuals_at_family_projects_#{project.id}"
                - if measure > 0
                  = link_to polymorphic_path(support_path, {key: key}), data: {loads_in_pjax_modal: true} do
                    = measure
                - else
                  = measure
            - if family_at_individual.present?
              %td.text-center.data-quality__odd-columns
                - measure = family_at_individual[project.id.to_s]
                - key = "families_at_individual_projects_#{project.id}"
                - if measure > 0
                  = link_to polymorphic_path(support_path, {key: key}), data: {loads_in_pjax_modal: true} do
                    = measure
                - else
                  = measure
            - if enrollments_missing_service.present?
              %td.text-center
                - measure = enrollments_missing_service[project.id.to_s]
                - key = "enrollments_with_no_service_#{project.id}"
                - if measure > 0
                  = link_to polymorphic_path(support_path, {key: key}), data: {loads_in_pjax_modal: true} do
                    = measure
                - else
                  = measure
