- @jobs.each do |job|
  - parameters = YAML.load(job.handler, permitted_classes: [ActiveJob::QueueAdapters::DelayedJobAdapter::JobWrapper]).job_data['arguments'].first
  - parameters.delete('_aj_hash_with_indifferent_access')
  - report = GrdaWarehouse::WarehouseReports::EnrolledDisabledReport.new(parameters: parameters)
  %tr{class: 'jIncompleteReport'}
    %td= job.run_at
    %td= render 'spinner'
    %td= render 'parameters', report: report
    %td
      - if report.user_id
        = User.find(report.user_id)&.name
- @reports.each do |report|
  %tr
    %td
      = report.started_at
    %td
      = link_to warehouse_reports_disability_path(report) do
        = report.client_count
        clients
    %td= render 'parameters', report: report
    %td
      - if report.user_id
        = User.find(report.user_id)&.name
    %td
      = link_to warehouse_reports_disability_path(report), method: :delete, class: 'btn btn-sm btn-danger btn-icon-only', data: {confirm: "Are you sure you want to delete this report?"} do
        %i.icon-cross
