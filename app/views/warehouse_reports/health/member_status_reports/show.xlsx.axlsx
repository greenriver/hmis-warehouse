wb = xlsx_package.workbook
if params[:summary].present?
  wb.add_worksheet(name: 'OUTREACH') do |sheet|
    title = sheet.styles.add_style(sz: 12, b: true, alignment: {horizontal: :center})
    text = sheet.styles.add_style(format_code: '@')

    row = [
      'Sender',
      'Sent_Row_Num',
      'Sent_Column_Num',
      'Sent_Export_Time_Stamp',
      'Receiver',
      'Received_Row_Num',
      'Received_Column_Num',
      'Received_Export_Time_Stamp',
    ]
    sheet.add_row(row, style: title)

    receiver = @report.receiver.presence || @sender.receiver_name
    row = [
      @sender.short_name,
      @patients.count,
      Health::MemberStatusReport.spreadsheet_columns.count,
      @report.effective_date.strftime('%Y%m%d'),
      receiver,
    ]
    sheet.add_row(row, style: text)
  end
else
  wb.add_worksheet(name: 'OUTREACH') do |sheet|
    title = sheet.styles.add_style(sz: 12, b: true, alignment: {horizontal: :center})
    text = sheet.styles.add_style(format_code: '@')

    sheet.add_row(Health::MemberStatusReport.spreadsheet_columns.values, style: title)

    @patients.each do |patient|
      row = []
      Health::MemberStatusReport.spreadsheet_columns.keys.each do |k|
        case k
        when :report_start_date, :report_end_date
          row << @report[k]&.strftime('%Y%m%d')
        else
          value = patient[k]
          value = value.strftime('%Y%m%d') if value.is_a? Date
          row << value
        end
      end
      sheet.add_row(row, types: [:string] * row.length, style: text)
    end
  end
end