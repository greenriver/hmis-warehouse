%ul.nav.nav-tabs
  %li.nav-item
    %a.nav-link.active{href: '#unpayable', role: "presentation", data: {toggle: :tab}}
      Invalid QA
  %li.nav-item
    %a.nav-link{href: '#duplicate', role: "presentation", data: {toggle: :tab}}
      Duplicate
  %li.nav-item.payable
    %a.nav-link{href: '#valid-unpayable', role: "presentation", data: {toggle: :tab}}
      Valid QA, Unpayable
  %li.nav-item.payable
    %a.nav-link{href: '#payable', role: "presentation", data: {toggle: :tab}}
      Valid QA, Payable
  %li.nav-item.payable
    %a.nav-link{href: '#missing-components', role: "presentation", data: {toggle: :tab}}
      Missing Components

.tab-content
  .tab-pane.active#unpayable
    %p
      The following qualifying activities are invalid and therefore un-payable per the
      %strong #{@sender.receiver_name} Community Partners Manual: Qualifying Activity Reporting.
    %p
      Any qualifying activities marked
      %strong force payable: yes
      will be included in the submission, any marked
      %strong no,
      will remain on this list until they are adjusted such that they are payable, or until they are 6 months old.
    = simple_form_for :force_payable, url: qualifying_activities_warehouse_reports_health_claims_path do |f|
      .unpayable-wrapper
        %p Found #{pluralize(@unpayable.count, 'client')} with #{pluralize(@unpayable.values.flatten.count, 'unpayable qualifying activity')}.
        = render 'unpayable', qa_group: @unpayable, f: f
      .d-flex
        .form-actions.ml-auto
          = f.submit 'Update Qualifying Activities', class: "btn btn-primary"
  .tab-pane#duplicate
    %p
      The following qualifying activities are payable once per day, the procedure codes are valid, but the qualifying activities have occurred more than once per day per patient.  One of each of the qualifying activities below has either been submitted to #{@sender.receiver_name} or will be included in this claims file.
    .duplicate-wrapper
      %p Found #{pluralize(@duplicate.count, 'client')} with #{pluralize(@duplicate.values.flatten.count, 'duplicate qualifying activity')}.
      = render 'payable', qa_group: @duplicate
  .tab-pane#valid-unpayable
    %p
      The following qualifying activities will be included in this claims file for submission to #{@sender.receiver_name} even though it is fairly certain the claim will be denied.
    .payable-wrapper
      %p Found #{pluralize(@valid_unpayable.count, 'client')} with #{pluralize(@valid_unpayable.values.flatten.count, 'valid, unpayable qualifying activity')}.
      = render 'payable', qa_group: @valid_unpayable

  .tab-pane#payable
    %p
      The following qualifying activities will be included in this claims file for submission to #{@sender.receiver_name}.  In addition qualifying activities marked
      %strong force payable
      on the
      %strong Invalid
      tab will be included.
    .payable-wrapper
      %p Found #{pluralize(@payable.count, 'client')} with #{pluralize(@payable.values.flatten.count, 'payable qualifying activity')}.
      = render 'payable', qa_group: @payable
  .tab-pane#missing-components
    %p
      Missing components do not affect the validity of the careplan completed qualifying activity.
    .missing-components-wrapper
      %p
        Found #{pluralize(@missing_components.count, 'client')}
        with #{pluralize(@missing_components.values.flatten.count, 'careplan completed qualifying activity')}
        missing one or more careplan components.
      = render 'missing_components', qa_group: @missing_components
