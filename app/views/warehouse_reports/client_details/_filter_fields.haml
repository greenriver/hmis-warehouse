.row
  .col-md-8
    = render 'warehouse_reports/date_range_filters', f:f
  - if @show_ph_destinations
    .col-sm-4.d-flex.align-items-center.pt-no-label
      = f.input :ph, as: :boolean, label: 'Limit to permanent destinations'
  - if GrdaWarehouse::Config.get(:multi_coc_installation)
    .col-sm-4
      = f.input :coc_codes, collection: GrdaWarehouse::Lookups::CocCode.options_for_select(user: current_user), placeholder: 'Any CoC', as: :select_two, input_html: { multiple: true }, label: 'CoC Limit', required: false
.row
  .col-md-4
    = f.input :project_type_codes, collection: @filter.available_residential_project_types, placeholder: 'Any Project Type', as: :select_two, input_html: { multiple: true, class: 'jProjectTypes' }
  - if report_filter_visible?(:organization_ids, current_user)
    .col-md-4
      = f.input :organization_ids, collection: @filter.organization_options_for_select(user: current_user), as: :grouped_select_two, group_method: :last, input_html: {multiple: true, class: 'jOrganizations'}, label: 'Organizations', required: false, placeholder: 'Any Organization'
  - if report_filter_visible?(:project_ids, current_user)
    .col-md-4
      = f.input :project_ids, label: 'Projects', collection: [], as: :select_two, input_html: {multiple: true, placeholder: 'Any Project', data: {'collection-path' => api_projects_path(selected_project_ids: @filter.project_ids)}}, include_blank: false, placeholder: 'Any Project'
.row
  .col-md-4
    = f.input :sub_population, collection: GrdaWarehouse::WarehouseReports::Dashboard::Base.available_sub_populations, include_blank: false, as: :select_two
  .col-sm-4
    = f.input :age_ranges, collection: @filter.available_age_ranges, placeholder: 'Any Age', include_blank: false, as: :select_two, input_html: { multiple: true}
  .col-sm-4.d-flex.align-items-center.pt-no-label
    = f.input :hoh_only, as: :boolean, label: 'Limit to Heads of Household?'
.row
  .col-4
    = f.input :races, collection: HUD.races.invert, as: :select_two, required: false, placeholder: 'All Races', input_html: { multiple: true }
  .col-4
    = f.input :ethnicities, collection: HUD.ethnicities.invert, as: :select_two, required: false, placeholder: 'All Ethnicities', input_html: { multiple: true }
  .col-4
    = f.input :genders, collection: HUD.genders.invert, as: :select_two, required: false, placeholder: 'All Genders', input_html: { multiple: true }
