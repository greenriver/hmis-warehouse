
wb = xlsx_package.workbook
wb.add_worksheet(name: "Active #{GrdaWarehouse::WarehouseReports::Dashboard::Base.available_sub_populations.invert[@filter.sub_population]}"[0..30]) do |sheet|
  title = sheet.styles.add_style(sz: 12, b: true, alignment: {horizontal: :center})
  sheet.add_row([
    'Warehouse Client ID',
    'First Name',
    'Last Name',
    'Project Type',
    'Project',
    'Entry Date',
    'Exit Date',
    'Length of Stay (to-date)',
    'Enrollment ID',
    'Living Situation',
    'Destination',
  ] + GrdaWarehouse::Hud::Client.race_fields.map { |m| HudUtility2024.race(m).gsub('None', 'Race None') }, style: title)
  @report.enrollments.each do |client_id, enrollments|
    enrollments.each do |enrollment|
      client = enrollment.client
      length_of_stay = if enrollment.last_date_in_program
        enrollment.last_date_in_program - enrollment.first_date_in_program
      else
        Date.current - enrollment.first_date_in_program
      end

      row = [
        client_id,
        ::GrdaWarehouse::Config.get(:include_pii_in_detail_downloads) ? client.FirstName : 'Redacted',
        ::GrdaWarehouse::Config.get(:include_pii_in_detail_downloads) ? client.LastName : 'Redacted',
        HudUtility2024.project_type(enrollment.computed_project_type),
        enrollment.project.name(current_user),
        enrollment.first_date_in_program,
        enrollment.last_date_in_program,
        length_of_stay.to_i,
        enrollment.enrollment_group_id,
        HudUtility2024.living_situation(enrollment.enrollment&.LivingSituation),
        HudUtility2024.destination(enrollment.destination),
      ] + GrdaWarehouse::Hud::Client.race_fields.map { |m| HudUtility2024.no_yes_reasons_for_missing_data(client.public_send(m.to_sym)&.to_i) }
      sheet.add_row(row)
    end
  end
end
