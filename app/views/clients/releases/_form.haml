.well
  .row
    .col-4
      %dl
        %dt Name:
        %dd= @client.name
    .col-4
      %dl
        %dt Date of Birth:
        %dd= @client.DOB
    .col-4
      %dl
        %dt SSN:
        %dd= ssn(@client.SSN)
= simple_form_for @file, url: client_releases_path(@client) do |f|
  - if @file.errors.any?
    .alert.alert-danger{style: 'display: block;'}
      %p Failed to upload file. Please review the errors below
      %ul.error_list
        - @file.errors.full_messages.uniq.each do |msg|
          %li= msg
  .form-inputs
    - if @consent_file_types.count == 1
      - # we need to include a hidden field for the javascript to work
      - item = @consent_file_types.first
      - options = {class: 'jFileTag'}
      - data = {}
      - if item.consent_form
        - data.merge!({consent: true})
      - if item.coc_available
        - data.merge!({coc_code: true})
      - if item.requires_effective_date
        - data.merge!({requires_effective_date: true})
        - @requires_effective_date = true
      - if item.requires_expiration_date
        - data.merge!({requires_expiration_date: true})
        - @requires_expiration_date = true
      - options.merge!({data: data})
      = render 'clients/files/hidden_tag', item: item, f: f, options: options
    - else
      %h3 What Does This File Contain?
      .c-card.c-card--flush.client-file.mb-6
        .c-card__content.clearfix.row
          .col-sm-6
            .form-group
              %h4= @group_name
              - @consent_file_types.each do |item|
                - options = {class: 'jFileTag'}
                - data = {}
                - if item.note.present?
                  - data.merge!({toggle: :popover, trigger: :manual, title: item.name, content: item.note})
                - if item.consent_form
                  - data.merge!({consent: true})
                - if item.coc_available
                  - data.merge!({coc_code: true})
                - if item.requires_effective_date
                  - data.merge!({requires_effective_date: true})
                  - @requires_effective_date = true
                - if item.requires_expiration_date
                  - data.merge!({requires_expiration_date: true})
                  - @requires_expiration_date = true
                - options.merge!({data: data})
                - if GrdaWarehouse::Config.get(:allow_multiple_file_tags)
                  .checkbox
                    %label
                      = render 'clients/files/multi_tag', item: item, f: f, options: options
                      = item.name
                - else
                  .radio
                    %label
                      = render 'clients/files/single_tag', item: item, f: f, options: options
                      = item.name
                - if item.included_info.present?
                  %p.ml-4
                    %em= "(includes: #{item.included_info})"
    .row.jConsentFormCoC
      .col-sm-5
        %h4 Release Information
        .well
          = f.input :coc_codes, collection: current_user.coc_codes_for_consent, include_blank: 'All CoCs', as: :select_two, input_html: { multiple: true, data: { 'disable-select-all' => true }}
          %br
          = link_to pre_populated_client_releases_path(), class: 'btn btn-success jPrePopulated', data: { href: pre_populated_client_releases_path() } do
            %i.icon-printer
            Print Release Form
      .col-sm-2.text-center{style: 'padding-top: 8rem;'}
        OR
      .col-sm-5
        %h4 Refuse to Release
        .well
          = f.input :consent_revoked_at, as: :date_picker, label: 'Refused all sharing on'
          .text-right
            = link_to pre_populated_client_releases_path(), class: 'btn btn-warning jPrePopulated mt-4', data: { href: pre_populated_client_releases_path(), refused: true } do
              %i.icon-printer
              Print Refusal Form
    %h4 Upload Release or Refusal
    .well
      = f.input :file, as: :file, required: true
      .row.jEffectiveDate
        .col-sm-4
          = f.input :effective_date, as: :date_picker, label: 'Date Signed'
      - if can_confirm_housing_release? && ! GrdaWarehouse::Config.get(:auto_confirm_consent)
        .consent-form-fields.hidden
          = f.input :consent_form_confirmed, as: :boolean
      .row.jExpirationDate
        .col-sm-4
          = f.input :expiration_date, as: :date_picker, label: 'Expiration date'
      %p Before uploading the release or refusal, ensure you have chosen the appropriate CoC Codes or entered a date above to indicate sharing has been refused.
  .d-flex
    = link_to client_releases_path(@client), class: 'mr-auto mt-2' do
      %i.icon-arrow-left2
      Cancel &amp; Return to File List
    %button.btn.btn-default.ml-4{type: :submit}
      %i.icon-upload2
      Upload File

= content_for :page_js do
  :javascript
    $('.jPrePopulated').on('click', function(e) {
      // Grab the values we need
      var params = {
        coc_codes: $('.jConsentFormCoC select').val(),
        expiration_date: $('.jExpirationDate input').val(),
        effective_date: $('.jEffectiveDate input').val()
      }
      if($(this).data('refused') !== undefined) {
        params.refused = 'true';
      }
      var url = $(this).data('href');
      $(this).attr('href', url + '.pdf?' + $.param(params));
    });
