- check_wrapper_class = {class: 'form-group--tight'}
= simple_form_for @client, as: :readiness, url: polymorphic_path(cas_readiness_path_generator, client_id: @client.id)  do |f|
  .row
    %section.o-section-card.col-lg-8.col-xl-6
      %h3 Characteristics
      .c-card.c-card--flush.c-card--padded.flex-wrap
        .row
          .form-group.mb-6.col-md-4
            - (GrdaWarehouse::Hud::Client.file_cas_columns & GrdaWarehouse::Config.get(:client_details).map(&:to_sym)).sort.each do |column|
              = f.input column, as: :boolean, label: GrdaWarehouse::Hud::Client.cas_columns[column], wrapper_html: check_wrapper_class

          .form-group.mb-6.col-md-4
            - if can_view_hiv_status?
              - if GrdaWarehouse::Config.get(:client_details).include?('hiv_positive')
                = f.input :hiv_positive, as: :boolean, label: GrdaWarehouse::Hud::Client.cas_columns[:hiv_positive], wrapper_html: check_wrapper_class
              - if GrdaWarehouse::Config.get(:client_details).include?('hues_eligible')
                = f.input :hues_eligible, as: :boolean, label: GrdaWarehouse::Hud::Client.cas_columns[:hues_eligible], wrapper_html: check_wrapper_class

            - if can_view_dmh_status?
              - if GrdaWarehouse::Config.get(:client_details).include?('dmh_eligible')
                = f.input :dmh_eligible, as: :boolean, label: GrdaWarehouse::Hud::Client.cas_columns[:dmh_eligible], wrapper_html: check_wrapper_class

          .form-group.mb-6.col-md-4
            - if GrdaWarehouse::Config.get(:client_details).include?('chronically_homeless_for_cas')
              = f.input :chronically_homeless_for_cas, as: :boolean, label: GrdaWarehouse::Hud::Client.cas_columns[:chronically_homeless_for_cas], wrapper_html: check_wrapper_class

  .row
    .col-lg-8.col-xl-6
      = render 'consent_form', f: f
      %p.o-text--semibold The following attributes are determined based exclusively on the existance of an uploaded file.
      %p
        = checkmark_or_x(@client.ha_eligible)
        %span= GrdaWarehouse::Hud::Client.cas_columns[:ha_eligible]
      %p
        = checkmark_or_x(@client.disability_verified_on.present?)
        %span= GrdaWarehouse::Hud::Client.cas_columns[:disability_verified_on]

  .row
    .col-lg-8.col-xl-6
      = render 'vispdat', f: f

  %section.o-section-card.row
    .col-lg-8.col-xl-6
      %h3 Release
      .c-card.c-card--block.c-card--padded.c-card--flush
        = render GrdaWarehouse::Config.get(:cas_available_method).to_s, f: f

  .row.mt-8
    .col-sm-6
      = f.submit value: 'Update CAS Info', class: 'btn btn-primary'
