:ruby
  et = GrdaWarehouse::Hud::Enrollment.arel_table
  a_t = GrdaWarehouse::Hud::Assessment.arel_table
  assessments = @client.
    source_assessments.
    joins(:enrollment).
    preload( enrollment: [:client, :project] ).
    order(et[:EntryDate].desc, a_t[:AssessmentDate].desc)
- if assessments.any?
  .table-responsive
    %table.table
      %thead
        %tr
          %th
          %th Project
          %th Entry Date
          %th Assessment Date
          %th Assessment Level
          %th Assessment Type
          %th Prioritization Status
          %th
      %tbody
        - assessments.each do |assessment|
          - project = assessment.enrollment.project
          %tr
            %td
              .ds{class: "ds-color-#{assessment.data_source_id}"}= ds_short_name_for(assessment.enrollment.client.id)
            %td= GrdaWarehouse::Hud::Project.confidentialize(name: project&.name)
            %td.date-cell= assessment.enrollment.EntryDate
            %td= assessment.AssessmentDate
            %td= HUD.assessment_type assessment.AssessmentType
            %td= HUD.assessment_level assessment.AssessmentLevel
            %td= HUD.prioritization_status assessment.PrioritizationStatus
            %td.text-right
              - if @client.hmis_source_visible_by?(current_user)
                = link_to 'HMIS', hmi_path(assessment, type: 'Assessment'), class: 'btn btn-xs btn-secondary btn-muted btn-hmis mb-2'
                .text-teeny.font-weight-light
                  .text-nowrap
                    Created: #{assessment.DateCreated}
                  .text-nowrap
                    Updated: #{assessment.DateUpdated}
- else
  .no-data
    No Coordinated Entry Assessments on file
