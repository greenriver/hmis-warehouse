= cache(['clients', 'income_benefits', @client, can_view_projects?, controller_path, current_user], expires_in: 1.hours) do
  :ruby
    incomes = @client.source_enrollment_income_benefits.
      joins(enrollment: :client).
      merge(GrdaWarehouse::Hud::Enrollment.visible_to(current_user)).
      preload( :enrollment, :project, :client ).
      sort_by{ |b| b.enrollment.date }.reverse
  - if incomes.any?
    .table-responsive
      %table.table
        %thead
          %tr
            %th
            %th Project
            %th Program Entry Date
            %th Collection Date
            %th Collection Stage
            %th Total Monthly Income
            %th
        %tbody
          - incomes.each do |benefit|
            - project = benefit.project
            %tr
              %td
                .ds{class: "ds-color-#{benefit.data_source_id}"}= ds_short_name_for(benefit.client.id)
              %td= GrdaWarehouse::Hud::Project.confidentialize(name: project&.name)
              %td= l benefit.enrollment.EntryDate
              %td= benefit.InformationDate
              %td= HUD.data_collection_stage(benefit.DataCollectionStage)
              %td
                - total = benefit.TotalMonthlyIncome&.round(2)
                - if total
                  = format('$%.2f', total)
              %td.text-right
                - if @client.hmis_source_visible_by?(current_user)
                  = link_to 'HMIS', hmi_path(benefit, type: 'IncomeBenefits'), class: 'btn btn-xs btn-secondary btn-muted btn-hmis mb-2'
                  .text-teeny.font-weight-light
                    .text-nowrap
                      Created: #{benefit.DateCreated}
                    .text-nowrap
                      Updated: #{benefit.DateUpdated}
  - else
    .no-data
      No income or benefits on file
