= render 'clients/files/instructions'

= simple_form_for @file, url: client_files_path(@client) do |f|
  - if @file.errors.any?
    .alert.alert-danger
      %p Failed to upload file. Please review the errors below
      %ul.error_list
        - @file.errors.messages.values.uniq.each do |msg|
          %li= msg.first
  .form-inputs
    %h3 What Does This File Contain?
    .c-card.c-card--flush.client-file.mb-6
      .c-card__content.clearfix
        .row
          - @file.class.available_tags.keys.in_groups(3, false) do |batch|
            .col-md
              - batch.each do |group_name|
                - group = @file.class.available_tags[group_name]
                .form-group

                  %h4= group_name
                  - group.each do |item|
                    - options = {class: 'jFileTag'}
                    - data = {}
                    - if item.note.present?
                      - data.merge!({toggle: :popover, trigger: :manual, title: item.name, content: item.note})
                    - if item.consent_form
                      - data.merge!({consent: true})
                    - if item.coc_available
                      - data.merge!({coc_code: true})
                    - if item.requires_effective_date
                      - data.merge!({requires_effective_date: true})
                      - @requires_effective_date = true
                    - if item.requires_expiration_date
                      - data.merge!({requires_expiration_date: true})
                      - @requires_expiration_date = true
                    - options.merge!({data: data})
                    - if GrdaWarehouse::Config.get(:allow_multiple_file_tags)
                      .checkbox
                        %label
                          = render 'clients/files/multi_tag', item: item, f: f, options: options
                          = item.name
                    - else
                      .radio
                        %label
                          = render 'clients/files/single_tag', item: item, f: f, options: options
                          = item.name
                    - if item.included_info.present?
                      %p.ml-4
                        %em= "(includes: #{item.included_info})"
    %h3 File Visibility
    .well
      .row
        .col-lg.pt-no-label
          - if can_manage_client_files?
            = f.input :visible_in_window, as: :boolean, label: 'Visible in the Window?', input_html: { :checked => true }

        .col-lg.jEffectiveDate
          = f.input :effective_date, as: :date_picker, label: 'Effective date or signature date'
        .col-lg.jExpirationDate
          = f.input :expiration_date, as: :date_picker, label: 'Expiration date'
        .col-lg.jConsentFormCoC
          = f.input :coc_codes, collection: current_user.coc_codes_for_consent, include_blank: 'All CoCs', input_html: { multiple: true, placeholder: 'All CoCs' }, as: :select_two, label: 'CoC Codes for Consent'
        - if can_confirm_housing_release?
          .col-lg.pt-no-label.consent-form-fields.hidden
            = f.input :consent_form_confirmed, as: :boolean

    - if can_see_confidential_files?
      %h3 Confidentiality
      .well
        .row
          .col
            = f.input :confidential, as: :boolean, label: 'Confidential File', hint: 'Access will be restricted through associated enrollment'
          .col
            = f.input :enrollment_id, as: :select_two, label: 'Associated Enrollment', collection: @file.enrollments_for_confidential_files(current_user, @client), label_method: :first, value_method: :last, hint: 'Required if confidential'
    %h3 Content
    .well
      .row
        .col-sm-6
          = f.input :client_file, as: :file, required: true
        .col-sm-6
          = f.input :note, as: :text, hint: '(Optional except if other is chosen above.) Give a reason for including this file.'
  .d-flex
    = link_to client_files_path(@client), class: 'btn btn-secondary ml-auto' do
      Cancel &amp; Return to File List
    %button.btn.btn-default.ml-4{type: :submit}
      %i.icon-upload2
      Upload File
