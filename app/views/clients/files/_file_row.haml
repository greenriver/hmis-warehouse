.well{ class: "client-file-#{file.id}"}
  .row
    .col-8
      %h3.d-flex
        .c-checkbox.c-checkbox.mr-4
          %input.jDownload{type: :checkbox, value: file.id, id: file.id, checked: @pre_checked&.include?(file.id)}
          %label{for:file.id, tabindex:'1' }
        - file.tag_list.each do |tag|
          - included_info = @available_tags[tag]&.included_info
          .client__file-tags.mb-2
            = tag
    .col-4.text-right
      - if file.editable_by?(current_user)
        - if consent && ! can_use_separated_consent?
          - anchor = 'consent'
        - else
          - anchor = 'other'
        - if file.uploaded_by?(current_user)
          = link_to(appropriate_file_path(id: file.id, anchor: anchor), method: :delete, data: {confirm: "Would you really like to delete this file?"}, class: 'btn btn-danger btn-sm') do
            %span.icon-cross
            Delete
        - else
          = link_to(appropriate_delete_modal_path(id: file.id), data: {loads_in_pjax_modal: true}, class: 'btn btn-danger btn-sm') do
            %span.icon-cross
            Delete

  .row
    .col-3
      - if file.visible_in_window
        .font-italic.mb-2 This file is visible in the window
      - if file.content_type != 'image/jpeg'
        .mb-2
          = link_to preview_client_file_path(id: file.id), class: 'btn btn-secondary btn-sm', target: '_blank' do
            %span.icon-eye
            Preview
      - else
        .jThumb.mb-2{data: {file: file.id}}
      - if file.content.present?
        %div
          = link_to appropriate_file_path(id: file.id), class: 'btn btn-secondary btn-sm' do
            %span.icon-download2
            Download
    .col-4
      - file.tag_list.each do |tag|
        - included_info = @available_tags[tag]&.included_info
        .client__file-tags.mb-2
          - if included_info.present?
            .files-included-info
              %em Contains:
              = included_info
      - if file.note.present?
        .client__file-note.mb-2
          %strong Note:
          = file.note
      %small.client__file-attribution
        = "#{file.created_at} by "
        = mail_to file.user&.name, file.user&.email, subject: file.tag_list.join(', ')
    .col-4
      - if GrdaWarehouse::AvailableFileTag.contains_consent_form?(file.tag_list)
        %dl
          %dt Consent Type
          %dd= file.consent_type_with_extras
        - if file.active_consent_form?
          .active-release.mb-2{data: {toggle: :tooltip, title: 'You will need to refresh the page to see changes to active release forms'}}
            %i.icon-flag
            Active
        - if @consent_editable
          - unless GrdaWarehouse::Config.get(:release_duration) == 'Use Expiration Date'
            = simple_form_for file, remote: true, url: appropriate_file_path(id: file.id) do |f|
              = f.input :consent_form_signed_on, as: :date_picker, label: 'Effective Date/Signed On', input_html: { disabled: true, class: 'submit-on-change enable-on-load' }
          - if can_confirm_housing_release? && ! GrdaWarehouse::Config.get(:auto_confirm_consent)
            = simple_form_for file, remote: true, url: appropriate_file_path(id: file.id) do |f|
              .mt-2
                = f.input :consent_form_confirmed, as: :boolean, input_html: { class: 'submit-on-change' }, label: _('Consent form confirmed')
          = simple_form_for file, remote: true, url: appropriate_file_path(id: file.id) do |f|
            = f.input :consent_revoked_at, as: :date_picker, label: 'Revoked or Refused On', input_html: { disabled: true, class: 'submit-on-change enable-on-load' }
          - if GrdaWarehouse::Config.get(:release_duration) == 'Use Expiration Date'
            = simple_form_for file, remote: true, url: appropriate_file_path(id: file.id) do |f|
              = f.input :expiration_date, as: :date_picker, label: 'Expiration Date', input_html: { disabled: true, class: 'submit-on-change enable-on-load' }
        - else
          - if file.consent_form_confirmed
            %dl
              - if file.revoked?
                %dt Consent revoked on #{file.consent_revoked_at.to_date}
              - else
                %dt
                  = checkmark file.consent_form_confirmed
                  Consent Confirmed

      - else
        - if file.effective_date
          %dl
            %dt Effective Date/Signed On
            %dd= file.effective_date
            - if file.expiration_date
              %dt Expiration Date
              %dd= file.expiration_date
